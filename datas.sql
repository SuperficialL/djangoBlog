-- Host: localhost    Database: web
-- ------------------------------------------------------
-- Server version	5.7.26-0ubuntu0.18.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `accounts_daynumber`
--

DROP TABLE IF EXISTS `accounts_daynumber`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `accounts_daynumber` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `day` datetime(6) NOT NULL,
  `count` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=1573 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `accounts_daynumber`
--

LOCK TABLES `accounts_daynumber` WRITE;
/*!40000 ALTER TABLE `accounts_daynumber` DISABLE KEYS */;
INSERT INTO `accounts_daynumber` VALUES (1,'2019-03-31 21:18:13.806000',1),(2,'2019-04-01 03:37:53.635000',1),(3,'2019-04-01 03:38:53.753000',1),(4,'2019-04-01 05:13:44.881000',1),(5,'2019-04-01 10:28:17.848000',1),(6,'2019-04-01 11:54:10.633000',1),(7,'2019-04-01 11:54:40.460000',1),(8,'2019-04-01 11:54:52.719000',1),(9,'2019-04-01 11:55:00.043000',1),(10,'2019-04-01 11:55:14.892000',1),(11,'2019-04-01 11:56:27.551000',1),(12,'2019-04-01 11:56:35.730000',1),(13,'2019-04-01 12:01:25.108000',1),(14,'2019-04-01 12:12:54.608000',1),(15,'2019-04-01 12:13:54.015000',1),(16,'2019-04-01 12:45:59.828000',1),(17,'2019-04-01 13:17:10.420000',1),(18,'2019-04-01 13:17:22.152000',1),(19,'2019-04-01 13:17:31.601000',1),(20,'2019-04-01 13:19:09.754000',1),(21,'2019-04-01 13:19:11.740000',1),(22,'2019-04-01 13:19:19.541000',1),(23,'2019-04-01 13:19:53.421000',1),(24,'2019-04-01 13:20:01.063000',1),(25,'2019-04-01 13:21:06.575000',1),(26,'2019-04-01 14:25:28.454000',1),(27,'2019-04-01 18:01:23.918000',1),(28,'2019-04-01 20:46:14.282000',1),(29,'2019-04-01 20:47:38.591000',1),(30,'2019-04-01 20:47:42.279000',1),(31,'2019-04-01 20:47:46.821000',1),(32,'2019-04-01 20:47:51.530000',1),(33,'2019-04-01 20:47:54.049000',1),(34,'2019-04-01 20:47:58.122000',1),(35,'2019-04-01 20:48:02.241000',1),(36,'2019-04-01 20:48:07.566000',1),(37,'2019-04-01 20:48:15.986000',1),(38,'2019-04-01 20:48:24.241000',1),(39,'2019-04-01 20:48:31.991000',1),(40,'2019-04-01 20:48:39.752000',1),(41,'2019-04-01 20:48:46.651000',1),(42,'2019-04-01 20:48:53.847000',1),(43,'2019-04-01 20:49:00.510000',1),(44,'2019-04-01 20:49:07.463000',1),(45,'2019-04-01 20:49:14.239000',1),(46,'2019-04-01 20:49:21.055000',1),(47,'2019-04-01 20:49:27.852000',1),(48,'2019-04-01 20:49:34.668000',1),(49,'2019-04-01 20:49:41.430000',1),(50,'2019-04-01 20:49:47.450000',1),(51,'2019-04-01 20:49:53.855000',1),(52,'2019-04-01 20:49:59.875000',1),(53,'2019-04-01 20:50:06.034000',1),(54,'2019-04-01 20:50:12.203000',1),(55,'2019-04-01 20:50:17.182000',1),(56,'2019-04-01 20:50:22.465000',1),(57,'2019-04-01 20:50:27.650000',1),(58,'2019-04-01 20:50:32.502000',1),(59,'2019-04-01 20:50:36.736000',1),(60,'2019-04-01 20:50:41.173000',1),(61,'2019-04-01 20:50:45.510000',1),(62,'2019-04-01 20:50:49.851000',1),(63,'2019-04-01 20:50:54.318000',1),(64,'2019-04-01 20:50:58.466000',1),(65,'2019-04-01 20:51:02.024000',1),(66,'2019-04-01 20:51:05.942000',1),(67,'2019-04-01 20:51:09.678000',1),(68,'2019-04-01 20:51:13.022000',1),(69,'2019-04-01 20:51:16.601000',1),(70,'2019-04-01 20:51:20.031000',1),(71,'2019-04-01 20:51:21.909000',1),(72,'2019-04-01 20:51:23.956000',1),(73,'2019-04-01 20:51:26.047000',1),(74,'2019-04-01 20:51:27.831000',1),(75,'2019-04-01 20:51:29.795000',1),(76,'2019-04-01 20:51:31.442000',1),(77,'2019-04-01 20:51:33.211000',1),(78,'2019-04-01 20:51:35.034000',1),(79,'2019-04-01 20:51:36.492000',1),(80,'2019-04-01 20:51:38.071000',1),(81,'2019-04-01 20:51:39.606000',1),(82,'2019-04-01 22:26:00.196000',1),(83,'2019-04-01 22:33:56.303000',1),(84,'2019-04-01 22:34:07.724000',1),(85,'2019-04-01 22:34:13.654000',1),(86,'2019-04-01 22:34:19.707000',1),(87,'2019-04-01 22:34:25.912000',1),(88,'2019-04-01 22:34:32.389000',1),(89,'2019-04-01 22:34:41.145000',1),(90,'2019-04-01 22:34:53.958000',1),(91,'2019-04-01 22:35:06.595000',1),(92,'2019-04-01 22:35:19.242000',1),(93,'2019-04-01 22:35:31.892000',1),(94,'2019-04-01 22:36:35.204000',1),(95,'2019-04-01 22:46:02.839000',1),(96,'2019-04-02 01:36:00.037000',1),(97,'2019-04-02 01:36:00.528000',1),(98,'2019-04-02 01:36:01.406000',1),(99,'2019-04-02 01:36:03.653000',1),(100,'2019-04-02 01:36:03.935000',1),(101,'2019-04-02 01:36:04.232000',1),(102,'2019-04-02 01:36:04.532000',1),(103,'2019-04-02 01:36:04.826000',1),(104,'2019-04-02 01:36:05.298000',1),(105,'2019-04-02 01:36:05.562000',1),(106,'2019-04-02 01:36:05.814000',1),(107,'2019-04-02 01:36:06.873000',1),(108,'2019-04-02 01:36:07.314000',1),(109,'2019-04-02 01:36:07.604000',1),(110,'2019-04-02 01:36:07.932000',1),(111,'2019-04-02 01:36:08.234000',1),(112,'2019-04-02 01:36:08.512000',1),(113,'2019-04-02 01:36:08.799000',1),(114,'2019-04-02 01:36:09.113000',1),(115,'2019-04-02 01:36:09.415000',1),(116,'2019-04-02 01:36:09.732000',1),(117,'2019-04-02 01:36:10.016000',1),(118,'2019-04-02 01:36:10.391000',1),(119,'2019-04-02 01:36:11.397000',1),(120,'2019-04-02 01:36:11.884000',1),(121,'2019-04-02 01:36:12.207000',1),(122,'2019-04-02 01:36:12.487000',1),(123,'2019-04-02 01:36:12.771000',1),(124,'2019-04-02 01:36:13.078000',1),(125,'2019-04-02 01:36:13.363000',1),(126,'2019-04-02 01:36:17.489000',1),(127,'2019-04-02 01:36:17.946000',1),(128,'2019-04-02 01:36:18.401000',1),(129,'2019-04-02 01:36:18.968000',1),(130,'2019-04-02 01:36:19.251000',1),(131,'2019-04-02 01:36:19.565000',1),(132,'2019-04-02 02:54:58.146000',1),(133,'2019-04-02 05:31:39.773000',1),(134,'2019-04-02 06:00:47.998000',1),(135,'2019-04-02 06:08:52.936000',1),(136,'2019-04-02 06:15:12.823000',1),(137,'2019-04-02 06:28:46.991000',1),(138,'2019-04-02 08:26:26.367000',1),(139,'2019-04-02 09:41:48.242000',1),(140,'2019-04-02 10:07:01.011000',1),(141,'2019-04-02 10:07:47.841000',1),(142,'2019-04-02 10:08:59.964000',1),(143,'2019-04-02 10:09:26.508000',1),(144,'2019-04-02 10:10:06.061000',1),(145,'2019-04-02 10:11:25.756000',1),(146,'2019-04-02 10:13:24.045000',1),(147,'2019-04-02 10:22:25.420000',1),(148,'2019-04-02 10:31:52.848000',1),(149,'2019-04-02 10:41:21.338000',1),(150,'2019-04-02 10:50:49.007000',1),(151,'2019-04-02 11:00:17.140000',1),(152,'2019-04-02 11:09:44.866000',1),(153,'2019-04-02 11:19:13.103000',1),(154,'2019-04-02 11:28:40.846000',1),(155,'2019-04-02 11:38:09.085000',1),(156,'2019-04-02 11:47:36.939000',1),(157,'2019-04-02 11:57:05.146000',1),(158,'2019-04-02 12:03:28.809000',1),(159,'2019-04-02 12:06:32.871000',1),(160,'2019-04-02 12:13:29.685000',1),(161,'2019-04-02 12:16:00.825000',1),(162,'2019-04-02 12:19:19.388000',1),(163,'2019-04-02 12:21:25.496000',1),(164,'2019-04-02 12:21:34.918000',1),(165,'2019-04-02 12:21:40.116000',1),(166,'2019-04-02 12:21:41.249000',1),(167,'2019-04-02 12:21:44.077000',1),(168,'2019-04-02 12:21:52.006000',1),(169,'2019-04-02 12:23:22.838000',1),(170,'2019-04-02 12:23:25.282000',1),(171,'2019-04-02 12:23:26.890000',1),(172,'2019-04-02 12:23:28.453000',1),(173,'2019-04-02 12:25:29.419000',1),(174,'2019-04-02 12:34:57.079000',1),(175,'2019-04-02 12:44:25.382000',1),(176,'2019-04-02 12:53:47.216000',1),(177,'2019-04-02 12:53:52.870000',1),(178,'2019-04-02 12:54:56.550000',1),(179,'2019-04-02 12:55:39.694000',1),(180,'2019-04-02 13:03:20.881000',1),(181,'2019-04-02 13:12:49.318000',1),(182,'2019-04-02 13:22:16.856000',1),(183,'2019-04-02 13:31:45.070000',1),(184,'2019-04-02 13:41:12.871000',1),(185,'2019-04-02 13:50:41.385000',1),(186,'2019-04-02 14:00:08.850000',1),(187,'2019-04-02 14:09:37.228000',1),(188,'2019-04-02 14:44:10.674000',1),(189,'2019-04-02 15:34:40.761000',1),(190,'2019-04-02 18:05:24.490000',1),(191,'2019-04-02 19:36:30.400000',1),(192,'2019-04-02 19:47:40.226000',1),(193,'2019-04-02 20:07:45.823000',1),(194,'2019-04-02 20:08:46.588000',1),(195,'2019-04-02 20:57:55.729000',1),(196,'2019-04-02 22:30:36.557000',1),(197,'2019-04-02 22:34:36.823000',1),(198,'2019-04-02 22:34:39.954000',1),(199,'2019-04-02 22:34:43.097000',1),(200,'2019-04-02 22:34:45.584000',1),(201,'2019-04-02 22:37:15.407000',1),(202,'2019-04-02 22:39:19.002000',1),(203,'2019-04-02 22:41:56.873000',1),(204,'2019-04-02 22:41:58.455000',1),(205,'2019-04-02 22:42:01.673000',1),(206,'2019-04-02 22:43:30.202000',1),(207,'2019-04-02 22:43:54.010000',1),(208,'2019-04-02 22:44:23.602000',1),(209,'2019-04-02 22:45:19.114000',1),(210,'2019-04-02 22:46:08.104000',1),(211,'2019-04-02 22:47:01.890000',1),(212,'2019-04-02 22:48:01.208000',1),(213,'2019-04-03 00:04:08.047000',1),(214,'2019-04-03 00:04:12.239000',1),(215,'2019-04-02 11:39:29.568000',1),(216,'2019-04-02 11:39:48.819000',1),(217,'2019-04-02 11:39:50.497000',1),(218,'2019-04-02 11:39:50.732000',1),(219,'2019-04-02 11:39:51.095000',1),(220,'2019-04-02 11:43:37.403000',1),(221,'2019-04-02 11:53:02.345000',1),(222,'2019-04-02 11:54:49.847000',1),(223,'2019-04-02 11:56:00.163000',1),(224,'2019-04-02 11:56:45.044000',1),(225,'2019-04-02 11:57:54.162000',1),(226,'2019-04-02 11:57:55.692000',1),(227,'2019-04-02 11:58:57.339000',1),(228,'2019-04-02 11:59:03.837000',1),(229,'2019-04-02 11:59:55.633000',1),(230,'2019-04-02 12:00:20.029000',1),(231,'2019-04-02 12:01:20.232000',1),(232,'2019-04-02 12:03:01.728000',1),(233,'2019-04-02 12:03:13.676000',1),(234,'2019-04-02 12:03:49.127000',1),(235,'2019-04-02 12:05:22.744000',1),(236,'2019-04-02 12:06:10.633000',1),(237,'2019-04-02 12:07:12.546000',1),(238,'2019-04-02 12:07:23.687000',1),(239,'2019-04-02 12:08:47.248000',1),(240,'2019-04-02 12:11:33.418000',1),(241,'2019-04-02 12:11:41.388000',1),(242,'2019-04-02 12:12:08.472000',1),(243,'2019-04-02 12:14:15.499000',1),(244,'2019-04-02 12:14:45.693000',1),(245,'2019-04-02 23:12:38.623000',1),(246,'2019-04-03 00:39:50.145000',1),(247,'2019-04-03 00:40:33.604000',1),(248,'2019-04-03 00:40:55.953000',1),(249,'2019-04-03 00:41:21.332000',1),(250,'2019-04-03 00:53:23.331000',1),(251,'2019-04-03 00:53:26.461000',1),(252,'2019-04-03 00:54:00.061000',1),(253,'2019-04-03 00:56:54.197000',1),(254,'2019-04-03 00:57:01.449000',1),(255,'2019-04-03 01:00:43.765000',1),(256,'2019-04-03 01:07:14.708000',1),(257,'2019-04-03 01:07:36.662000',1),(258,'2019-04-03 01:08:00.827000',1),(259,'2019-04-03 01:08:29.496000',1),(260,'2019-04-03 01:08:31.967000',1),(261,'2019-04-03 01:08:32.804000',1),(262,'2019-04-03 01:09:53.020000',1),(263,'2019-04-03 01:17:33.530000',1),(264,'2019-04-03 01:23:01.337000',1),(265,'2019-04-03 01:23:04.291000',1),(266,'2019-04-03 01:23:05.464000',1),(267,'2019-04-03 01:25:06.088000',1),(268,'2019-04-03 01:25:08.474000',1),(269,'2019-04-03 01:25:10.958000',1),(270,'2019-04-03 01:25:23.027000',1),(271,'2019-04-03 01:29:25.881000',1),(272,'2019-04-03 01:29:28.260000',1),(273,'2019-04-03 01:29:30.349000',1),(274,'2019-04-03 01:29:45.899000',1),(275,'2019-04-03 01:30:46.590000',1),(276,'2019-04-03 01:30:49.931000',1),(277,'2019-04-03 01:30:58.652000',1),(278,'2019-04-03 01:31:14.193000',1),(279,'2019-04-03 01:31:16.040000',1),(280,'2019-04-03 01:32:35.395000',1),(281,'2019-04-03 01:34:03.427000',1),(282,'2019-04-03 01:34:33.643000',1),(283,'2019-04-03 01:40:09.957000',1),(284,'2019-04-03 01:40:11.091000',1),(285,'2019-04-03 01:40:22.345000',1),(286,'2019-04-03 01:40:45.145000',1),(287,'2019-04-03 01:42:15.482000',1),(288,'2019-04-03 01:42:46.465000',1),(289,'2019-04-03 01:44:19.351000',1),(290,'2019-04-03 01:44:57.228000',1),(291,'2019-04-03 01:45:18.762000',1),(292,'2019-04-03 01:51:26.000000',1),(293,'2019-04-03 01:52:47.793000',1),(294,'2019-04-03 01:53:23.800000',1),(295,'2019-04-03 01:53:25.801000',1),(296,'2019-04-03 01:54:37.425000',1),(297,'2019-04-03 01:54:47.009000',1),(298,'2019-04-03 01:57:39.072000',1),(299,'2019-04-03 01:58:13.574000',1),(300,'2019-04-03 01:58:15.216000',1),(301,'2019-04-03 01:58:41.356000',1),(302,'2019-04-03 01:58:49.621000',1),(303,'2019-04-03 02:07:08.176000',1),(304,'2019-04-03 02:08:29.592000',1),(305,'2019-04-03 02:10:03.856000',1),(306,'2019-04-03 02:10:24.533000',1),(307,'2019-04-03 02:10:26.282000',1),(308,'2019-04-03 02:11:37.772000',1),(309,'2019-04-03 02:14:58.490000',1),(310,'2019-04-03 02:15:12.452000',1),(311,'2019-04-03 02:27:29.242000',1),(312,'2019-04-03 02:35:13.107000',1),(313,'2019-04-03 02:35:15.101000',1),(314,'2019-04-03 02:35:59.669000',1),(315,'2019-04-03 02:36:08.918000',1),(316,'2019-04-03 02:36:10.992000',1),(317,'2019-04-03 02:36:25.991000',1),(318,'2019-04-03 02:36:28.263000',1),(319,'2019-04-03 02:38:01.611000',1),(320,'2019-04-03 02:38:25.370000',1),(321,'2019-04-03 02:38:27.301000',1),(322,'2019-04-03 02:39:21.567000',1),(323,'2019-04-03 02:39:53.945000',1),(324,'2019-04-03 02:39:55.256000',1),(325,'2019-04-03 02:39:59.928000',1),(326,'2019-04-03 02:40:52.968000',1),(327,'2019-04-03 02:57:52.594000',1),(328,'2019-04-03 03:02:33.870000',1),(329,'2019-04-03 03:03:20.748000',1),(330,'2019-04-03 03:03:51.028000',1),(331,'2019-04-03 03:04:14.732000',1),(332,'2019-04-03 03:04:17.220000',1),(333,'2019-04-03 03:11:53.465000',1),(334,'2019-04-03 03:12:42.007000',1),(335,'2019-04-03 03:12:49.958000',1),(336,'2019-04-03 03:12:54.617000',1),(337,'2019-04-03 03:36:07.051000',1),(338,'2019-04-03 03:36:21.540000',1),(339,'2019-04-03 03:37:06.769000',1),(340,'2019-04-03 03:37:10.043000',1),(341,'2019-04-03 03:37:15.691000',1),(342,'2019-04-03 03:38:32.850000',1),(343,'2019-04-03 03:38:57.543000',1),(344,'2019-04-03 03:40:09.237000',1),(345,'2019-04-03 03:41:37.400000',1),(346,'2019-04-03 03:42:14.243000',1),(347,'2019-04-03 03:42:59.144000',1),(348,'2019-04-03 03:43:00.571000',1),(349,'2019-04-03 03:53:11.737000',1),(350,'2019-04-03 03:53:36.801000',1),(351,'2019-04-03 03:54:13.488000',1),(352,'2019-04-03 03:54:15.884000',1),(353,'2019-04-03 03:54:18.442000',1),(354,'2019-04-03 03:59:44.122000',1),(355,'2019-04-03 04:00:55.015000',1),(356,'2019-04-03 04:04:01.999000',1),(357,'2019-04-03 04:04:04.273000',1),(358,'2019-04-03 04:04:07.220000',1),(359,'2019-04-03 04:04:09.403000',1),(360,'2019-04-03 04:04:10.572000',1),(361,'2019-04-03 04:04:13.659000',1),(362,'2019-04-03 04:04:14.219000',1),(363,'2019-04-03 04:04:14.928000',1),(364,'2019-04-03 04:04:17.450000',1),(365,'2019-04-03 04:04:18.781000',1),(366,'2019-04-03 04:04:19.703000',1),(367,'2019-04-03 05:13:57.633000',1),(368,'2019-04-03 05:14:13.794000',1),(369,'2019-04-03 05:14:55.694000',1),(370,'2019-04-03 05:15:23.287000',1),(371,'2019-04-03 05:32:38.728000',1),(372,'2019-04-03 05:32:55.372000',1),(373,'2019-04-03 05:34:52.901000',1),(374,'2019-04-03 05:37:59.840000',1),(375,'2019-04-03 05:39:42.870000',1),(376,'2019-04-03 05:39:44.277000',1),(377,'2019-04-03 05:39:45.516000',1),(378,'2019-04-03 05:39:46.470000',1),(379,'2019-04-03 05:39:47.209000',1),(380,'2019-04-03 05:39:47.964000',1),(381,'2019-04-03 05:39:48.606000',1),(382,'2019-04-03 05:39:49.636000',1),(383,'2019-04-03 05:39:50.175000',1),(384,'2019-04-03 05:39:51.181000',1),(385,'2019-04-03 05:39:53.736000',1),(386,'2019-04-03 05:39:57.048000',1),(387,'2019-04-03 05:46:06.826000',1),(388,'2019-04-03 06:29:58.357000',1),(389,'2019-04-03 06:31:17.161000',1),(390,'2019-04-03 06:31:28.315000',1),(391,'2019-04-03 06:31:51.153000',1),(392,'2019-04-03 06:34:05.109000',1),(393,'2019-04-03 06:42:15.887000',1),(394,'2019-04-03 06:42:50.489000',1),(395,'2019-04-03 06:43:13.916000',1),(396,'2019-04-03 06:46:06.795000',1),(397,'2019-04-03 06:47:02.852000',1),(398,'2019-04-03 06:49:00.179000',1),(399,'2019-04-03 06:51:50.919000',1),(400,'2019-04-03 06:52:02.455000',1),(401,'2019-04-03 06:52:20.214000',1),(402,'2019-04-03 06:52:35.606000',1),(403,'2019-04-03 06:52:45.819000',1),(404,'2019-04-03 06:52:56.357000',1),(405,'2019-04-03 06:53:02.882000',1),(406,'2019-04-03 06:53:08.371000',1),(407,'2019-04-03 06:53:19.532000',1),(408,'2019-04-03 06:53:48.215000',1),(409,'2019-04-03 06:54:00.153000',1),(410,'2019-04-03 06:55:33.394000',1),(411,'2019-04-03 06:55:49.431000',1),(412,'2019-04-03 06:55:58.088000',1),(413,'2019-04-03 06:56:15.270000',1),(414,'2019-04-03 06:58:42.842000',1),(415,'2019-04-03 06:58:57.283000',1),(416,'2019-04-03 06:59:20.261000',1),(417,'2019-04-03 06:59:45.012000',1),(418,'2019-04-03 07:00:07.226000',1),(419,'2019-04-03 07:00:17.790000',1),(420,'2019-04-03 07:00:31.968000',1),(421,'2019-04-03 07:00:42.305000',1),(422,'2019-04-03 07:00:53.542000',1),(423,'2019-04-03 07:02:46.622000',1),(424,'2019-04-03 07:02:50.736000',1),(425,'2019-04-03 07:04:03.408000',1),(426,'2019-04-03 07:05:00.425000',1),(427,'2019-04-03 07:05:56.868000',1),(428,'2019-04-03 07:06:27.176000',1),(429,'2019-04-03 07:06:33.036000',1),(430,'2019-04-03 07:20:16.530000',1),(431,'2019-04-03 07:20:29.809000',1),(432,'2019-04-03 07:20:58.904000',1),(433,'2019-04-03 07:21:14.188000',1),(434,'2019-04-03 07:21:21.132000',1),(435,'2019-04-03 07:21:47.621000',1),(436,'2019-04-03 07:23:12.102000',1),(437,'2019-04-03 07:23:41.084000',1),(438,'2019-04-03 07:24:02.816000',1),(439,'2019-04-03 07:24:09.112000',1),(440,'2019-04-03 07:25:37.228000',1),(441,'2019-04-03 07:26:01.326000',1),(442,'2019-04-03 07:26:25.719000',1),(443,'2019-04-03 07:27:17.439000',1),(444,'2019-04-03 07:27:48.494000',1),(445,'2019-04-03 07:28:30.416000',1),(446,'2019-04-03 07:28:38.374000',1),(447,'2019-04-03 07:29:28.724000',1),(448,'2019-04-03 07:29:30.641000',1),(449,'2019-04-03 07:29:31.603000',1),(450,'2019-04-03 07:29:32.461000',1),(451,'2019-04-03 07:29:55.483000',1),(452,'2019-04-03 07:30:27.553000',1),(453,'2019-04-03 07:32:03.656000',1),(454,'2019-04-03 07:36:26.587000',1),(455,'2019-04-03 07:36:36.665000',1),(456,'2019-04-03 07:36:37.433000',1),(457,'2019-04-03 07:39:37.981000',1),(458,'2019-04-03 07:39:40.698000',1),(459,'2019-04-03 07:39:41.537000',1),(460,'2019-04-03 07:39:42.317000',1),(461,'2019-04-03 07:41:20.231000',1),(462,'2019-04-03 07:41:22.354000',1),(463,'2019-04-03 07:43:22.500000',1),(464,'2019-04-03 07:57:08.746000',1),(465,'2019-04-03 07:59:26.803000',1),(466,'2019-04-03 07:59:40.616000',1),(467,'2019-04-03 08:00:10.128000',1),(468,'2019-04-03 08:02:11.583000',1),(469,'2019-04-03 08:03:05.386000',1),(470,'2019-04-03 08:03:34.428000',1),(471,'2019-04-03 08:04:31.224000',1),(472,'2019-04-03 08:04:50.966000',1),(473,'2019-04-03 08:05:10.113000',1),(474,'2019-04-03 08:05:55.112000',1),(475,'2019-04-03 08:06:12.985000',1),(476,'2019-04-03 08:06:13.700000',1),(477,'2019-04-03 08:06:21.458000',1),(478,'2019-04-03 08:06:34.234000',1),(479,'2019-04-03 08:06:47.774000',1),(480,'2019-04-03 08:07:37.770000',1),(481,'2019-04-03 08:08:02.002000',1),(482,'2019-04-03 08:08:10.986000',1),(483,'2019-04-03 08:08:26.037000',1),(484,'2019-04-03 08:08:41.539000',1),(485,'2019-04-03 08:09:13.628000',1),(486,'2019-04-03 08:10:02.129000',1),(487,'2019-04-03 08:10:18.034000',1),(488,'2019-04-03 08:10:32.293000',1),(489,'2019-04-03 08:11:01.355000',1),(490,'2019-04-03 08:11:39.201000',1),(491,'2019-04-03 08:11:40.197000',1),(492,'2019-04-03 08:12:35.111000',1),(493,'2019-04-03 08:13:03.763000',1),(494,'2019-04-03 08:13:40.977000',1),(495,'2019-04-03 08:13:48.165000',1),(496,'2019-04-03 08:14:25.628000',1),(497,'2019-04-03 08:14:26.931000',1),(498,'2019-04-03 08:14:29.210000',1),(499,'2019-04-03 08:14:38.945000',1),(500,'2019-04-03 08:14:39.853000',1),(501,'2019-04-03 08:15:08.011000',1),(502,'2019-04-03 08:15:08.762000',1),(503,'2019-04-03 08:15:09.092000',1),(504,'2019-04-03 08:15:19.939000',1),(505,'2019-04-03 08:46:00.653000',1),(506,'2019-04-03 08:46:16.666000',1),(507,'2019-04-03 08:46:30.913000',1),(508,'2019-04-03 08:47:54.769000',1),(509,'2019-04-03 08:48:04.576000',1),(510,'2019-04-03 08:48:14.067000',1),(511,'2019-04-03 08:48:37.624000',1),(512,'2019-04-03 08:49:04.891000',1),(513,'2019-04-03 08:49:15.485000',1),(514,'2019-04-03 08:49:27.766000',1),(515,'2019-04-03 08:49:36.522000',1),(516,'2019-04-03 08:50:24.138000',1),(517,'2019-04-03 08:51:01.566000',1),(518,'2019-04-03 08:57:11.872000',1),(519,'2019-04-03 08:57:38.954000',1),(520,'2019-04-03 08:57:49.442000',1),(521,'2019-04-03 09:06:26.861000',1),(522,'2019-04-04 07:27:01.766000',1),(523,'2019-04-04 07:27:13.597000',1),(524,'2019-04-04 07:27:43.792000',1),(525,'2019-04-04 07:29:08.965000',1),(526,'2019-04-04 07:40:50.817000',1),(527,'2019-04-04 07:41:55.471000',1),(528,'2019-04-04 07:45:25.358000',1),(529,'2019-04-04 07:45:28.539000',1),(530,'2019-04-04 07:49:55.302000',1),(531,'2019-04-04 07:50:04.798000',1),(532,'2019-04-11 04:23:58.994000',1),(533,'2019-04-11 04:24:43.498000',1),(534,'2019-04-11 04:24:50.489000',1),(535,'2019-04-11 04:25:03.765000',1),(536,'2019-04-11 04:25:23.267000',1),(537,'2019-04-11 04:25:24.274000',1),(538,'2019-04-11 04:25:25.236000',1),(539,'2019-04-11 04:25:25.754000',1),(540,'2019-04-11 04:25:26.392000',1),(541,'2019-04-11 04:25:28.227000',1),(542,'2019-04-11 04:25:28.728000',1),(543,'2019-04-11 04:25:30.740000',1),(544,'2019-04-11 04:29:44.909000',1),(545,'2019-04-11 04:29:50.512000',1),(546,'2019-04-11 04:31:42.478000',1),(547,'2019-04-11 04:36:56.080000',1),(548,'2019-04-11 04:39:36.176000',1),(549,'2019-04-11 04:40:22.904000',1),(550,'2019-04-11 04:42:54.494000',1),(551,'2019-04-11 04:43:19.899000',1),(552,'2019-04-11 04:54:13.363000',1),(553,'2019-04-11 06:01:51.455000',1),(554,'2019-04-11 06:02:30.418000',1),(555,'2019-04-11 06:02:32.939000',1),(556,'2019-04-11 06:02:33.841000',1),(557,'2019-04-11 06:02:34.445000',1),(558,'2019-04-11 06:02:34.994000',1),(559,'2019-04-11 06:02:35.519000',1),(560,'2019-04-11 06:02:36.069000',1),(561,'2019-04-11 06:02:36.543000',1),(562,'2019-04-11 06:02:37.794000',1),(563,'2019-04-11 06:02:38.244000',1),(564,'2019-04-11 06:14:06.147000',1),(565,'2019-04-11 06:14:08.834000',1),(566,'2019-04-11 06:15:41.489000',1),(567,'2019-04-11 06:15:43.256000',1),(568,'2019-04-11 06:22:34.285000',1),(569,'2019-04-11 06:24:12.687000',1),(570,'2019-04-11 06:26:10.533000',1),(571,'2019-04-11 06:29:14.499000',1),(572,'2019-04-11 06:29:15.519000',1),(573,'2019-04-11 06:51:48.299000',1),(574,'2019-04-11 06:52:31.506000',1),(575,'2019-04-11 06:52:53.622000',1),(576,'2019-04-11 07:04:20.296000',1),(577,'2019-04-11 07:07:26.345000',1),(578,'2019-04-11 07:08:27.911000',1),(579,'2019-04-11 07:19:52.434000',1),(580,'2019-04-11 07:25:53.810000',1),(581,'2019-04-11 07:26:29.120000',1),(582,'2019-04-11 07:27:28.326000',1),(583,'2019-04-11 07:28:35.971000',1),(584,'2019-04-11 07:28:49.754000',1),(585,'2019-04-11 07:28:55.215000',1),(586,'2019-04-11 07:28:56.026000',1),(587,'2019-04-11 07:28:57.272000',1),(588,'2019-04-11 07:29:00.973000',1),(589,'2019-04-11 07:29:02.305000',1),(590,'2019-04-11 07:29:23.827000',1),(591,'2019-04-11 07:31:03.346000',1),(592,'2019-04-11 07:31:20.752000',1),(593,'2019-04-11 07:35:30.783000',1),(594,'2019-04-11 07:42:47.047000',1),(595,'2019-04-11 07:44:28.928000',1),(596,'2019-04-11 08:12:25.254000',1),(597,'2019-04-11 08:12:32.646000',1),(598,'2019-04-11 08:12:34.739000',1),(599,'2019-04-11 08:12:43.127000',1),(600,'2019-04-11 08:14:22.748000',1),(601,'2019-04-11 08:14:26.617000',1),(602,'2019-04-11 08:14:28.482000',1),(603,'2019-04-11 08:14:29.747000',1),(604,'2019-04-11 08:14:30.726000',1),(605,'2019-04-11 08:19:13.672000',1),(606,'2019-04-11 08:22:35.631000',1),(607,'2019-04-11 08:22:36.932000',1),(608,'2019-04-11 08:22:39.337000',1),(609,'2019-04-11 08:24:15.392000',1),(610,'2019-04-11 08:24:17.644000',1),(611,'2019-04-11 08:24:18.293000',1),(612,'2019-04-11 08:24:18.510000',1),(613,'2019-04-11 08:24:18.729000',1),(614,'2019-04-11 08:24:30.226000',1),(615,'2019-04-11 08:24:38.536000',1),(616,'2019-04-11 08:24:39.375000',1),(617,'2019-04-11 08:24:39.591000',1),(618,'2019-04-11 08:24:39.799000',1),(619,'2019-04-11 08:24:40.005000',1),(620,'2019-04-11 08:24:51.834000',1),(621,'2019-04-11 08:24:52.559000',1),(622,'2019-04-11 08:25:10.271000',1),(623,'2019-04-11 08:25:15.540000',1),(624,'2019-04-11 08:25:23.464000',1),(625,'2019-04-11 08:25:23.477000',1),(626,'2019-04-11 08:25:24.307000',1),(627,'2019-04-11 08:25:24.325000',1),(628,'2019-04-11 08:25:27.503000',1),(629,'2019-04-11 08:26:12.855000',1),(630,'2019-04-11 08:26:17.861000',1),(631,'2019-04-11 08:26:18.501000',1),(632,'2019-04-11 08:29:38.626000',1),(633,'2019-04-11 08:45:56.648000',1),(634,'2019-04-11 08:53:50.609000',1),(635,'2019-04-11 08:54:47.742000',1),(636,'2019-04-11 08:55:47.050000',1),(637,'2019-04-11 08:56:27.137000',1),(638,'2019-04-11 08:56:46.745000',1),(639,'2019-04-11 08:58:23.130000',1),(640,'2019-04-11 08:58:59.194000',1),(641,'2019-04-11 08:59:08.541000',1),(642,'2019-04-11 09:01:15.103000',1),(643,'2019-04-11 09:01:18.681000',1),(644,'2019-04-11 09:01:30.062000',1),(645,'2019-04-11 09:01:38.969000',1),(646,'2019-04-11 09:01:46.254000',1),(647,'2019-04-11 09:01:48.558000',1),(648,'2019-04-11 09:01:56.706000',1),(649,'2019-04-11 09:01:58.403000',1),(650,'2019-04-11 09:12:10.549000',1),(651,'2019-04-11 09:12:12.582000',1),(652,'2019-04-11 09:12:14.788000',1),(653,'2019-04-11 09:18:23.217000',1),(654,'2019-04-11 09:18:52.906000',1),(655,'2019-04-11 09:18:55.615000',1),(656,'2019-04-11 09:18:58.853000',1),(657,'2019-04-11 09:19:04.465000',1),(658,'2019-04-11 09:21:47.216000',1),(659,'2019-04-11 09:23:28.864000',1),(660,'2019-04-11 09:23:30.173000',1),(661,'2019-04-11 09:23:31.758000',1),(662,'2019-04-11 09:23:59.733000',1),(663,'2019-04-11 09:24:11.959000',1),(664,'2019-04-11 09:24:18.181000',1),(665,'2019-04-11 09:24:53.151000',1),(666,'2019-04-11 09:25:17.286000',1),(667,'2019-04-11 09:25:59.329000',1),(668,'2019-04-11 09:26:28.365000',1),(669,'2019-04-11 09:26:46.184000',1),(670,'2019-04-11 09:27:11.457000',1),(671,'2019-04-11 09:28:41.071000',1),(672,'2019-04-11 09:29:05.894000',1),(673,'2019-04-11 09:29:26.434000',1),(674,'2019-04-11 09:31:16.537000',1),(675,'2019-04-11 09:31:52.764000',1),(676,'2019-04-11 09:36:33.173000',1),(677,'2019-04-11 09:37:25.334000',1),(678,'2019-04-11 09:37:31.605000',1),(679,'2019-04-11 09:37:48.285000',1),(680,'2019-04-11 09:37:50.190000',1),(681,'2019-04-11 09:39:47.266000',1),(682,'2019-04-11 09:42:50.748000',1),(683,'2019-04-11 09:42:52.408000',1),(684,'2019-04-11 09:43:00.023000',1),(685,'2019-04-11 09:43:01.701000',1),(686,'2019-04-11 09:43:05.372000',1),(687,'2019-04-11 09:45:30.860000',1),(688,'2019-04-11 09:45:40.062000',1),(689,'2019-04-11 09:45:41.223000',1),(690,'2019-04-11 09:45:41.957000',1),(691,'2019-04-11 09:45:42.302000',1),(692,'2019-04-11 09:45:42.692000',1),(693,'2019-04-11 09:45:43.042000',1),(694,'2019-04-11 09:45:43.424000',1),(695,'2019-04-11 09:45:44.818000',1),(696,'2019-04-11 09:45:49.896000',1),(697,'2019-04-11 11:57:34.682000',1),(698,'2019-04-11 12:09:53.509000',1),(699,'2019-04-11 12:09:54.995000',1),(700,'2019-04-11 12:10:44.301000',1),(701,'2019-04-11 12:10:46.008000',1),(702,'2019-04-11 12:13:05.815000',1),(703,'2019-04-11 12:13:43.074000',1),(704,'2019-04-11 12:15:17.816000',1),(705,'2019-04-11 12:15:34.490000',1),(706,'2019-04-11 12:17:07.432000',1),(707,'2019-04-11 12:17:23.782000',1),(708,'2019-04-11 12:18:09.778000',1),(709,'2019-04-11 12:18:38.177000',1),(710,'2019-04-11 12:18:40.782000',1),(711,'2019-04-11 12:18:42.220000',1),(712,'2019-04-11 12:18:49.855000',1),(713,'2019-04-11 12:18:50.793000',1),(714,'2019-04-11 12:18:53.004000',1),(715,'2019-04-11 12:18:54.979000',1),(716,'2019-04-11 12:18:56.710000',1),(717,'2019-04-11 12:18:58.058000',1),(718,'2019-04-11 12:19:00.477000',1),(719,'2019-04-11 12:19:06.061000',1),(720,'2019-04-11 12:19:07.027000',1),(721,'2019-04-11 12:19:07.980000',1),(722,'2019-04-11 12:19:38.219000',1),(723,'2019-04-11 12:19:44.176000',1),(724,'2019-04-11 12:19:45.792000',1),(725,'2019-04-11 12:20:46.559000',1),(726,'2019-04-11 12:24:34.845000',1),(727,'2019-04-11 12:24:47.492000',1),(728,'2019-04-11 12:25:14.266000',1),(729,'2019-04-11 12:25:39.823000',1),(730,'2019-04-11 12:26:08.023000',1),(731,'2019-04-11 12:26:13.111000',1),(732,'2019-04-11 12:26:36.227000',1),(733,'2019-04-11 12:35:51.065000',1),(734,'2019-04-11 12:35:53.442000',1),(735,'2019-04-11 12:37:14.544000',1),(736,'2019-04-11 12:39:34.113000',1),(737,'2019-04-11 12:41:06.193000',1),(738,'2019-04-11 12:41:07.311000',1),(739,'2019-04-11 12:41:11.966000',1),(740,'2019-04-11 12:43:48.373000',1),(741,'2019-04-11 12:44:15.754000',1),(742,'2019-04-11 12:44:16.594000',1),(743,'2019-04-11 12:44:17.961000',1),(744,'2019-04-11 12:47:38.751000',1),(745,'2019-04-11 12:48:34.729000',1),(746,'2019-04-11 12:48:35.912000',1),(747,'2019-04-11 12:48:36.598000',1),(748,'2019-04-11 12:48:59.427000',1),(749,'2019-04-11 12:48:59.985000',1),(750,'2019-04-11 12:49:00.060000',1),(751,'2019-04-11 12:49:01.476000',1),(752,'2019-04-11 12:49:49.375000',1),(753,'2019-04-11 12:49:50.289000',1),(754,'2019-04-11 12:50:04.107000',1),(755,'2019-04-11 12:50:05.375000',1),(756,'2019-04-11 12:50:06.000000',1),(757,'2019-04-11 12:50:06.436000',1),(758,'2019-04-11 12:50:06.547000',1),(759,'2019-04-11 12:50:39.224000',1),(760,'2019-04-11 12:50:56.410000',1),(761,'2019-04-11 12:51:07.179000',1),(762,'2019-04-11 12:51:54.833000',1),(763,'2019-04-11 12:51:55.583000',1),(764,'2019-04-11 12:53:07.566000',1),(765,'2019-04-11 12:53:15.217000',1),(766,'2019-04-11 12:56:03.364000',1),(767,'2019-04-11 12:57:15.329000',1),(768,'2019-04-11 12:59:34.892000',1),(769,'2019-04-11 13:00:43.980000',1),(770,'2019-04-11 13:02:18.849000',1),(771,'2019-04-11 13:04:55.568000',1),(772,'2019-04-11 13:06:02.470000',1),(773,'2019-04-11 13:06:05.481000',1),(774,'2019-04-11 13:06:36.987000',1),(775,'2019-04-11 13:07:16.222000',1),(776,'2019-04-11 13:12:32.616000',1),(777,'2019-04-11 13:13:18.238000',1),(778,'2019-04-11 13:13:43.327000',1),(779,'2019-04-11 13:15:03.462000',1),(780,'2019-04-11 13:15:32.495000',1),(781,'2019-04-11 13:15:48.183000',1),(782,'2019-04-11 13:16:32.050000',1),(783,'2019-04-11 13:16:39.313000',1),(784,'2019-04-11 13:18:37.204000',1),(785,'2019-04-11 13:19:38.424000',1),(786,'2019-04-11 13:20:28.107000',1),(787,'2019-04-11 13:21:03.357000',1),(788,'2019-04-11 13:22:13.894000',1),(789,'2019-04-11 13:22:49.410000',1),(790,'2019-04-11 13:22:49.997000',1),(791,'2019-04-11 13:23:09.484000',1),(792,'2019-04-11 13:23:20.230000',1),(793,'2019-04-11 13:23:25.931000',1),(794,'2019-04-11 13:23:58.641000',1),(795,'2019-04-11 13:24:22.996000',1),(796,'2019-04-11 13:24:24.305000',1),(797,'2019-04-11 13:25:37.156000',1),(798,'2019-04-11 13:25:55.622000',1),(799,'2019-04-11 13:26:11.619000',1),(800,'2019-04-11 13:27:07.495000',1),(801,'2019-04-11 13:27:26.352000',1),(802,'2019-04-11 13:27:49.994000',1),(803,'2019-04-11 13:28:18.261000',1),(804,'2019-04-11 13:28:51.340000',1),(805,'2019-04-11 13:29:11.348000',1),(806,'2019-04-11 13:29:12.781000',1),(807,'2019-04-11 13:29:14.338000',1),(808,'2019-04-11 13:29:16.043000',1),(809,'2019-04-11 13:29:17.175000',1),(810,'2019-04-11 13:30:31.914000',1),(811,'2019-04-11 13:32:55.820000',1),(812,'2019-04-11 13:33:39.809000',1),(813,'2019-04-11 13:34:05.125000',1),(814,'2019-04-11 13:34:16.342000',1),(815,'2019-04-11 13:34:17.132000',1),(816,'2019-04-11 13:34:17.675000',1),(817,'2019-04-11 13:34:18.205000',1),(818,'2019-04-11 13:34:19.981000',1),(819,'2019-04-11 13:34:42.616000',1),(820,'2019-04-11 13:34:43.735000',1),(821,'2019-04-11 13:34:55.584000',1),(822,'2019-04-11 13:36:05.120000',1),(823,'2019-04-11 13:36:07.669000',1),(824,'2019-04-11 13:38:33.701000',1),(825,'2019-04-11 13:39:08.864000',1),(826,'2019-04-11 13:39:31.628000',1),(827,'2019-04-11 13:41:34.405000',1),(828,'2019-04-11 13:41:37.644000',1),(829,'2019-04-11 13:41:39.227000',1),(830,'2019-04-11 13:41:40.750000',1),(831,'2019-04-11 13:41:48.965000',1),(832,'2019-04-11 13:42:34.691000',1),(833,'2019-04-11 13:42:36.478000',1),(834,'2019-04-11 13:45:40.651000',1),(835,'2019-04-11 13:50:29.606000',1),(836,'2019-04-11 13:51:20.316000',1),(837,'2019-04-11 13:51:30.398000',1),(838,'2019-04-11 13:52:17.680000',1),(839,'2019-04-11 13:53:12.354000',1),(840,'2019-04-11 13:56:09.197000',1),(841,'2019-04-11 13:57:47.157000',1),(842,'2019-04-11 13:58:10.023000',1),(843,'2019-04-11 13:58:21.763000',1),(844,'2019-04-11 13:58:36.262000',1),(845,'2019-04-11 13:58:56.205000',1),(846,'2019-04-11 13:59:13.831000',1),(847,'2019-04-11 13:59:36.564000',1),(848,'2019-04-11 13:59:38.575000',1),(849,'2019-04-11 13:59:41.250000',1),(850,'2019-04-11 14:00:27.493000',1),(851,'2019-04-11 14:00:32.721000',1),(852,'2019-04-11 14:00:35.275000',1),(853,'2019-04-11 14:02:08.801000',1),(854,'2019-04-11 14:10:33.492000',1),(855,'2019-04-11 14:10:40.095000',1),(856,'2019-04-11 14:10:44.057000',1),(857,'2019-04-11 14:15:00.377000',1),(858,'2019-04-11 14:16:59.809000',1),(859,'2019-04-11 14:17:37.979000',1),(860,'2019-04-11 14:17:40.512000',1),(861,'2019-04-11 14:18:10.678000',1),(862,'2019-04-11 14:18:11.622000',1),(863,'2019-04-11 14:19:09.577000',1),(864,'2019-04-11 14:19:12.088000',1),(865,'2019-04-11 14:19:15.415000',1),(866,'2019-04-11 14:19:18.677000',1),(867,'2019-04-11 14:19:24.218000',1),(868,'2019-04-11 14:19:25.620000',1),(869,'2019-04-11 14:20:28.913000',1),(870,'2019-04-11 14:20:58.206000',1),(871,'2019-04-11 14:21:52.424000',1),(872,'2019-04-11 14:22:59.356000',1),(873,'2019-04-11 14:23:49.375000',1),(874,'2019-04-11 14:23:57.878000',1),(875,'2019-04-11 14:24:37.188000',1),(876,'2019-04-11 14:24:50.878000',1),(877,'2019-04-11 14:26:27.128000',1),(878,'2019-04-11 14:26:31.031000',1),(879,'2019-04-11 14:44:59.892000',1),(880,'2019-04-11 14:47:23.910000',1),(881,'2019-04-11 14:51:47.257000',1),(882,'2019-04-11 14:51:58.011000',1),(883,'2019-04-11 14:52:11.149000',1),(884,'2019-04-11 15:01:49.607000',1),(885,'2019-04-11 15:19:07.856000',1),(886,'2019-04-11 15:21:59.150000',1),(887,'2019-04-11 15:22:36.721000',1),(888,'2019-04-11 15:31:56.479000',1),(889,'2019-04-11 15:34:54.121000',1),(890,'2019-04-11 15:36:51.268000',1),(891,'2019-04-11 15:39:35.543000',1),(892,'2019-04-11 15:46:47.208000',1),(893,'2019-04-11 15:52:45.662000',1),(894,'2019-04-11 15:54:55.497000',1),(895,'2019-04-11 15:57:16.350000',1),(896,'2019-04-11 08:05:44.030000',1),(897,'2019-04-11 08:06:29.270000',1),(898,'2019-04-11 08:06:45.492000',1),(899,'2019-04-11 08:06:47.374000',1),(900,'2019-04-11 08:06:53.905000',1),(901,'2019-04-11 08:08:07.332000',1),(902,'2019-04-11 08:08:19.747000',1),(903,'2019-04-11 08:08:21.029000',1),(904,'2019-04-11 08:17:17.134000',1),(905,'2019-04-11 08:17:22.199000',1),(906,'2019-04-11 08:21:58.226000',1),(907,'2019-04-11 08:21:59.818000',1),(908,'2019-04-11 08:22:08.233000',1),(909,'2019-04-11 08:24:47.358000',1),(910,'2019-04-11 08:27:38.955000',1),(911,'2019-04-11 09:03:05.962000',1),(912,'2019-04-11 17:34:15.828000',1),(913,'2019-04-11 17:34:42.668000',1),(914,'2019-04-11 18:00:20.879000',1),(915,'2019-04-11 18:07:12.063000',1),(916,'2019-04-11 18:21:55.117000',1),(917,'2019-04-11 18:22:09.561000',1),(918,'2019-04-11 18:22:23.604000',1),(919,'2019-04-11 18:22:28.224000',1),(920,'2019-04-11 18:22:36.001000',1),(921,'2019-04-11 18:25:27.928000',1),(922,'2019-04-11 19:32:01.673000',1),(923,'2019-04-11 19:33:01.775000',1),(924,'2019-04-11 19:33:51.742000',1),(925,'2019-04-11 23:13:10.698000',1),(926,'2019-04-11 23:33:06.217000',1),(927,'2019-04-12 00:34:42.955000',1),(928,'2019-04-12 03:40:38.885000',1),(929,'2019-04-12 03:50:49.954000',1),(930,'2019-04-12 04:14:17.465000',1),(931,'2019-04-12 04:14:31.991000',1),(932,'2019-04-12 04:25:20.508000',1),(933,'2019-04-12 04:25:55.535000',1),(934,'2019-04-12 05:16:02.708000',1),(935,'2019-04-12 05:16:39.848000',1),(936,'2019-04-12 05:25:13.323000',1),(937,'2019-04-12 05:31:40.160000',1),(938,'2019-04-12 05:34:14.014000',1),(939,'2019-04-12 05:42:09.777000',1),(940,'2019-04-12 05:45:28.520000',1),(941,'2019-04-12 05:46:25.100000',1),(942,'2019-04-12 05:51:10.113000',1),(943,'2019-04-12 05:56:11.667000',1),(944,'2019-04-12 05:56:20.229000',1),(945,'2019-04-12 06:03:53.869000',1),(946,'2019-04-12 09:05:57.930000',1),(947,'2019-04-12 09:06:33.394000',1),(948,'2019-04-12 09:17:33.315000',1),(949,'2019-04-12 09:29:13.212000',1),(950,'2019-04-12 10:24:13.208000',1),(951,'2019-04-12 11:44:09.233000',1),(952,'2019-04-12 11:44:42.119000',1),(953,'2019-04-12 11:44:54.073000',1),(954,'2019-04-12 12:01:12.287000',1),(955,'2019-04-12 12:22:35.056000',1),(956,'2019-04-12 12:22:38.189000',1),(957,'2019-04-12 12:22:40.187000',1),(958,'2019-04-12 12:22:41.171000',1),(959,'2019-04-12 12:22:46.803000',1),(960,'2019-04-12 12:42:45.265000',1),(961,'2019-04-12 13:58:28.924000',1),(962,'2019-04-12 16:11:08.817000',1),(963,'2019-04-12 16:13:39.684000',1),(964,'2019-04-12 16:14:01.394000',1),(965,'2019-04-12 16:14:13.685000',1),(966,'2019-04-12 16:14:17.489000',1),(967,'2019-04-12 17:41:18.502000',1),(968,'2019-04-12 18:23:33.178000',1),(969,'2019-04-12 18:23:36.741000',1),(970,'2019-04-12 21:52:36.102000',1),(971,'2019-04-13 05:04:48.379000',1),(972,'2019-04-13 06:10:06.468000',1),(973,'2019-04-13 06:15:38.724000',1),(974,'2019-04-13 06:16:46.849000',1),(975,'2019-04-13 06:16:58.784000',1),(976,'2019-04-13 06:17:01.293000',1),(977,'2019-04-13 06:17:23.402000',1),(978,'2019-04-13 06:18:17.455000',1),(979,'2019-04-13 06:19:10.307000',1),(980,'2019-04-13 06:19:13.737000',1),(981,'2019-04-13 06:19:13.772000',1),(982,'2019-04-13 06:19:14.563000',1),(983,'2019-04-13 06:19:14.607000',1),(984,'2019-04-13 06:19:15.195000',1),(985,'2019-04-13 06:19:15.238000',1),(986,'2019-04-13 07:53:09.828000',1),(987,'2019-04-13 09:33:24.891000',1),(988,'2019-04-13 09:34:36.681000',1),(989,'2019-04-13 09:38:20.041000',1),(990,'2019-04-13 10:33:53.977000',1),(991,'2019-04-13 10:34:17.756000',1),(992,'2019-04-13 11:48:07.279000',1),(993,'2019-04-13 11:48:12.495000',1),(994,'2019-04-13 12:01:50.704000',1),(995,'2019-04-13 12:14:33.946000',1),(996,'2019-04-13 12:34:27.313000',1),(997,'2019-04-13 13:44:25.578000',1),(998,'2019-04-13 15:19:24.772000',1),(999,'2019-04-13 15:20:18.268000',1),(1000,'2019-04-13 16:54:20.398000',1),(1001,'2019-04-13 17:52:14.778000',1),(1002,'2019-04-13 17:52:17.820000',1),(1003,'2019-04-13 18:53:41.264000',1),(1004,'2019-04-13 19:33:43.330000',1),(1005,'2019-04-14 02:09:22.704000',1),(1006,'2019-04-14 05:58:32.209000',1),(1007,'2019-04-14 06:01:17.301000',1),(1008,'2019-04-14 06:06:49.565000',1),(1009,'2019-04-14 06:17:02.352000',1),(1010,'2019-04-14 07:12:55.347000',1),(1011,'2019-04-14 08:08:28.676000',1),(1012,'2019-04-14 08:41:44.106000',1),(1013,'2019-04-14 09:14:19.661000',1),(1014,'2019-04-14 09:15:05.991000',1),(1015,'2019-04-14 09:15:09.365000',1),(1016,'2019-04-14 09:15:48.161000',1),(1017,'2019-04-14 09:15:48.813000',1),(1018,'2019-04-14 10:28:07.253000',1),(1019,'2019-04-14 10:35:32.034000',1),(1020,'2019-04-14 11:40:34.812000',1),(1021,'2019-04-14 11:47:26.514000',1),(1022,'2019-04-14 12:37:57.099000',1),(1023,'2019-04-14 13:39:03.710000',1),(1024,'2019-04-14 13:49:02.604000',1),(1025,'2019-04-14 13:49:49.334000',1),(1026,'2019-04-14 14:19:57.668000',1),(1027,'2019-04-14 14:49:35.601000',1),(1028,'2019-04-14 16:01:42.412000',1),(1029,'2019-04-14 16:06:46.533000',1),(1030,'2019-04-14 16:19:54.087000',1),(1031,'2019-04-14 16:40:29.733000',1),(1032,'2019-04-14 17:32:54.227000',1),(1033,'2019-04-14 17:40:34.302000',1),(1034,'2019-04-14 19:00:53.245000',1),(1035,'2019-04-14 19:42:42.148000',1),(1036,'2019-04-14 20:03:30.498000',1),(1037,'2019-04-14 21:52:41.947000',1),(1038,'2019-04-14 22:50:05.802000',1),(1039,'2019-04-14 22:50:12.154000',1),(1040,'2019-04-14 22:51:06.148000',1),(1041,'2019-04-14 22:51:11.335000',1),(1042,'2019-04-14 22:53:09.441000',1),(1043,'2019-04-14 22:53:28.267000',1),(1044,'2019-04-14 22:53:31.195000',1),(1045,'2019-04-14 22:54:32.451000',1),(1046,'2019-04-14 22:54:48.852000',1),(1047,'2019-04-14 23:03:16.969000',1),(1048,'2019-04-14 23:34:00.025000',1),(1049,'2019-04-15 00:24:24.894000',1),(1050,'2019-04-15 01:55:30.019000',1),(1051,'2019-04-15 02:12:22.656000',1),(1052,'2019-04-15 05:03:44.247000',1),(1053,'2019-04-15 05:22:33.994000',1),(1054,'2019-04-15 09:29:18.597000',1),(1055,'2019-04-15 09:30:13.374000',1),(1056,'2019-04-15 09:47:03.244000',1),(1057,'2019-04-15 13:00:00.483000',1),(1058,'2019-04-15 14:06:06.048000',1),(1059,'2019-04-15 14:34:09.221000',1),(1060,'2019-04-15 14:37:46.310000',1),(1061,'2019-04-15 14:56:26.472000',1),(1062,'2019-04-15 19:18:33.241000',1),(1063,'2019-04-15 19:55:22.549000',1),(1064,'2019-04-15 19:57:33.904000',1),(1065,'2019-04-15 21:58:31.771000',1),(1066,'2019-04-15 22:08:49.730000',1),(1067,'2019-04-16 05:28:46.937000',1),(1068,'2019-04-16 06:51:14.367000',1),(1069,'2019-04-16 07:59:30.086000',1),(1070,'2019-04-16 09:40:22.220000',1),(1071,'2019-04-16 09:40:54.461000',1),(1072,'2019-04-16 09:41:02.025000',1),(1073,'2019-04-16 09:41:04.144000',1),(1074,'2019-04-16 09:52:11.862000',1),(1075,'2019-04-16 09:52:19.059000',1),(1076,'2019-04-16 09:52:20.974000',1),(1077,'2019-04-16 09:52:49.350000',1),(1078,'2019-04-16 09:52:53.312000',1),(1079,'2019-04-16 09:52:58.294000',1),(1080,'2019-04-16 10:06:05.057000',1),(1081,'2019-04-16 10:49:26.993000',1),(1082,'2019-04-16 10:51:21.820000',1),(1083,'2019-04-16 10:51:49.343000',1),(1084,'2019-04-16 10:51:51.850000',1),(1085,'2019-04-16 10:55:38.225000',1),(1086,'2019-04-16 11:00:02.516000',1),(1087,'2019-04-16 11:03:49.826000',1),(1088,'2019-04-16 11:28:44.988000',1),(1089,'2019-04-16 11:46:46.407000',1),(1090,'2019-04-16 11:50:01.406000',1),(1091,'2019-04-16 11:58:30.445000',1),(1092,'2019-04-16 12:00:03.292000',1),(1093,'2019-04-16 12:00:57.585000',1),(1094,'2019-04-16 12:01:59.160000',1),(1095,'2019-04-16 12:04:25.691000',1),(1096,'2019-04-16 12:07:55.481000',1),(1097,'2019-04-16 12:08:36.622000',1),(1098,'2019-04-16 12:09:06.826000',1),(1099,'2019-04-16 12:09:14.223000',1),(1100,'2019-04-16 12:09:55.928000',1),(1101,'2019-04-16 12:10:15.744000',1),(1102,'2019-04-16 13:01:44.073000',1),(1103,'2019-04-16 13:01:47.676000',1),(1104,'2019-04-16 13:02:24.440000',1),(1105,'2019-04-16 13:28:30.899000',1),(1106,'2019-04-16 14:18:25.179000',1),(1107,'2019-04-16 15:19:11.561000',1),(1108,'2019-04-16 19:38:59.101000',1),(1109,'2019-04-16 21:00:43.747000',1),(1110,'2019-04-16 21:01:03.707000',1),(1111,'2019-04-16 21:01:05.958000',1),(1112,'2019-04-16 21:01:22.433000',1),(1113,'2019-04-16 21:01:23.390000',1),(1114,'2019-04-16 21:37:07.438000',1),(1115,'2019-04-16 22:02:10.047000',1),(1116,'2019-04-17 01:12:13.960000',1),(1117,'2019-04-17 01:39:36.609000',1),(1118,'2019-04-17 01:42:59.772000',1),(1119,'2019-04-17 02:16:18.285000',1),(1120,'2019-04-17 05:01:25.671000',1),(1121,'2019-04-17 07:30:36.533000',1),(1122,'2019-04-17 09:20:51.755000',1),(1123,'2019-04-17 09:30:44.907000',1),(1124,'2019-04-17 09:30:48.226000',1),(1125,'2019-04-17 09:31:47.047000',1),(1126,'2019-04-17 09:32:21.404000',1),(1127,'2019-04-17 09:32:32.583000',1),(1128,'2019-04-17 09:44:41.308000',1),(1129,'2019-04-17 09:44:42.387000',1),(1130,'2019-04-17 09:49:28.462000',1),(1131,'2019-04-17 10:06:37.568000',1),(1132,'2019-04-17 10:46:47.299000',1),(1133,'2019-04-17 11:58:34.457000',1),(1134,'2019-04-17 11:58:43.272000',1),(1135,'2019-04-17 11:58:45.779000',1),(1136,'2019-04-17 12:06:47.447073',1),(1137,'2019-04-17 12:06:50.489247',1),(1138,'2019-04-17 12:07:03.827010',1),(1139,'2019-04-17 12:07:48.236550',1),(1140,'2019-04-17 12:07:50.204662',1),(1141,'2019-04-17 12:11:52.362513',1),(1142,'2019-04-17 12:18:28.661180',1),(1143,'2019-04-17 12:20:39.299652',1),(1144,'2019-04-17 12:21:51.414777',1),(1145,'2019-04-17 12:22:20.678450',1),(1146,'2019-04-17 12:22:21.303486',1),(1147,'2019-04-17 12:22:28.775914',1),(1148,'2019-04-17 12:23:14.736542',1),(1149,'2019-04-17 12:28:03.505059',1),(1150,'2019-04-17 12:28:03.525060',1),(1151,'2019-04-17 12:28:06.352222',1),(1152,'2019-04-17 12:29:18.828367',1),(1153,'2019-04-17 12:29:57.778595',1),(1154,'2019-04-17 12:29:58.899659',1),(1155,'2019-04-17 12:30:43.941235',1),(1156,'2019-04-17 12:32:51.910555',1),(1157,'2019-04-17 12:32:54.145683',1),(1158,'2019-04-17 12:33:06.222373',1),(1159,'2019-04-17 12:33:11.254661',1),(1160,'2019-04-17 12:33:34.331981',1),(1161,'2019-04-17 12:35:17.744896',1),(1162,'2019-04-17 12:38:02.080296',1),(1163,'2019-04-17 12:40:18.654107',1),(1164,'2019-04-17 13:55:42.690867',1),(1165,'2019-04-17 14:32:13.881437',1),(1166,'2019-04-17 14:32:20.246371',1),(1167,'2019-04-17 14:33:33.602664',1),(1168,'2019-04-17 14:33:38.609848',1),(1169,'2019-04-17 14:33:40.389332',1),(1170,'2019-04-17 14:35:08.920768',1),(1171,'2019-04-17 14:35:59.285556',1),(1172,'2019-04-17 14:36:23.356097',1),(1173,'2019-04-17 14:36:43.082771',1),(1174,'2019-04-17 14:36:57.661504',1),(1175,'2019-04-17 14:37:08.339673',1),(1176,'2019-04-17 14:37:44.745103',1),(1177,'2019-04-17 14:38:15.865128',1),(1178,'2019-04-17 14:38:34.366727',1),(1179,'2019-04-17 14:38:37.816730',1),(1180,'2019-04-17 14:38:39.622868',1),(1181,'2019-04-17 14:38:44.261176',1),(1182,'2019-04-17 14:42:46.519573',1),(1183,'2019-04-17 15:18:48.957128',1),(1184,'2019-04-17 15:19:00.162823',1),(1185,'2019-04-17 17:45:12.267393',1),(1186,'2019-04-17 18:08:42.677678',1),(1187,'2019-04-17 18:08:46.707298',1),(1188,'2019-04-17 18:09:22.343478',1),(1189,'2019-04-17 18:09:25.115978',1),(1190,'2019-04-17 18:09:36.432768',1),(1191,'2019-04-17 18:44:34.170899',1),(1192,'2019-04-17 19:02:59.292595',1),(1193,'2019-04-17 19:03:12.412954',1),(1194,'2019-04-17 19:03:13.809348',1),(1195,'2019-04-17 19:07:53.425613',1),(1196,'2019-04-17 19:25:25.259276',1),(1197,'2019-04-17 20:32:47.989117',1),(1198,'2019-04-17 21:29:57.192189',1),(1199,'2019-04-17 21:29:57.232149',1),(1200,'2019-04-17 21:30:12.440606',1),(1201,'2019-04-17 21:30:26.045252',1),(1202,'2019-04-17 21:40:24.097347',1),(1203,'2019-04-17 21:40:25.470816',1),(1204,'2019-04-17 21:40:30.730133',1),(1205,'2019-04-17 21:40:45.517850',1),(1206,'2019-04-17 21:40:46.847537',1),(1207,'2019-04-17 21:40:48.113989',1),(1208,'2019-04-17 21:45:36.985435',1),(1209,'2019-04-17 21:45:39.342812',1),(1210,'2019-04-17 21:45:39.960494',1),(1211,'2019-04-17 21:45:43.591260',1),(1212,'2019-04-17 21:45:44.744739',1),(1213,'2019-04-17 22:03:47.757645',1),(1214,'2019-04-17 22:05:32.340698',1),(1215,'2019-04-17 22:07:21.751282',1),(1216,'2019-04-17 22:07:25.445379',1),(1217,'2019-04-17 22:07:26.750747',1),(1218,'2019-04-17 22:07:28.189530',1),(1219,'2019-04-17 22:07:29.583536',1),(1220,'2019-04-17 22:07:30.981974',1),(1221,'2019-04-17 22:07:34.977407',1),(1222,'2019-04-17 22:07:51.980040',1),(1223,'2019-04-17 22:53:04.307368',1),(1224,'2019-04-17 22:53:07.834541',1),(1225,'2019-04-18 00:04:43.724820',1),(1226,'2019-04-18 00:33:54.956084',1),(1227,'2019-04-18 01:04:08.178992',1),(1228,'2019-04-18 01:13:36.363876',1),(1229,'2019-04-18 01:37:09.798225',1),(1230,'2019-04-18 03:21:54.434284',1),(1231,'2019-04-18 03:42:32.953739',1),(1232,'2019-04-18 04:18:20.090123',1),(1233,'2019-04-18 04:38:00.801519',1),(1234,'2019-04-18 04:56:02.765288',1),(1235,'2019-04-18 05:47:13.154582',1),(1236,'2019-04-18 06:07:12.925221',1),(1237,'2019-04-18 08:28:36.863358',1),(1238,'2019-04-18 08:39:12.001868',1),(1239,'2019-04-18 09:28:43.500294',1),(1240,'2019-04-18 09:29:26.709046',1),(1241,'2019-04-18 09:38:54.379991',1),(1242,'2019-04-18 10:56:00.841749',1),(1243,'2019-04-18 11:29:20.885486',1),(1244,'2019-04-18 11:30:22.015839',1),(1245,'2019-04-18 12:58:31.875992',1),(1246,'2019-04-18 13:28:14.495146',1),(1247,'2019-04-18 14:28:35.926786',1),(1248,'2019-04-18 15:26:46.200169',1),(1249,'2019-04-18 15:26:53.567734',1),(1250,'2019-04-18 15:26:58.412726',1),(1251,'2019-04-18 15:27:03.819958',1),(1252,'2019-04-18 15:38:25.061304',1),(1253,'2019-04-18 15:39:18.827035',1),(1254,'2019-04-18 15:39:22.908032',1),(1255,'2019-04-18 15:39:25.695597',1),(1256,'2019-04-18 15:39:29.676150',1),(1257,'2019-04-18 15:39:52.409946',1),(1258,'2019-04-18 15:39:57.759017',1),(1259,'2019-04-18 15:40:08.325721',1),(1260,'2019-04-18 15:40:35.637243',1),(1261,'2019-04-18 16:08:23.820074',1),(1262,'2019-04-18 16:23:54.093228',1),(1263,'2019-04-18 16:28:27.699641',1),(1264,'2019-04-18 17:49:12.489535',1),(1265,'2019-04-18 18:49:37.122326',1),(1266,'2019-04-18 19:23:54.270930',1),(1267,'2019-04-18 19:50:13.048408',1),(1268,'2019-04-18 19:57:14.110254',1),(1269,'2019-04-18 20:37:49.556590',1),(1270,'2019-04-19 03:21:08.335267',1),(1271,'2019-04-19 06:35:31.804251',1),(1272,'2019-04-19 09:37:42.094775',1),(1273,'2019-04-19 10:14:16.010894',1),(1274,'2019-04-19 11:01:55.226145',1),(1275,'2019-04-19 11:12:05.740901',1),(1276,'2019-04-19 13:22:32.943808',1),(1277,'2019-04-19 14:34:25.324464',1),(1278,'2019-04-19 16:34:27.047044',1),(1279,'2019-04-19 16:34:27.344671',1),(1280,'2019-04-19 16:34:27.527044',1),(1281,'2019-04-19 16:34:34.373811',1),(1282,'2019-04-19 16:34:34.651874',1),(1283,'2019-04-19 16:34:34.879327',1),(1284,'2019-04-19 16:34:35.073860',1),(1285,'2019-04-19 16:34:35.379296',1),(1286,'2019-04-19 16:34:35.950533',1),(1287,'2019-04-19 16:34:36.232835',1),(1288,'2019-04-19 16:34:36.429736',1),(1289,'2019-04-19 16:34:36.619863',1),(1290,'2019-04-19 16:34:36.814416',1),(1291,'2019-04-19 16:34:36.994293',1),(1292,'2019-04-19 16:34:37.198210',1),(1293,'2019-04-19 16:34:37.447300',1),(1294,'2019-04-19 16:34:37.663584',1),(1295,'2019-04-19 16:34:37.862905',1),(1296,'2019-04-19 16:34:38.071056',1),(1297,'2019-04-19 16:34:38.297699',1),(1298,'2019-04-19 16:34:38.526543',1),(1299,'2019-04-19 16:34:38.990604',1),(1300,'2019-04-19 16:34:39.169285',1),(1301,'2019-04-19 16:34:39.786365',1),(1302,'2019-04-19 16:34:40.092863',1),(1303,'2019-04-19 16:34:40.330280',1),(1304,'2019-04-19 16:34:40.568015',1),(1305,'2019-04-19 16:34:40.791048',1),(1306,'2019-04-19 16:34:41.020528',1),(1307,'2019-04-19 16:34:41.215991',1),(1308,'2019-04-19 16:34:48.873877',1),(1309,'2019-04-19 16:34:49.212605',1),(1310,'2019-04-19 16:34:49.461428',1),(1311,'2019-04-19 16:34:56.288087',1),(1312,'2019-04-19 16:34:56.481771',1),(1313,'2019-04-19 16:34:56.752762',1),(1314,'2019-04-19 17:22:59.446422',1),(1315,'2019-04-19 18:21:50.738449',1),(1316,'2019-04-19 18:24:58.805046',1),(1317,'2019-04-19 18:28:18.991434',1),(1318,'2019-04-19 18:55:11.401506',1),(1319,'2019-04-19 21:01:49.243760',1),(1320,'2019-04-19 22:22:14.169088',1),(1321,'2019-04-19 22:31:26.925225',1),(1322,'2019-04-20 01:47:53.660199',1),(1323,'2019-04-20 10:40:40.274842',1),(1324,'2019-04-20 11:14:39.305320',1),(1325,'2019-04-20 11:26:52.443119',1),(1326,'2019-04-20 18:17:47.466929',1),(1327,'2019-04-20 19:24:28.512372',1),(1328,'2019-04-20 19:57:47.500256',1),(1329,'2019-04-21 02:43:46.985660',1),(1330,'2019-04-21 04:10:35.717165',1),(1331,'2019-04-21 07:25:00.905004',1),(1332,'2019-04-21 07:25:01.112961',1),(1333,'2019-04-21 07:25:01.348613',1),(1334,'2019-04-21 07:25:02.447956',1),(1335,'2019-04-21 07:25:02.662315',1),(1336,'2019-04-21 07:25:02.816965',1),(1337,'2019-04-21 07:25:02.942040',1),(1338,'2019-04-21 07:25:03.173553',1),(1339,'2019-04-21 07:25:03.730747',1),(1340,'2019-04-21 07:25:03.951384',1),(1341,'2019-04-21 07:25:04.136999',1),(1342,'2019-04-21 07:25:04.309094',1),(1343,'2019-04-21 07:25:04.466742',1),(1344,'2019-04-21 07:25:04.633715',1),(1345,'2019-04-21 07:25:04.798507',1),(1346,'2019-04-21 07:25:04.960627',1),(1347,'2019-04-21 07:25:05.144837',1),(1348,'2019-04-21 07:25:05.301899',1),(1349,'2019-04-21 07:25:05.470402',1),(1350,'2019-04-21 07:25:05.640789',1),(1351,'2019-04-21 07:25:05.832596',1),(1352,'2019-04-21 07:25:05.977685',1),(1353,'2019-04-21 07:25:06.139997',1),(1354,'2019-04-21 07:25:06.767669',1),(1355,'2019-04-21 07:25:07.004407',1),(1356,'2019-04-21 07:25:07.180482',1),(1357,'2019-04-21 07:25:07.358442',1),(1358,'2019-04-21 07:25:07.550530',1),(1359,'2019-04-21 07:25:07.743040',1),(1360,'2019-04-21 07:25:07.900194',1),(1361,'2019-04-21 07:25:13.313505',1),(1362,'2019-04-21 07:25:13.546535',1),(1363,'2019-04-21 07:25:13.716559',1),(1364,'2019-04-21 07:25:14.565451',1),(1365,'2019-04-21 07:25:15.009804',1),(1366,'2019-04-21 07:25:15.139787',1),(1367,'2019-04-21 07:25:15.324835',1),(1368,'2019-04-21 07:50:37.889637',1),(1369,'2019-04-21 08:23:57.915987',1),(1370,'2019-04-21 09:29:32.515991',1),(1371,'2019-04-21 13:07:58.933771',1),(1372,'2019-04-21 14:47:16.703660',1),(1373,'2019-04-21 15:20:36.675140',1),(1374,'2019-04-21 16:40:13.831139',1),(1375,'2019-04-21 16:41:40.790809',1),(1376,'2019-04-21 21:36:56.017531',1),(1377,'2019-04-22 03:44:48.035539',1),(1378,'2019-04-22 04:34:18.219882',1),(1379,'2019-04-22 05:09:15.470017',1),(1380,'2019-04-22 06:18:20.563618',1),(1381,'2019-04-22 06:28:20.493308',1),(1382,'2019-04-22 06:48:38.808289',1),(1383,'2019-04-22 09:33:01.092644',1),(1384,'2019-04-22 10:08:08.681711',1),(1385,'2019-04-22 14:57:10.415609',1),(1386,'2019-04-22 18:55:45.624373',1),(1387,'2019-04-22 22:23:06.865314',1),(1388,'2019-04-23 03:17:40.748985',1),(1389,'2019-04-23 05:33:11.908642',1),(1390,'2019-04-23 09:40:39.888719',1),(1391,'2019-04-23 12:36:11.543225',1),(1392,'2019-04-23 16:18:11.770424',1),(1393,'2019-04-23 16:22:43.371282',1),(1394,'2019-04-23 16:23:07.623121',1),(1395,'2019-04-23 23:35:08.581992',1),(1396,'2019-04-24 00:07:39.357789',1),(1397,'2019-04-24 00:24:50.455582',1),(1398,'2019-04-24 02:07:17.053650',1),(1399,'2019-04-24 04:32:00.366720',1),(1400,'2019-04-24 04:32:05.593242',1),(1401,'2019-04-24 04:36:23.426456',1),(1402,'2019-04-24 05:05:20.519809',1),(1403,'2019-04-24 07:28:17.285811',1),(1404,'2019-04-24 08:29:29.625087',1),(1405,'2019-04-24 09:25:01.129681',1),(1406,'2019-04-24 09:29:38.606534',1),(1407,'2019-04-24 11:33:54.224499',1),(1408,'2019-04-24 11:50:40.850407',1),(1409,'2019-04-24 11:50:49.281019',1),(1410,'2019-04-24 11:51:31.939020',1),(1411,'2019-04-24 11:52:06.093174',1),(1412,'2019-04-24 11:52:10.570414',1),(1413,'2019-04-24 11:54:43.999862',1),(1414,'2019-04-24 11:57:08.427738',1),(1415,'2019-04-24 12:05:00.327973',1),(1416,'2019-04-24 12:20:50.518086',1),(1417,'2019-04-24 12:20:50.531702',1),(1418,'2019-04-24 12:20:50.543624',1),(1419,'2019-04-24 12:44:52.207386',1),(1420,'2019-04-24 13:04:10.353240',1),(1421,'2019-04-24 14:17:58.681676',1),(1422,'2019-04-24 14:18:03.746860',1),(1423,'2019-04-24 14:18:05.276225',1),(1424,'2019-04-24 14:46:32.026404',1),(1425,'2019-04-24 15:05:26.103681',1),(1426,'2019-04-24 15:11:02.256869',1),(1427,'2019-04-24 15:13:13.409857',1),(1428,'2019-04-24 15:16:43.099695',1),(1429,'2019-04-24 15:17:37.382468',1),(1430,'2019-04-24 15:23:18.756345',1),(1431,'2019-04-24 15:23:59.117409',1),(1432,'2019-04-24 15:24:03.224514',1),(1433,'2019-04-24 15:25:11.943272',1),(1434,'2019-04-24 15:33:18.747764',1),(1435,'2019-04-24 15:33:21.333317',1),(1436,'2019-04-24 15:33:23.961127',1),(1437,'2019-04-24 15:33:30.383932',1),(1438,'2019-04-24 15:33:32.397139',1),(1439,'2019-04-24 15:33:34.731132',1),(1440,'2019-04-24 15:33:48.064090',1),(1441,'2019-04-24 15:33:49.474118',1),(1442,'2019-04-24 15:33:56.195707',1),(1443,'2019-04-24 15:46:29.576808',1),(1444,'2019-04-24 15:46:30.846025',1),(1445,'2019-04-24 15:46:34.112970',1),(1446,'2019-04-24 16:23:11.770756',1),(1447,'2019-04-24 16:57:02.071784',1),(1448,'2019-04-24 16:57:04.179383',1),(1449,'2019-04-24 16:58:21.057479',1),(1450,'2019-04-24 16:58:23.702743',1),(1451,'2019-04-24 16:58:25.745827',1),(1452,'2019-04-24 16:58:27.993572',1),(1453,'2019-04-24 16:58:30.175692',1),(1454,'2019-04-24 16:58:31.878520',1),(1455,'2019-04-24 16:59:59.165511',1),(1456,'2019-04-24 17:00:25.122725',1),(1457,'2019-04-24 17:00:27.057551',1),(1458,'2019-04-24 17:00:29.833391',1),(1459,'2019-04-24 17:00:32.574873',1),(1460,'2019-04-24 17:07:14.468670',1),(1461,'2019-04-24 19:11:54.344230',1),(1462,'2019-04-24 19:11:55.925726',1),(1463,'2019-04-24 19:47:41.873077',1),(1464,'2019-04-24 20:45:31.994855',1),(1465,'2019-04-24 21:10:07.954706',1),(1466,'2019-04-24 21:45:47.059498',1),(1467,'2019-04-24 22:07:02.548555',1),(1468,'2019-04-24 22:26:37.791749',1),(1469,'2019-04-24 22:37:48.388674',1),(1470,'2019-04-24 23:09:48.121927',1),(1471,'2019-04-25 00:35:42.845147',1),(1472,'2019-04-25 01:04:01.124637',1),(1473,'2019-04-25 01:04:48.505384',1),(1474,'2019-04-25 01:05:33.515753',1),(1475,'2019-04-25 01:06:20.334431',1),(1476,'2019-04-25 01:07:08.461109',1),(1477,'2019-04-25 01:08:03.168262',1),(1478,'2019-04-25 01:08:11.750791',1),(1479,'2019-04-25 02:14:42.726205',1),(1480,'2019-04-25 02:36:42.450877',1),(1481,'2019-04-25 03:30:29.681209',1),(1482,'2019-04-25 04:40:45.644161',1),(1483,'2019-04-25 04:45:37.138598',1),(1484,'2019-04-25 04:46:16.673290',1),(1485,'2019-04-25 05:52:17.157330',1),(1486,'2019-04-25 06:02:04.942747',1),(1487,'2019-04-25 07:17:51.013704',1),(1488,'2019-04-25 09:25:00.935360',1),(1489,'2019-04-25 09:39:10.571709',1),(1490,'2019-04-25 12:11:37.433136',1),(1491,'2019-04-25 12:14:56.633074',1),(1492,'2019-04-25 12:17:39.922758',1),(1493,'2019-04-25 12:17:44.748942',1),(1494,'2019-04-25 12:17:55.467332',1),(1495,'2019-04-25 12:39:10.721780',1),(1496,'2019-04-25 13:15:18.446631',1),(1497,'2019-04-25 14:27:34.085572',1),(1498,'2019-04-25 14:35:06.583102',1),(1499,'2019-04-25 15:35:42.115468',1),(1500,'2019-04-25 16:08:35.753625',1),(1501,'2019-04-25 16:28:47.255995',1),(1502,'2019-04-25 17:13:29.509625',1),(1503,'2019-04-25 17:25:23.737221',1),(1504,'2019-04-25 17:25:28.004214',1),(1505,'2019-04-25 17:25:30.527442',1),(1506,'2019-04-25 17:25:32.844613',1),(1507,'2019-04-25 17:25:37.010675',1),(1508,'2019-04-25 18:05:46.486192',1),(1509,'2019-04-25 18:43:29.585755',1),(1510,'2019-04-25 19:55:44.197206',1),(1511,'2019-04-25 19:56:07.820347',1),(1512,'2019-04-25 20:06:33.546253',1),(1513,'2019-04-25 20:13:29.512912',1),(1514,'2019-04-25 21:11:32.806979',1),(1515,'2019-04-25 21:36:44.923154',1),(1516,'2019-04-25 22:27:19.382648',1),(1517,'2019-04-25 23:43:03.497949',1),(1518,'2019-04-26 01:25:14.612898',1),(1519,'2019-04-26 04:01:36.396796',1),(1520,'2019-04-26 04:46:33.012599',1),(1521,'2019-04-26 05:19:52.824309',1),(1522,'2019-04-26 05:53:12.962568',1),(1523,'2019-04-26 06:26:33.072722',1),(1524,'2019-04-26 07:33:13.041601',1),(1525,'2019-04-26 08:39:53.064619',1),(1526,'2019-04-26 09:15:27.251660',1),(1527,'2019-04-26 09:19:42.359645',1),(1528,'2019-04-26 10:25:16.367961',1),(1529,'2019-04-26 11:41:03.703960',1),(1530,'2019-04-26 12:30:21.304172',1),(1531,'2019-04-26 12:56:51.015769',1),(1532,'2019-04-26 14:12:38.463858',1),(1533,'2019-04-26 15:28:24.590334',1),(1534,'2019-04-26 22:33:23.752814',1),(1535,'2019-04-26 23:59:52.970708',1),(1536,'2019-04-27 00:24:51.302325',1),(1537,'2019-04-27 00:25:05.580361',1),(1538,'2019-04-27 00:25:07.259360',1),(1539,'2019-04-27 00:25:08.801504',1),(1540,'2019-04-27 01:30:16.844018',1),(1541,'2019-04-27 09:34:45.869757',1),(1542,'2019-04-27 21:34:50.529352',1),(1543,'2019-04-27 22:42:29.953034',1),(1544,'2019-04-27 23:58:54.011576',1),(1545,'2019-04-27 23:59:03.973815',1),(1546,'2019-04-27 23:59:06.802131',1),(1547,'2019-04-28 08:16:03.299668',1),(1548,'2019-04-28 16:11:55.710717',1),(1549,'2019-04-28 16:13:50.708107',1),(1550,'2019-04-28 16:14:14.362099',1),(1551,'2019-04-28 17:07:30.830084',1),(1552,'2019-04-28 19:19:08.697698',1),(1553,'2019-04-28 19:31:41.314129',1),(1554,'2019-04-29 09:48:31.264189',1),(1555,'2019-04-29 10:55:11.837586',1),(1556,'2019-04-29 12:01:51.316703',1),(1557,'2019-04-29 12:29:54.311610',1),(1558,'2019-04-29 13:08:31.265858',1),(1559,'2019-04-29 14:20:24.114002',1),(1560,'2019-04-29 19:39:17.653896',1),(1561,'2019-04-29 21:59:26.600619',1),(1562,'2019-04-30 00:24:01.697965',1),(1563,'2019-04-30 03:24:13.205113',1),(1564,'2019-04-30 05:24:13.192968',1),(1565,'2019-04-30 14:14:41.338893',1),(1566,'2019-04-30 14:51:59.872156',1),(1567,'2019-04-30 15:08:48.051207',1),(1568,'2019-04-30 15:20:30.049025',1),(1569,'2019-04-30 15:36:52.724575',1),(1570,'2019-04-30 16:22:46.226013',1),(1571,'2019-04-30 16:33:49.148083',1),(1572,'2019-04-30 16:43:42.224684',1);
/*!40000 ALTER TABLE `accounts_daynumber` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `accounts_oauth`
--

DROP TABLE IF EXISTS `accounts_oauth`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `accounts_oauth` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `password` varchar(128) NOT NULL,
  `last_login` datetime(6) DEFAULT NULL,
  `is_superuser` tinyint(1) NOT NULL,
  `username` varchar(150) NOT NULL,
  `first_name` varchar(30) NOT NULL,
  `last_name` varchar(150) NOT NULL,
  `email` varchar(254) NOT NULL,
  `is_staff` tinyint(1) NOT NULL,
  `is_active` tinyint(1) NOT NULL,
  `date_joined` datetime(6) NOT NULL,
  `avatar` varchar(100) NOT NULL,
  `link` varchar(200) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `accounts_oauth`
--

LOCK TABLES `accounts_oauth` WRITE;
/*!40000 ALTER TABLE `accounts_oauth` DISABLE KEYS */;
INSERT INTO `accounts_oauth` VALUES (1,'pbkdf2_sha256$120000$ICkGuIu0oozl$FvsyofPF4hmGDBdfh85QyBAeiqceiBylCHgXF1fLc7A=','2019-05-09 06:05:15.375443',1,'Superficial','','','347106739@qq.com',1,1,'2019-04-25 15:54:11.860035','/media/avatar/default.jpg','');
/*!40000 ALTER TABLE `accounts_oauth` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `accounts_oauth_groups`
--

DROP TABLE IF EXISTS `accounts_oauth_groups`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `accounts_oauth_groups` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `oauth_id` int(11) NOT NULL,
  `group_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `accounts_oauth_groups_oauth_id_group_id_0f2599ba_uniq` (`oauth_id`,`group_id`),
  KEY `accounts_oauth_groups_group_id_02f739f9_fk_auth_group_id` (`group_id`),
  CONSTRAINT `accounts_oauth_groups_group_id_02f739f9_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`),
  CONSTRAINT `accounts_oauth_groups_oauth_id_72a422b5_fk_accounts_oauth_id` FOREIGN KEY (`oauth_id`) REFERENCES `accounts_oauth` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `accounts_oauth_groups`
--

LOCK TABLES `accounts_oauth_groups` WRITE;
/*!40000 ALTER TABLE `accounts_oauth_groups` DISABLE KEYS */;
/*!40000 ALTER TABLE `accounts_oauth_groups` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `accounts_oauth_user_permissions`
--

DROP TABLE IF EXISTS `accounts_oauth_user_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `accounts_oauth_user_permissions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `oauth_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `accounts_oauth_user_perm_oauth_id_permission_id_2550f9bb_uniq` (`oauth_id`,`permission_id`),
  KEY `accounts_oauth_user__permission_id_36b919a7_fk_auth_perm` (`permission_id`),
  CONSTRAINT `accounts_oauth_user__oauth_id_84509c0f_fk_accounts_` FOREIGN KEY (`oauth_id`) REFERENCES `accounts_oauth` (`id`),
  CONSTRAINT `accounts_oauth_user__permission_id_36b919a7_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `accounts_oauth_user_permissions`
--

LOCK TABLES `accounts_oauth_user_permissions` WRITE;
/*!40000 ALTER TABLE `accounts_oauth_user_permissions` DISABLE KEYS */;
/*!40000 ALTER TABLE `accounts_oauth_user_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `accounts_userip`
--

DROP TABLE IF EXISTS `accounts_userip`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `accounts_userip` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `ip` varchar(30) NOT NULL,
  `ip_addr` varchar(30) NOT NULL,
  `end_point` varchar(100) NOT NULL,
  `count` int(11) NOT NULL,
  `created_time` datetime(6) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=271 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `accounts_userip`
--

LOCK TABLES `accounts_userip` WRITE;
/*!40000 ALTER TABLE `accounts_userip` DISABLE KEYS */;
INSERT INTO `accounts_userip` VALUES (1,'113.57.247.148','','/',4,'2019-04-02 12:19:17.418000'),(2,'43.227.136.103','','/',93,'2019-04-30 16:22:46.214145'),(3,'101.89.29.86','','/',1,'2019-04-02 12:19:17.418000'),(4,'31.184.238.190','','/',1,'2019-04-02 12:19:17.418000'),(5,'42.236.10.92','','/',1,'2019-04-02 12:19:17.418000'),(6,'43.227.138.22','湖北省','/',86,'2019-04-28 16:13:50.693398'),(7,'46.166.186.198','湖北省','/',1,'2019-04-02 12:19:17.418000'),(8,'180.163.220.66','湖北省','/detail/10',1,'2019-04-02 12:19:17.418000'),(9,'42.236.10.106','湖北省','/detail/17',2,'2019-04-02 12:19:17.418000'),(10,'109.201.152.11','湖北省','/',1,'2019-04-02 12:19:17.418000'),(11,'42.236.10.117','河南郑州','/detail/17',2,'2019-04-02 12:19:17.418000'),(12,'180.163.220.3','上海','/detail/17',1,'2019-04-02 12:19:17.418000'),(13,'52.53.201.78','美国','/',8,'2019-04-27 09:34:45.792638'),(14,'54.218.80.194','美国','/',1,'2019-04-02 12:19:17.418000'),(15,'203.208.60.91','北京市','/',1,'2019-04-02 12:19:17.418000'),(16,'203.208.60.62','北京市','/',2,'2019-04-02 12:19:17.418000'),(17,'203.208.60.58','北京市','/detail/15',2,'2019-04-14 12:37:57.084000'),(18,'203.208.60.30','北京市','/tag/vue',1,'2019-04-02 12:19:17.418000'),(19,'203.208.60.83','北京市','/category/3',4,'2019-04-25 09:25:00.920682'),(20,'203.208.60.40','北京市','/tag/8',3,'2019-04-25 23:43:03.480308'),(21,'203.208.60.73','北京市','/',2,'2019-04-24 22:07:02.537992'),(22,'203.208.60.46','北京市','/detail/5',1,'2019-04-02 12:19:17.418000'),(23,'203.208.60.20','北京市','/tag/git',4,'2019-04-18 09:28:43.465067'),(24,'203.208.60.64','北京市','/tag/mysql',2,'2019-04-02 12:19:17.418000'),(25,'203.208.60.103','北京市','/tag/4',3,'2019-04-25 01:08:03.152712'),(26,'203.208.60.22','北京市','/detail/10',1,'2019-04-02 12:19:17.418000'),(27,'203.208.60.4','北京市','/tag/1',3,'2019-04-24 16:58:27.970890'),(28,'203.208.60.69','北京市','/detail/11',2,'2019-04-02 12:19:17.418000'),(29,'203.208.60.82','北京市','/',2,'2019-04-18 08:28:36.851881'),(30,'203.208.60.102','北京市','/detail/18',5,'2019-04-24 22:37:48.330771'),(31,'203.208.60.34','北京市','/',2,'2019-04-11 23:13:10.688000'),(32,'203.208.60.50','北京市','/detail/18',1,'2019-04-02 12:19:17.418000'),(33,'203.208.60.89','北京市','/category/2',2,'2019-04-22 06:28:20.482457'),(34,'203.208.60.28','北京市','/tag/9',7,'2019-04-25 01:07:08.445370'),(35,'203.208.60.49','北京市','/tag/django',1,'2019-04-02 12:19:17.418000'),(36,'203.208.60.43','北京市','/tag/7',2,'2019-04-24 17:00:25.110713'),(37,'203.208.60.125','北京市','/detail/3',3,'2019-04-14 06:06:49.555000'),(38,'203.208.60.85','北京市','/tag/11',6,'2019-04-24 17:00:32.561595'),(39,'203.208.60.79','北京市','/tag/js',5,'2019-04-14 14:49:35.589000'),(40,'203.208.60.21','北京市','/tag/1',2,'2019-04-25 22:27:19.370302'),(41,'203.208.60.42','北京市','/tag/3',3,'2019-04-26 10:25:16.357155'),(42,'203.208.60.13','北京市','/tag/git',5,'2019-04-18 01:04:08.164111'),(43,'203.208.60.121','北京市','/tag/5',2,'2019-04-24 17:00:27.044820'),(44,'203.208.60.55','北京市','/tag/8',4,'2019-04-25 01:06:20.320394'),(45,'203.208.60.105','北京市','/category/1',2,'2019-04-02 12:19:17.418000'),(46,'203.208.60.32','北京市','/detail/2',1,'2019-04-02 12:19:17.418000'),(47,'203.208.60.12','北京市','/detail/8',1,'2019-04-02 12:19:17.418000'),(48,'203.208.60.124','北京市','/detail/1',1,'2019-04-02 12:19:17.418000'),(49,'203.208.60.116','北京市','/tag/git',1,'2019-04-02 12:19:17.418000'),(50,'203.208.60.110','北京市','/tag/vue',2,'2019-04-11 19:32:01.657000'),(51,'203.208.60.27','北京市','/tag/Linux',2,'2019-04-02 12:19:17.418000'),(52,'203.208.60.75','北京市','/category/1',2,'2019-04-02 12:19:17.418000'),(53,'203.208.60.72','北京市','/tag/Python',1,'2019-04-02 12:19:17.418000'),(54,'203.208.60.120','北京市','/tag/6',4,'2019-04-24 16:58:25.727326'),(55,'203.208.60.17','北京市','/category/1',3,'2019-04-22 06:48:38.793793'),(56,'203.208.60.61','北京市','/category/2',4,'2019-04-25 19:56:07.808569'),(57,'203.208.60.107','北京市','/category/2',1,'2019-04-02 12:19:17.418000'),(58,'203.208.60.98','北京市','/',3,'2019-04-15 09:29:18.586000'),(59,'203.208.60.19','北京市','/tag/9',3,'2019-04-24 16:58:31.864128'),(60,'203.208.60.93','北京市','/tag/mysql',2,'2019-04-02 12:19:17.418000'),(61,'203.208.60.26','北京市','/tag/10',2,'2019-04-24 17:00:29.820860'),(62,'203.208.60.1','北京市','/tag/9',2,'2019-04-26 09:15:27.238624'),(63,'203.208.60.88','北京市','/detail/9',1,'2019-04-02 12:19:17.418000'),(64,'203.208.60.10','北京市','/detail/6',1,'2019-04-02 12:19:17.418000'),(65,'203.208.60.45','北京市','/category/3',2,'2019-04-14 20:03:30.488000'),(66,'203.208.60.25','北京市','/detail/7',1,'2019-04-02 12:19:17.418000'),(67,'203.208.60.24','北京市','/tag/vue',2,'2019-04-19 22:31:26.910599'),(68,'203.208.60.84','北京市','/',2,'2019-04-24 17:07:14.399881'),(69,'203.208.60.68','北京市','/tag/mysql',4,'2019-04-14 13:39:03.697000'),(70,'203.208.60.29','北京市','/',2,'2019-04-14 06:01:17.290000'),(71,'211.56.145.140','大韩民国','/detail/9',109,'2019-04-21 07:25:15.314776'),(72,'159.89.187.160','美国','/',1,'2019-04-02 12:19:17.418000'),(73,'101.91.62.11','上海','/search/',3,'2019-04-13 06:19:14.596000'),(74,'58.251.121.186','广东','/detail/11',1,'2019-04-02 12:19:17.418000'),(75,'163.177.90.152','广东','/category/7',1,'2019-04-02 12:19:17.418000'),(76,'101.226.102.70','上海','/category/6',1,'2019-04-02 12:19:17.418000'),(77,'58.251.121.184','广东','/detail/9',1,'2019-04-02 12:19:17.418000'),(78,'59.36.119.226','广东','/detail/3',1,'2019-04-02 12:19:17.418000'),(79,'203.208.60.123','北京市','/detail/11',3,'2019-04-30 15:36:52.712497'),(80,'203.208.60.48','北京市','/detail/6',2,'2019-04-14 19:00:53.236000'),(81,'203.208.60.99','北京市','/tag/3',4,'2019-04-25 02:14:42.715934'),(82,'203.208.60.54','北京市','/tag/html',4,'2019-04-22 22:23:06.854874'),(83,'203.208.60.109','北京市','/detail/8',2,'2019-04-14 14:19:57.654000'),(84,'203.208.60.113','北京市','/tag/2',3,'2019-04-24 16:58:23.686251'),(85,'203.208.60.2','北京市','/tag/10',3,'2019-04-26 14:12:38.455608'),(86,'203.208.60.3','北京市','/tag/Python',1,'2019-04-02 12:19:17.418000'),(87,'203.208.60.92','北京市','/tag/1',4,'2019-04-25 01:05:33.504895'),(88,'203.208.60.9','北京市','/category/3',2,'2019-04-18 00:33:54.946871'),(89,'203.208.60.0','北京市','/',3,'2019-04-15 02:12:22.642000'),(90,'','','/detail/18',398,'2019-04-02 12:19:19.377000'),(91,'127.0.0.1','','/',359,'2019-04-17 13:55:42.683867'),(92,'220.181.108.121','北京市','/detail/6',2,'2019-04-29 12:01:51.306781'),(93,'203.208.60.6','北京市','/category/7',1,'2019-04-12 03:40:38.875000'),(94,'220.181.108.87','北京市','/',1,'2019-04-12 09:17:33.306000'),(95,'203.208.60.14','北京市','/category/7',3,'2019-04-24 21:45:47.049534'),(96,'123.125.71.52','北京市','/',1,'2019-04-12 10:24:13.199000'),(97,'202.108.211.151','北京市','/',3,'2019-04-26 12:30:21.286451'),(98,'203.208.60.18','北京市','/detail/16',1,'2019-04-12 13:58:28.914000'),(99,'212.180.208.122','波兰','/',1,'2019-04-12 16:11:08.808000'),(100,'117.186.143.14','中国','/detail/8',4,'2019-04-12 16:14:17.453000'),(101,'52.26.191.98','美国','/',1,'2019-04-12 17:41:18.488000'),(102,'58.251.121.185','广东','/',1,'2019-04-12 21:52:36.021000'),(103,'220.181.51.108','北京市','/',1,'2019-04-13 05:04:48.361000'),(104,'109.201.154.167','荷兰','/',1,'2019-04-13 06:17:23.388000'),(105,'203.208.60.117','北京市','/detail/9',1,'2019-04-13 07:53:09.816000'),(106,'203.208.60.5','北京市','/detail/4',1,'2019-04-13 12:34:27.304000'),(107,'203.208.60.31','北京市','/detail/11',3,'2019-04-25 14:35:06.522135'),(108,'123.125.67.207','北京市','/',1,'2019-04-13 16:54:20.388000'),(109,'220.181.108.111','北京市','/detail/12',1,'2019-04-13 18:53:41.252000'),(110,'203.208.60.11','北京市','/detail/3',1,'2019-04-14 05:58:32.201000'),(111,'203.208.60.104','北京市','/detail/15',3,'2019-04-30 15:20:30.036217'),(112,'203.208.60.60','北京市','/',1,'2019-04-14 07:12:55.316000'),(113,'203.208.60.90','北京市','/category/8',1,'2019-04-14 08:08:28.667000'),(114,'203.208.60.65','北京市','/detail/9',2,'2019-04-30 16:33:49.136902'),(115,'65.155.30.101','美国','/',1,'2019-04-14 09:14:19.651000'),(116,'65.154.226.126','美国','/',4,'2019-04-14 09:15:48.796000'),(117,'220.181.51.70','北京市','/',1,'2019-04-14 10:28:07.244000'),(118,'203.208.60.127','北京市','/tag/7',2,'2019-04-25 03:30:29.671174'),(119,'220.181.51.72','北京市','/',1,'2019-04-14 13:49:49.325000'),(120,'101.80.61.246','上海','/',1,'2019-04-14 16:01:42.403000'),(121,'123.125.71.25','北京市','/',1,'2019-04-14 16:06:46.521000'),(122,'109.201.154.245','荷兰','/',1,'2019-04-14 16:19:54.013000'),(123,'203.208.60.74','北京市','/category/2',2,'2019-04-24 14:46:32.013360'),(124,'220.181.108.86','北京市','/',1,'2019-04-14 17:32:54.217000'),(125,'203.208.60.39','北京市','/',2,'2019-04-24 16:57:04.102880'),(126,'14.215.176.14','广东深圳市','/',1,'2019-04-14 19:42:42.135000'),(127,'203.208.60.101','北京市','/tag/4',3,'2019-04-24 16:59:59.154545'),(128,'183.3.239.161','广东','/',1,'2019-04-14 22:50:05.789000'),(129,'113.201.254.214','陕西','/',7,'2019-04-14 22:54:48.843000'),(130,'203.208.60.8','北京市','/detail/7',2,'2019-04-25 18:05:46.464391'),(131,'203.208.60.112','北京市','/detail/3',2,'2019-04-15 05:03:44.235000'),(132,'203.208.60.38','北京市','/tag/vue',2,'2019-04-18 06:07:12.912829'),(133,'203.208.60.108','北京市','/detail/16',1,'2019-04-15 01:55:30.009000'),(134,'72.80.29.181','美国','/',1,'2019-04-15 05:22:33.984000'),(135,'14.17.3.65','广东','/',1,'2019-04-15 09:30:13.360000'),(136,'220.181.108.92','北京市','/detail/7',2,'2019-04-26 07:33:13.031800'),(137,'120.25.208.128','中国','/',1,'2019-04-15 13:00:00.463000'),(138,'220.243.136.105','北京市','/',1,'2019-04-15 14:34:09.173000'),(139,'220.181.51.77','北京市','/',1,'2019-04-15 14:37:46.299000'),(140,'123.125.71.86','北京市','/',1,'2019-04-15 19:18:33.230000'),(141,'123.125.71.31','北京市','/detail/1',1,'2019-04-15 19:57:33.894000'),(142,'203.208.60.86','北京市','/category/6',1,'2019-04-15 21:58:31.761000'),(143,'203.208.60.56','北京市','/tag/js',1,'2019-04-15 22:08:49.717000'),(144,'109.201.154.236','荷兰','/',1,'2019-04-16 05:28:46.925000'),(145,'216.145.11.94','美国','/',1,'2019-04-16 06:51:14.349000'),(146,'123.125.67.215','北京市','/',1,'2019-04-16 10:49:26.984000'),(147,'103.101.160.35','越南','/',2,'2019-04-16 10:51:51.830000'),(148,'108.62.3.46','美国','/',1,'2019-04-16 11:46:46.387000'),(149,'36.110.199.180','北京市','/',1,'2019-04-16 13:28:30.866000'),(150,'123.125.71.32','北京市','/detail/18',1,'2019-04-16 15:19:11.551000'),(151,'112.12.181.136','浙江省温州市','/',5,'2019-04-16 21:01:23.371000'),(152,'111.13.102.6','中国','/',1,'2019-04-16 21:37:07.428000'),(153,'220.181.108.90','北京市','/detail/15',2,'2019-04-23 09:40:39.875522'),(154,'209.17.96.66','美国','/',1,'2019-04-17 01:12:13.949000'),(155,'14.215.176.17','广东深圳市','/',1,'2019-04-17 01:39:36.598000'),(156,'123.125.71.112','北京市','/detail/15',2,'2019-04-19 10:14:15.985247'),(157,'123.125.71.34','北京市','/detail/6',1,'2019-04-17 02:16:18.272000'),(158,'220.181.108.103','北京市','/',1,'2019-04-17 05:01:25.646000'),(159,'109.201.154.216','荷兰','/',1,'2019-04-17 07:30:36.518000'),(160,'123.125.71.56','北京市','/detail/2',1,'2019-04-17 10:06:37.558000'),(161,'46.166.190.134','荷兰','/',1,'2019-04-17 10:46:47.288000'),(162,'171.82.24.102','湖北省武汉','/detail/4',11,'2019-04-17 14:38:15.852796'),(163,'119.2.128.178','广东','/',37,'2019-04-17 22:07:51.964377'),(164,'123.125.67.146','北京市','/',1,'2019-04-17 18:44:34.156892'),(165,'123.125.71.48','北京市','/detail/9',1,'2019-04-17 22:03:47.749522'),(166,'64.62.243.163','美国','/',2,'2019-04-25 01:08:11.736716'),(167,'104.154.236.186','美国','/',1,'2019-04-17 22:53:07.823549'),(168,'123.125.71.12','北京市','/detail/14',1,'2019-04-18 01:13:36.353734'),(169,'178.73.215.171','瑞典','/',2,'2019-04-24 23:09:48.105100'),(170,'203.208.60.115','北京市','/tag/6',4,'2019-04-25 21:11:32.793245'),(171,'203.208.60.71','北京市','/detail/18',1,'2019-04-18 04:38:00.788871'),(172,'123.125.71.91','北京市','/detail/7',2,'2019-04-26 06:26:33.060838'),(173,'203.208.60.35','北京市','/category/8',2,'2019-04-18 17:49:12.476777'),(174,'203.208.60.57','北京市','/',1,'2019-04-18 09:29:26.698466'),(175,'203.208.60.63','北京市','/tag/django',1,'2019-04-18 09:38:54.368165'),(176,'220.181.108.159','北京市','/detail/4',2,'2019-04-25 09:39:10.561336'),(177,'123.125.71.40','北京市','/detail/10',1,'2019-04-18 11:29:20.873356'),(178,'54.153.36.73','美国','/',1,'2019-04-18 11:30:22.001335'),(179,'203.208.60.87','北京市','/tag/mysql',1,'2019-04-18 13:28:14.483595'),(180,'203.208.60.77','北京市','/detail/12',2,'2019-04-19 11:12:05.720487'),(181,'223.192.250.10','中国','/search/',13,'2019-04-18 15:40:35.602474'),(182,'203.208.60.51','北京市','/category/3',2,'2019-04-19 11:01:55.216477'),(183,'123.125.71.87','北京市','/detail/8',1,'2019-04-18 16:23:54.082933'),(184,'220.181.108.104','北京市','/detail/6',2,'2019-04-29 13:08:31.254235'),(185,'123.125.71.98','北京市','/category/8',1,'2019-04-18 19:57:14.099329'),(186,'60.191.20.210','浙江省','/',1,'2019-04-18 20:37:49.546180'),(187,'123.125.71.42','北京市','/detail/5',1,'2019-04-19 03:21:08.325779'),(188,'109.201.152.4','荷兰','/',1,'2019-04-19 06:35:31.768349'),(189,'123.125.71.21','北京市','/tag/js',1,'2019-04-19 14:34:25.314384'),(190,'185.100.87.249','罗马尼亚','/',3,'2019-04-19 18:28:18.980353'),(191,'123.125.71.51','北京市','/category/2',1,'2019-04-19 18:21:50.727893'),(192,'220.181.108.146','北京市','/category/7',1,'2019-04-19 18:55:11.388926'),(193,'52.25.26.2','美国','/',1,'2019-04-19 21:01:49.232068'),(194,'220.181.108.165','北京市','/category/1',1,'2019-04-19 22:22:14.159537'),(195,'220.181.108.175','北京市','/detail/11',1,'2019-04-20 01:47:53.646512'),(196,'206.180.165.147','美国','/',1,'2019-04-20 10:40:40.262507'),(197,'111.206.36.142','北京市','/',2,'2019-04-27 22:42:29.944918'),(198,'123.125.71.116','北京市','/detail/7',1,'2019-04-20 18:17:47.458263'),(199,'220.181.108.169','北京市','/detail/6',1,'2019-04-20 19:24:28.485535'),(200,'123.125.71.90','北京市','/detail/4',2,'2019-04-25 17:13:29.494824'),(201,'46.161.27.210','俄罗斯','/',1,'2019-04-21 02:43:46.975385'),(202,'220.181.108.174','北京市','/detail/3',1,'2019-04-21 04:10:35.707430'),(203,'220.181.108.115','北京市','/category/6',1,'2019-04-21 07:50:37.865588'),(204,'220.181.108.94','北京市','/detail/2',1,'2019-04-21 08:23:57.906632'),(205,'123.125.71.45','北京市','/category/4',1,'2019-04-21 14:47:16.694497'),(206,'220.181.108.184','北京市','/tag/Linux',1,'2019-04-21 15:20:36.661876'),(207,'35.222.172.23','美国','/',1,'2019-04-21 16:40:13.816337'),(208,'123.125.71.57','北京市','/detail/6',3,'2019-04-29 10:55:11.825486'),(209,'123.125.71.36','北京市','/tag/vue',1,'2019-04-21 21:36:56.006570'),(210,'220.181.108.113','北京市','/tag/django',1,'2019-04-22 03:44:48.020134'),(211,'46.166.186.209','荷兰','/',1,'2019-04-22 09:33:01.078801'),(212,'220.181.108.163','北京市','/tag/mysql',1,'2019-04-22 10:08:08.671281'),(213,'123.125.71.43','北京市','/tag/前端',1,'2019-04-22 14:57:10.402805'),(214,'220.181.108.95','北京市','/detail/6',2,'2019-04-29 09:48:31.243349'),(215,'220.181.108.105','北京市','/detail/15',2,'2019-04-25 18:43:29.570903'),(216,'46.166.137.214','荷兰','/',1,'2019-04-23 12:36:11.533337'),(217,'185.234.219.246','爱尔兰','/',1,'2019-04-23 16:18:11.759353'),(218,'123.125.71.106','北京市','/detail/3',1,'2019-04-23 16:22:43.362040'),(219,'109.201.138.229','荷兰','/',1,'2019-04-24 00:07:39.340523'),(220,'123.125.71.15','北京市','/category/1',1,'2019-04-24 02:07:17.041484'),(221,'192.241.130.186','美国','/',2,'2019-04-24 04:32:05.581053'),(222,'109.201.154.251','荷兰','/',1,'2019-04-24 04:36:23.407081'),(223,'109.201.154.228','荷兰','/',1,'2019-04-24 07:28:17.274692'),(224,'123.125.71.41','北京市','/tag/html',1,'2019-04-24 08:29:29.615927'),(225,'94.130.167.248','德国','/',1,'2019-04-24 09:25:01.104948'),(226,'220.181.108.149','北京市','/detail/15',1,'2019-04-24 11:33:54.205114'),(227,'120.77.179.221','中国','/',1,'2019-04-24 13:04:10.331893'),(228,'220.181.108.101','北京市','/detail/3',1,'2019-04-24 16:23:11.713677'),(229,'203.208.60.66','北京市','/tag/3',1,'2019-04-24 16:58:20.993083'),(230,'185.195.24.60','俄罗斯','/',2,'2019-04-24 19:11:55.914748'),(231,'203.208.60.23','北京市','/detail/15',1,'2019-04-24 19:47:41.861500'),(232,'203.208.60.126','北京市','/category/8',2,'2019-04-25 12:14:56.623097'),(233,'34.208.16.109','美国','/',1,'2019-04-24 21:10:07.945774'),(234,'220.181.108.116','北京市','/detail/7',2,'2019-04-26 08:39:53.054078'),(235,'203.208.60.53','北京市','/',1,'2019-04-25 00:35:42.831002'),(236,'109.201.154.217','荷兰','/',1,'2019-04-25 04:40:45.635369'),(237,'220.181.108.79','北京市','/detail/3',1,'2019-04-25 04:45:37.104130'),(238,'123.125.71.117','北京市','/detail/3',1,'2019-04-25 05:52:17.146003'),(239,'203.208.60.70','北京市','/tag/10',1,'2019-04-25 06:02:04.905124'),(240,'123.125.71.100','北京市','/detail/4',1,'2019-04-25 12:39:10.708781'),(241,'220.181.108.80','北京市','/detail/15',1,'2019-04-25 14:27:34.071178'),(242,'203.208.60.81','北京市','/detail/11',1,'2019-04-25 15:35:42.104294'),(243,'123.125.71.27','北京市','/detail/15',1,'2019-04-25 16:08:35.742360'),(244,'52.10.103.167','美国','/',1,'2019-04-25 20:06:33.532581'),(245,'123.125.71.24','北京市','/detail/4',1,'2019-04-25 20:13:29.500922'),(246,'203.208.60.36','北京市','/detail/4',1,'2019-04-25 21:36:44.906169'),(247,'180.97.35.91','江苏省','/',1,'2019-04-26 01:25:14.580840'),(248,'123.125.71.39','北京市','/',1,'2019-04-26 04:01:36.385446'),(249,'220.181.108.89','北京市','/detail/13',2,'2019-04-30 03:24:13.192934'),(250,'220.181.108.82','北京市','/detail/7',1,'2019-04-26 05:19:52.814559'),(251,'123.125.71.111','北京市','/tag/1',2,'2019-04-28 17:07:30.815908'),(252,'203.208.60.100','北京市','/tag/4',1,'2019-04-26 09:19:42.347933'),(253,'203.208.60.122','北京市','/tag/7',1,'2019-04-26 11:41:03.606567'),(254,'203.208.60.33','北京市','/tag/5',1,'2019-04-26 12:56:50.995550'),(255,'203.208.60.16','北京市','/tag/11',1,'2019-04-26 15:28:24.578154'),(256,'209.17.97.50','美国','/',1,'2019-04-26 23:59:52.960703'),(257,'180.97.35.90','江苏省','/',1,'2019-04-27 01:30:16.827955'),(258,'220.181.108.117','北京市','/category/5',1,'2019-04-27 21:34:50.511440'),(259,'220.181.51.80','北京市','/',1,'2019-04-28 08:16:03.286967'),(260,'123.125.71.28','北京市','/detail/13',2,'2019-04-30 00:24:01.674274'),(261,'123.125.67.165','北京市','/',1,'2019-04-28 16:14:14.351981'),(262,'36.110.199.242','北京市','/',1,'2019-04-28 19:19:08.688554'),(263,'123.125.71.85','北京市','/tag/2',1,'2019-04-28 19:31:41.299476'),(264,'220.181.51.79','北京市','/',1,'2019-04-29 12:29:54.298222'),(265,'123.125.71.22','北京市','/tag/8',1,'2019-04-29 19:39:17.644947'),(266,'220.181.108.179','北京市','/detail/13',1,'2019-04-29 21:59:26.588924'),(267,'123.125.71.54','北京市','/detail/13',1,'2019-04-30 05:24:13.178608'),(268,'123.125.67.209','北京市','/',1,'2019-04-30 14:14:41.330565'),(269,'220.181.108.162','北京市','/tag/11',1,'2019-04-30 14:51:59.859181'),(270,'203.208.60.94','北京市','/category/3',2,'2019-04-30 16:43:42.207418');
/*!40000 ALTER TABLE `accounts_userip` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_group`
--

DROP TABLE IF EXISTS `auth_group`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_group` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(150) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group`
--

LOCK TABLES `auth_group` WRITE;
/*!40000 ALTER TABLE `auth_group` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_group` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_group_permissions`
--

DROP TABLE IF EXISTS `auth_group_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_group_permissions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_group_permissions_group_id_permission_id_0cd325b0_uniq` (`group_id`,`permission_id`),
  KEY `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` (`permission_id`),
  CONSTRAINT `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`),
  CONSTRAINT `auth_group_permissions_group_id_b120cbf9_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group_permissions`
--

LOCK TABLES `auth_group_permissions` WRITE;
/*!40000 ALTER TABLE `auth_group_permissions` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_group_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_permission`
--

DROP TABLE IF EXISTS `auth_permission`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_permission` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `content_type_id` int(11) NOT NULL,
  `codename` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_permission_content_type_id_codename_01ab375a_uniq` (`content_type_id`,`codename`),
  CONSTRAINT `auth_permission_content_type_id_2f476e4b_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=97 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_permission`
--

LOCK TABLES `auth_permission` WRITE;
/*!40000 ALTER TABLE `auth_permission` DISABLE KEYS */;
INSERT INTO `auth_permission` VALUES (1,'Can add log entry',1,'add_logentry'),(2,'Can change log entry',1,'change_logentry'),(3,'Can delete log entry',1,'delete_logentry'),(4,'Can view log entry',1,'view_logentry'),(5,'Can add permission',2,'add_permission'),(6,'Can change permission',2,'change_permission'),(7,'Can delete permission',2,'delete_permission'),(8,'Can view permission',2,'view_permission'),(9,'Can add group',3,'add_group'),(10,'Can change group',3,'change_group'),(11,'Can delete group',3,'delete_group'),(12,'Can view group',3,'view_group'),(13,'Can add content type',4,'add_contenttype'),(14,'Can change content type',4,'change_contenttype'),(15,'Can delete content type',4,'delete_contenttype'),(16,'Can view content type',4,'view_contenttype'),(17,'Can add session',5,'add_session'),(18,'Can change session',5,'change_session'),(19,'Can delete session',5,'delete_session'),(20,'Can view session',5,'view_session'),(21,'Can add site',6,'add_site'),(22,'Can change site',6,'change_site'),(23,'Can delete site',6,'delete_site'),(24,'Can view site',6,'view_site'),(25,'Can add 文章',7,'add_article'),(26,'Can change 文章',7,'change_article'),(27,'Can delete 文章',7,'delete_article'),(28,'Can view 文章',7,'view_article'),(29,'Can add 轮播图',8,'add_banner'),(30,'Can change 轮播图',8,'change_banner'),(31,'Can delete 轮播图',8,'delete_banner'),(32,'Can view 轮播图',8,'view_banner'),(33,'Can add 文章分类',9,'add_category'),(34,'Can change 文章分类',9,'change_category'),(35,'Can delete 文章分类',9,'delete_category'),(36,'Can view 文章分类',9,'view_category'),(37,'Can add 友情链接',10,'add_friendlink'),(38,'Can change 友情链接',10,'change_friendlink'),(39,'Can delete 友情链接',10,'delete_friendlink'),(40,'Can view 友情链接',10,'view_friendlink'),(41,'Can add 导航分类',11,'add_navigation'),(42,'Can change 导航分类',11,'change_navigation'),(43,'Can delete 导航分类',11,'delete_navigation'),(44,'Can view 导航分类',11,'view_navigation'),(45,'Can add 博客事件信息',12,'add_notice'),(46,'Can change 博客事件信息',12,'change_notice'),(47,'Can delete 博客事件信息',12,'delete_notice'),(48,'Can view 博客事件信息',12,'view_notice'),(49,'Can add 站点信息',13,'add_siteinfo'),(50,'Can change 站点信息',13,'change_siteinfo'),(51,'Can delete 站点信息',13,'delete_siteinfo'),(52,'Can view 站点信息',13,'view_siteinfo'),(53,'Can add 文章标签',14,'add_tag'),(54,'Can change 文章标签',14,'change_tag'),(55,'Can delete 文章标签',14,'delete_tag'),(56,'Can view 文章标签',14,'view_tag'),(57,'Can add 博客统计信息',15,'add_total'),(58,'Can change 博客统计信息',15,'change_total'),(59,'Can delete 博客统计信息',15,'delete_total'),(60,'Can view 博客统计信息',15,'view_total'),(61,'Can add 推荐位',16,'add_tui'),(62,'Can change 推荐位',16,'change_tui'),(63,'Can delete 推荐位',16,'delete_tui'),(64,'Can view 推荐位',16,'view_tui'),(65,'Can add 关于自己评论',17,'add_aboutcomment'),(66,'Can change 关于自己评论',17,'change_aboutcomment'),(67,'Can delete 关于自己评论',17,'delete_aboutcomment'),(68,'Can view 关于自己评论',17,'view_aboutcomment'),(69,'Can add 文章评论',18,'add_articlecomment'),(70,'Can change 文章评论',18,'change_articlecomment'),(71,'Can delete 文章评论',18,'delete_articlecomment'),(72,'Can view 文章评论',18,'view_articlecomment'),(73,'Can add comment user',19,'add_commentuser'),(74,'Can change comment user',19,'change_commentuser'),(75,'Can delete comment user',19,'delete_commentuser'),(76,'Can view comment user',19,'view_commentuser'),(77,'Can add 给我留言',20,'add_messagecomment'),(78,'Can change 给我留言',20,'change_messagecomment'),(79,'Can delete 给我留言',20,'delete_messagecomment'),(80,'Can view 给我留言',20,'view_messagecomment'),(81,'Can add 用户',21,'add_oauth'),(82,'Can change 用户',21,'change_oauth'),(83,'Can delete 用户',21,'delete_oauth'),(84,'Can view 用户',21,'view_oauth'),(85,'Can add 网站日访问量统计',22,'add_daynumber'),(86,'Can change 网站日访问量统计',22,'change_daynumber'),(87,'Can delete 网站日访问量统计',22,'delete_daynumber'),(88,'Can view 网站日访问量统计',22,'view_daynumber'),(89,'Can add 访问用户信息',23,'add_userip'),(90,'Can change 访问用户信息',23,'change_userip'),(91,'Can delete 访问用户信息',23,'delete_userip'),(92,'Can view 访问用户信息',23,'view_userip'),(93,'Can add 文章评论',24,'add_comment'),(94,'Can change 文章评论',24,'change_comment'),(95,'Can delete 文章评论',24,'delete_comment'),(96,'Can view 文章评论',24,'view_comment');
/*!40000 ALTER TABLE `auth_permission` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_article`
--

DROP TABLE IF EXISTS `blog_article`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_article` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(70) NOT NULL,
  `summary` longtext NOT NULL,
  `body` longtext NOT NULL,
  `img` varchar(100) NOT NULL,
  `format_content` longtext NOT NULL,
  `views` int(10) unsigned NOT NULL,
  `loves` int(11) NOT NULL,
  `created_time` datetime(6) NOT NULL,
  `updated_time` datetime(6) NOT NULL,
  `author_id` int(11) NOT NULL,
  `category_id` int(11) NOT NULL,
  `tui_id` int(11) DEFAULT NULL,
  `status` varchar(1) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `blog_article_title_3c514952_uniq` (`title`),
  KEY `blog_article_author_id_905add38_fk_accounts_oauth_id` (`author_id`),
  KEY `blog_article_category_id_7e38f15e_fk_blog_category_id` (`category_id`),
  KEY `blog_article_tui_id_d498cd9f_fk_blog_tui_id` (`tui_id`),
  CONSTRAINT `blog_article_category_id_7e38f15e_fk_blog_category_id` FOREIGN KEY (`category_id`) REFERENCES `blog_category` (`id`),
  CONSTRAINT `blog_article_tui_id_d498cd9f_fk_blog_tui_id` FOREIGN KEY (`tui_id`) REFERENCES `blog_tui` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=29 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_article`
--

LOCK TABLES `blog_article` WRITE;
/*!40000 ALTER TABLE `blog_article` DISABLE KEYS */;
INSERT INTO `blog_article` VALUES (1,'前端的几个重要知识点','记录自己平时碰到的还有在网上看到的一些有趣地问题','### viewport 视口\r\n```html\r\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no\" />\r\nwidth=device-width(设备宽度) \r\ninitial-scale=1.0(缩放比例) \r\nminimum-scale=1.0(允许用户最小缩放比例)\r\nmaximum-scale=1.0(允许用户最大缩放比例)\r\nuser-scalable=no(yes/no,是否允许手动缩放)\r\n```\r\n\r\n[文章详细地址](https://www.cnblogs.com/2050/p/3877280.html \"文章详细地址\"){:target=\"_blank\"}','article_img/2019/04/25/html5.jpg','<h3 id=\"viewport\">viewport 视口</h3>\n<pre class=\"codehilite\"><code class=\"language-html\">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no&quot; /&gt;  \nwidth=device-width(设备宽度)   \ninitial-scale=1.0(缩放比例)   \nminimum-scale=1.0(允许用户最小缩放比例)  \nmaximum-scale=1.0(允许用户最大缩放比例)  \nuser-scalable=no(yes/no,是否允许手动缩放)  </code></pre>\n\n\n<p><a href=\"https://www.cnblogs.com/2050/p/3877280.html\" target=\"_blank\" title=\"文章详细地址\">文章详细地址</a></p>',189,2,'2019-04-25 17:26:04.694351','2019-04-25 17:26:04.694351',1,4,1,'p'),(2,'pycharm配置scss文件','当我们用CSS写代码规模较大的Web应用时，容易造成选择器、层叠的复杂度过高，这时我们就需要使用一些预处理器来进行CSS开发,Sass 是一款强化 CSS 的辅助工具，它在 CSS 语法的基础上增加了变量 (variables)、嵌套 (nested rules)、混合 (mixins)、导入 (inline import)等高级功能,使我们更好地组织管理样式文件，以及更高效地开发项目.','当我们用CSS写代码规模较大的Web应用时，容易造成选择器、层叠的复杂度过高，这时我们就需要使用一些预处理器来进行CSS开发,Sass 是一款强化 CSS 的辅助工具，它在 CSS 语法的基础上增加了变量 (variables)、嵌套 (nested rules)、混合 (mixins)、导入 (inline import)等高级功能,使我们更好地组织管理样式文件，以及更高效地开发项目.\r\n### 安装Ruby以及Sass\r\n\r\n在Pycharm中想要使用Scss,Scss是基于Ruby的,首先,我们需要安装Ruby,可以去[官网](https://rubyinstaller.org/downloads/ \"官网\"){:target=_blank}下载,安装比较简单,一直next即可,进入`cmd`,执行命令`ruby -v`查看`ruby`是否有ruby版本,如果没有重新安装,安装完成后还要安装`sass`,在`cmd`终端执行命令`gem install sass`,等待安装完成!\r\n\r\n### 在Pycharm中配置file watcher\r\n\r\n进入到`File -> Settings -> Tools -> File Watchers`点击`+`添加`SCSS`\r\n```Scss\r\nName: SCSS\r\nFile type: SCSS Style Sheet\r\nScope: Project\r\nProgram: 你安装的sass文件\r\nArguments: --style expanded --no-cache --update $FilePath$\r\nOutput paths to refresh: $FileName$:$ProjectFileDir$/css/$FileNameWithoutExtension$.css\r\n```\r\n这样你写了`SCSS`文件保存后就会自动编译了~','article_img/2019/04/26/scss.png','<p>当我们用CSS写代码规模较大的Web应用时，容易造成选择器、层叠的复杂度过高，这时我们就需要使用一些预处理器来进行CSS开发,Sass 是一款强化 CSS 的辅助工具，它在 CSS 语法的基础上增加了变量 (variables)、嵌套 (nested rules)、混合 (mixins)、导入 (inline import)等高级功能,使我们更好地组织管理样式文件，以及更高效地开发项目.  </p>\n<h3 id=\"rubysass\">安装Ruby以及Sass</h3>\n<p>在Pycharm中想要使用Scss,Scss是基于Ruby的,首先,我们需要安装Ruby,可以去<a href=\"https://rubyinstaller.org/downloads/\" target=\"_blank\" title=\"官网\">官网</a>下载,安装比较简单,一直next即可,进入<code>cmd</code>,执行命令<code>ruby -v</code>查看<code>ruby</code>是否有ruby版本,如果没有重新安装,安装完成后还要安装<code>sass</code>,在<code>cmd</code>终端执行命令<code>gem install sass</code>,等待安装完成!  </p>\n<h3 id=\"pycharmfile-watcher\">在Pycharm中配置file watcher</h3>\n<p>进入到<code>File -&gt; Settings -&gt; Tools -&gt; File Watchers</code>点击<code>+</code>添加<code>SCSS</code>  </p>\n<pre class=\"codehilite\"><code class=\"language-Scss\">Name: SCSS  \nFile type: SCSS Style Sheet  \nScope: Project  \nProgram: 你安装的sass文件  \nArguments: --style expanded --no-cache --update $FilePath$  \nOutput paths to refresh: $FileName$:$ProjectFileDir$/css/$FileNameWithoutExtension$.css  </code></pre>\n\n\n<p>这样你写了<code>SCSS</code>文件保存后就会自动编译了~</p>',368,0,'2019-04-26 17:13:33.021683','2019-05-03 15:59:13.605547',1,5,1,'p'),(3,'文本超出隐藏','有些时候我们写一些文本文字时,需要处理超出的问题,这时我们需要用到css3的属性来实现文本超出隐藏','有些时候我们写一些文本文字时,需要处理超出的问题,这时我们需要用到css3的属性来实现文本超出隐藏\r\n### 要实现文本超出隐藏,我们要先了解这些css属性\r\n### overflow\r\n|  值 |  描述 |\r\n| :------------: | :------------: |\r\n|  visible |  默认值.超出后可见 |\r\n|  hidden |  超出后隐藏 |\r\n|  scroll | 超出后会显示滚动条  |\r\n|  auto | 如果内容超出,则会出现滚动条  |\r\n|  inherit |  继承父类的overflow属性 |\r\n\r\n### text-overflow\r\n|  值 |  描述 |\r\n| :------------: | :------------: |\r\n|  clip |  修剪文本 |\r\n|  elipsis | 用省略号代替修剪的文本 |\r\n|  string | 用给定字符串代替修剪的文本  |\r\n\r\n### white-space\r\n|  值 |  描述 |\r\n| :------------: | :------------: |\r\n|  normal |  默认.空白被浏览器忽略 |\r\n|  nowrap |  文本不会换行 |\r\n|  inherit | 继承父元素 white-space 属性  |\r\n\r\n### 单行超出隐藏\r\n\r\n```css\r\noverflow: hidden;\r\ntext-overflow: ellipsis;\r\nwhite-space: nowrap;\r\n```\r\n![](/media/upimg/text-overflow_20190330005419_840.png)\r\n\r\n### 多行文本超出隐藏\r\n```css\r\n/* 适用范围：因使用了WebKit的CSS扩展属性，该方法适用于WebKit浏览器及移动端； */\r\ndisplay: -webkit-box;\r\n/* 必须结合的属性，将对象作为弹性伸缩盒子模型显示。 */\r\n-webkit-box-orient: vertical;\r\n/* 必须结合的属性，设置或检索伸缩盒对象的子元素的排列方式 */\r\n-webkit-line-clamp: 3;\r\n/* 用来限制在一个块元素显示的文本的行数。 为了实现该效果，它需要组合其他的WebKit属性 */\r\noverflow: hidden;\r\n```\r\n![](/media/upimg/text-overflow-clamp_20190330005725_841.png)\r\n\r\n该文章属性借鉴自[w3school](http://www.w3school.com.cn/ \"w3school\"){:traget=_blank}可自行到其网站查看','article_img/2019/04/27/css.jpg','<p>有些时候我们写一些文本文字时,需要处理超出的问题,这时我们需要用到css3的属性来实现文本超出隐藏  </p>\n<h3 id=\"css\">要实现文本超出隐藏,我们要先了解这些css属性</h3>\n<h3 id=\"overflow\">overflow</h3>\n<table>\n<thead>\n<tr>\n<th align=\"center\">值</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">visible</td>\n<td align=\"center\">默认值.超出后可见</td>\n</tr>\n<tr>\n<td align=\"center\">hidden</td>\n<td align=\"center\">超出后隐藏</td>\n</tr>\n<tr>\n<td align=\"center\">scroll</td>\n<td align=\"center\">超出后会显示滚动条</td>\n</tr>\n<tr>\n<td align=\"center\">auto</td>\n<td align=\"center\">如果内容超出,则会出现滚动条</td>\n</tr>\n<tr>\n<td align=\"center\">inherit</td>\n<td align=\"center\">继承父类的overflow属性</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"text-overflow\">text-overflow</h3>\n<table>\n<thead>\n<tr>\n<th align=\"center\">值</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">clip</td>\n<td align=\"center\">修剪文本</td>\n</tr>\n<tr>\n<td align=\"center\">elipsis</td>\n<td align=\"center\">用省略号代替修剪的文本</td>\n</tr>\n<tr>\n<td align=\"center\">string</td>\n<td align=\"center\">用给定字符串代替修剪的文本</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"white-space\">white-space</h3>\n<table>\n<thead>\n<tr>\n<th align=\"center\">值</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">normal</td>\n<td align=\"center\">默认.空白被浏览器忽略</td>\n</tr>\n<tr>\n<td align=\"center\">nowrap</td>\n<td align=\"center\">文本不会换行</td>\n</tr>\n<tr>\n<td align=\"center\">inherit</td>\n<td align=\"center\">继承父元素 white-space 属性</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"_1\">单行超出隐藏</h3>\n<pre class=\"codehilite\"><code class=\"language-css\">overflow: hidden;  \ntext-overflow: ellipsis;  \nwhite-space: nowrap;  </code></pre>\n\n\n<p><img alt=\"\" src=\"/media/upimg/text-overflow_20190330005419_840.png\" />  </p>\n<h3 id=\"_2\">多行文本超出隐藏</h3>\n<pre class=\"codehilite\"><code class=\"language-css\">/* 适用范围：因使用了WebKit的CSS扩展属性，该方法适用于WebKit浏览器及移动端； */  \ndisplay: -webkit-box;  \n/* 必须结合的属性，将对象作为弹性伸缩盒子模型显示。 */  \n-webkit-box-orient: vertical;  \n/* 必须结合的属性，设置或检索伸缩盒对象的子元素的排列方式 */  \n-webkit-line-clamp: 3;  \n/* 用来限制在一个块元素显示的文本的行数。 为了实现该效果，它需要组合其他的WebKit属性 */  \noverflow: hidden;  </code></pre>\n\n\n<p><img alt=\"\" src=\"/media/upimg/text-overflow-clamp_20190330005725_841.png\" />  </p>\n<p>该文章属性借鉴自<a href=\"http://www.w3school.com.cn/\" title=\"w3school\" traget=\"_blank\">w3school</a>可自行到其网站查看</p>',243,22,'2019-04-27 23:35:19.364581','2019-05-03 15:59:31.274463',1,4,1,'p'),(4,'假设高度已知,左右宽度固定,中间自适应的几种方案','在网上看到这样一个问题,你能想出几种方案,我们很容易就会想到float, position,flex,然后绞尽脑汁再也想不出来了,现在记录下来','在网上看到这样一个问题,你能想出几种方案,我们很容易就会想到float, position,flex,然后绞尽脑汁再也想不出来了,现在记录下来\r\n### 第一种方案: float\r\n```html\r\n<section class=\"layout float\">\r\n    <div  class=\"left\"></div>\r\n    <div class=\"right\"></div>\r\n    <div class=\"center\">\r\n        <h1>浮动解决方案</h1>\r\n    </div>\r\n</section>\r\n```\r\n```css\r\n.left {\r\nwidth: 300px;\r\n	background-color: red;\r\n}\r\n.right {\r\n	width: 300px;\r\n	background-color: blue;\r\n}\r\n.float .left {\r\n	float: left;\r\n}\r\n.float .right {\r\n	float: right;\r\n}\r\nsection.layout div {\r\n	min-height: 100px;\r\n}\r\n.center {\r\n	background-color: yellow;\r\n}\r\n```\r\n### 第二种方案: position\r\n```html\r\n<section class=\"layout position\">\r\n	<div class=\"right\"></div>\r\n	<div class=\"left\"></div>\r\n	<div class=\"center\">\r\n		<h1>绝对定位解决方案</h1>\r\n	</div>\r\n</section>\r\n```\r\n```css\r\nsection.position {\r\n	position: relative;\r\n}\r\n\r\nsection.position .left {\r\n	position: absolute;\r\n	left: 0;\r\n}\r\n\r\nsection.position .right {\r\n	position: absolute;\r\n	right: 0;\r\n}\r\n\r\nsection.position .center {\r\n	margin-left: 300px;\r\n	margin-right: 300px;\r\n}\r\n```','article_img/2019/04/27/html5.jpg','<p>在网上看到这样一个问题,你能想出几种方案,我们很容易就会想到float, position,flex,然后绞尽脑汁再也想不出来了,现在记录下来  </p>\n<h3 id=\"float\">第一种方案: float</h3>\n<pre class=\"codehilite\"><code class=\"language-html\">&lt;section class=&quot;layout float&quot;&gt;  \n    &lt;div  class=&quot;left&quot;&gt;&lt;/div&gt;  \n    &lt;div class=&quot;right&quot;&gt;&lt;/div&gt;  \n    &lt;div class=&quot;center&quot;&gt;  \n        &lt;h1&gt;浮动解决方案&lt;/h1&gt;  \n    &lt;/div&gt;  \n&lt;/section&gt;  </code></pre>\n\n\n<pre class=\"codehilite\"><code class=\"language-css\">.left {  \nwidth: 300px;  \n    background-color: red;  \n}  \n.right {  \n    width: 300px;  \n    background-color: blue;  \n}  \n.float .left {  \n    float: left;  \n}  \n.float .right {  \n    float: right;  \n}  \nsection.layout div {  \n    min-height: 100px;  \n}  \n.center {  \n    background-color: yellow;  \n}  </code></pre>\n\n\n<h3 id=\"position\">第二种方案: position</h3>\n<pre class=\"codehilite\"><code class=\"language-html\">&lt;section class=&quot;layout position&quot;&gt;  \n    &lt;div class=&quot;right&quot;&gt;&lt;/div&gt;  \n    &lt;div class=&quot;left&quot;&gt;&lt;/div&gt;  \n    &lt;div class=&quot;center&quot;&gt;  \n        &lt;h1&gt;绝对定位解决方案&lt;/h1&gt;  \n    &lt;/div&gt;  \n&lt;/section&gt;  </code></pre>\n\n\n<pre class=\"codehilite\"><code class=\"language-css\">section.position {  \n    position: relative;  \n}  \n\nsection.position .left {  \n    position: absolute;  \n    left: 0;  \n}  \n\nsection.position .right {  \n    position: absolute;  \n    right: 0;  \n}  \n\nsection.position .center {  \n    margin-left: 300px;  \n    margin-right: 300px;  \n}  </code></pre>',132,11,'2019-04-27 23:37:18.808413','2019-05-03 15:59:47.395158',1,4,1,'p'),(5,'var,let和const的区别','ES6， 全称 ECMAScript 6.0 ，是 JavaScript 的下一个版本标准，2015.06 发布。涵盖了 ES2015、ES2016、ES2017 等等，ES6 主要是为了解决 ES5 的先天不足。','ES6， 全称 ECMAScript 6.0 ，是 JavaScript 的下一个版本标准，2015.06 发布。涵盖了 ES2015、ES2016、ES2017 等等，ES6 主要是为了解决 ES5 的先天不足。\r\n### var\r\n通过`var`定义的全局变量,会变量提升,作用域是全局的,可以重复声明,不会出现报错,也没有提示.\r\n```javascript\r\nconsole.log(a) // undefined\r\nvar a = 1;\r\nvar a = 2;\r\nconsole.log(a) // 2\r\n```\r\n当多人协作开发时,修改某一块的代码时,有可能会造成重复声明了相同的变量,导致我们所需要的数据被覆盖,而我们可能需要好长时间去检查才会找到问题的所在,这时我们有需要`let`\r\n\r\n### let\r\n定义变量,和var一样,不过一般用于块级作用域,也就是花括号{},ES6推荐在函数中使用let,而不是var\r\n```javascript\r\nlet a = 1;\r\nlet a = 5;\r\nconsole.log(a);\r\n// 会报错(a已经被声明了) Identifier \'a\' has already been declared\r\n{\r\nlet b = 1;\r\n}\r\nconsole.log(b); // ReferenceError: b is not defined\r\n```\r\n不会变量提升\r\n```javascript\r\nconsole.log(a); // ReferenceError: a is not defined\r\nlet a = 1;\r\nlet b;\r\nconsole.log(b) // undefined\r\n```\r\n有5个`li`标签,通过点击事件获取`li`的索引\r\n```javascript\r\nfor(var i = 0; i < 5; i++){\r\n	aLi[i].i = i;\r\n	aLi[i].onclick = function () {\r\n		alert(this.i) // 0 1 2 3 4\r\n	}\r\n}\r\n```\r\n我们会发现所有`li`的索引都是最后一个`i`值,这是由于JS引擎执行是按照从左到右的顺序,先执行了`for`循环,同时将循环中的代码也一并执行了,这个时候`i`的值已经成了最后一个,然后才给`click`事件绑定的\r\n解决办法:\r\n1. 使用闭包\r\n\r\n```javascript\r\nlet aLi = document.getElementsByTagName(\'li\');\r\nfor(var i = 0; i < 5; i++){\r\n	(function (i){\r\n		aLi[i].onclick = function () {\r\n			alert(i) // 0 1 2 3 4\r\n		}\r\n	})(i)\r\n}\r\n```\r\n2. 使用自定义属性\r\n\r\n```javascript\r\nfor(var i = 0; i < 5; i++){\r\n	aLi[i].i = i;\r\n	// 给标签添加一个自定义属性\r\n	aLi[i].onclick = function () {\r\n		alert(this.i) // 0 1 2 3 4\r\n		// 这里this.i指的是自定义属性的i\r\n	}\r\n}\r\n```\r\n但这样终究是让我们多写了几行代码,我们的宗旨是能少写就少写,能不写就不写,这里我们把`var`换成`let`就解决了,是不是简单很多\r\n```javascript\r\nfor(let i = 0; i < 5; i++){\r\n	aLi[i].onclick = function () {\r\n		alert(i) // 0 1 2 3 4\r\n	}\r\n}\r\n```\r\n### const\r\n通过`const`定义的变量不可以修改,而且必须初始化\r\n\r\n```javascript\r\nconst TYPE;\r\n// 会报错,必须赋值完成初始化  Missing initializer in const declaration\r\n\r\nconst TYPE = 1;\r\nTYPE = 2;\r\n// 也会报错,定义的常量不可以修改 Assignment to constant variable.\r\n```\r\n总结:\r\n\r\n`let`声明的变量不具备变量提升;`let` 和 `const` 声明只在最靠近的一个块中（花括号内）有效;使用常量`const` 声明时必须被赋值;定义常量时使用大写变量表示,符合规范','article_img/2019/04/27/js.jpg','<p>ES6， 全称 ECMAScript 6.0 ，是 JavaScript 的下一个版本标准，2015.06 发布。涵盖了 ES2015、ES2016、ES2017 等等，ES6 主要是为了解决 ES5 的先天不足。  </p>\n<h3 id=\"var\">var</h3>\n<p>通过<code>var</code>定义的全局变量,会变量提升,作用域是全局的,可以重复声明,不会出现报错,也没有提示.  </p>\n<pre class=\"codehilite\"><code class=\"language-javascript\">console.log(a) // undefined  \nvar a = 1;  \nvar a = 2;  \nconsole.log(a) // 2  </code></pre>\n\n\n<p>当多人协作开发时,修改某一块的代码时,有可能会造成重复声明了相同的变量,导致我们所需要的数据被覆盖,而我们可能需要好长时间去检查才会找到问题的所在,这时我们有需要<code>let</code>  </p>\n<h3 id=\"let\">let</h3>\n<p>定义变量,和var一样,不过一般用于块级作用域,也就是花括号{},ES6推荐在函数中使用let,而不是var  </p>\n<pre class=\"codehilite\"><code class=\"language-javascript\">let a = 1;  \nlet a = 5;  \nconsole.log(a);  \n// 会报错(a已经被声明了) Identifier \'a\' has already been declared  \n{  \nlet b = 1;  \n}  \nconsole.log(b); // ReferenceError: b is not defined  </code></pre>\n\n\n<p>不会变量提升  </p>\n<pre class=\"codehilite\"><code class=\"language-javascript\">console.log(a); // ReferenceError: a is not defined  \nlet a = 1;  \nlet b;  \nconsole.log(b) // undefined  </code></pre>\n\n\n<p>有5个<code>li</code>标签,通过点击事件获取<code>li</code>的索引  </p>\n<pre class=\"codehilite\"><code class=\"language-javascript\">for(var i = 0; i &lt; 5; i++){  \n    aLi[i].i = i;  \n    aLi[i].onclick = function () {  \n        alert(this.i) // 0 1 2 3 4  \n    }  \n}  </code></pre>\n\n\n<p>我们会发现所有<code>li</code>的索引都是最后一个<code>i</code>值,这是由于JS引擎执行是按照从左到右的顺序,先执行了<code>for</code>循环,同时将循环中的代码也一并执行了,这个时候<code>i</code>的值已经成了最后一个,然后才给<code>click</code>事件绑定的<br />\n解决办法:<br />\n1. 使用闭包  </p>\n<pre class=\"codehilite\"><code class=\"language-javascript\">let aLi = document.getElementsByTagName(\'li\');  \nfor(var i = 0; i &lt; 5; i++){  \n    (function (i){  \n        aLi[i].onclick = function () {  \n            alert(i) // 0 1 2 3 4  \n        }  \n    })(i)  \n}  </code></pre>\n\n\n<ol>\n<li>使用自定义属性  </li>\n</ol>\n<pre class=\"codehilite\"><code class=\"language-javascript\">for(var i = 0; i &lt; 5; i++){  \n    aLi[i].i = i;  \n    // 给标签添加一个自定义属性  \n    aLi[i].onclick = function () {  \n        alert(this.i) // 0 1 2 3 4  \n        // 这里this.i指的是自定义属性的i  \n    }  \n}  </code></pre>\n\n\n<p>但这样终究是让我们多写了几行代码,我们的宗旨是能少写就少写,能不写就不写,这里我们把<code>var</code>换成<code>let</code>就解决了,是不是简单很多  </p>\n<pre class=\"codehilite\"><code class=\"language-javascript\">for(let i = 0; i &lt; 5; i++){  \n    aLi[i].onclick = function () {  \n        alert(i) // 0 1 2 3 4  \n    }  \n}  </code></pre>\n\n\n<h3 id=\"const\">const</h3>\n<p>通过<code>const</code>定义的变量不可以修改,而且必须初始化  </p>\n<pre class=\"codehilite\"><code class=\"language-javascript\">const TYPE;  \n// 会报错,必须赋值完成初始化  Missing initializer in const declaration  \n\nconst TYPE = 1;  \nTYPE = 2;  \n// 也会报错,定义的常量不可以修改 Assignment to constant variable.  </code></pre>\n\n\n<p>总结:  </p>\n<p><code>let</code>声明的变量不具备变量提升;<code>let</code> 和 <code>const</code> 声明只在最靠近的一个块中（花括号内）有效;使用常量<code>const</code> 声明时必须被赋值;定义常量时使用大写变量表示,符合规范</p>',51,1,'2019-04-27 23:38:55.291931','2019-05-03 16:00:00.633546',1,3,1,'p'),(6,'箭头函数','ES6标准新增了一种新的函数：Arrow Function（箭头函数）,\r\n箭头函数表达式的语法比函数表达式更简洁，并且没有自己的this，arguments，super或 new.target。这些函数表达式更适用于那些本来需要匿名函数的地方，并且它们不能用作构造函数','ES6标准新增了一种新的函数：Arrow Function（箭头函数）,\r\n箭头函数表达式的语法比函数表达式更简洁，并且没有自己的this，arguments，super或 new.target。这些函数表达式更适用于那些本来需要匿名函数的地方，并且它们不能用作构造函数\r\n在了解箭头函数前,我们先看一个常规例子:\r\n```javascript\r\nfunction fn(){\r\n	console.log(\'hello~\')\r\n}\r\nfn() // hello~\r\n```\r\n再来看看箭头函数如何表示的\r\n```javascript\r\nfn = () => {\r\n	console.log(\'hello~\')\r\n}\r\nfn() // hello~\r\n```\r\n是不是简单很多,再来看看这条,这种只适用于只有一条语句时,可以省略大括号`{}`\r\n```javascript\r\nfn = () => console.log(\'hello~\')\r\nfn() // hello~\r\n```\r\n如果我们需要传第一个和多个参数呢?\r\n```javascript\r\n// 只有一个参数\r\nfn = (a) => a + 2\r\n// 只有一个参数时还可以省略小括号\r\nfn =a => a + 2\r\n\r\n// 多个参数\r\nfn = (a,b,c) a + b + c\r\n```\r\n我们在来看看这个例子:\r\n```javascript\r\nconst Person = {\r\n	name: \'Superficial\',\r\n	age:23,\r\n	\'get\': function() {\r\n		setInterval(function (){\r\n			console.log(this.age)\r\n		})\r\n	}\r\n}\r\nPerson.get() // undefined\r\n```\r\n结果是不是出乎意料,没错,相信自己的眼睛,你没看错,这是由于[this指向](https://bonsaiden.github.io/JavaScript-Garden/zh/#function.this \"this指向\"){:target=_blank}的问题\r\n以前的写法是在函数中把this绑定到变量上\r\n```javascript\r\nconst Person = {\r\n	name: \'Superficial\',\r\n	age:23,\r\n	\'get\': function() {\r\n		let that = this;\r\n		setInterval(function (){\r\n			console.log(that.age)\r\n		})\r\n	}\r\n}\r\nPerson.get() // 23\r\n```\r\n\r\n查看详细[箭头函数的语法](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/Arrow_functions#Syntax \"箭头函数\"){:target=_blank}相关内容','article_img/2019/04/27/js_hZa2ADX.jpg','<p>ES6标准新增了一种新的函数：Arrow Function（箭头函数）,<br />\n箭头函数表达式的语法比函数表达式更简洁，并且没有自己的this，arguments，super或 new.target。这些函数表达式更适用于那些本来需要匿名函数的地方，并且它们不能用作构造函数<br />\n在了解箭头函数前,我们先看一个常规例子:  </p>\n<pre class=\"codehilite\"><code class=\"language-javascript\">function fn(){  \n    console.log(\'hello~\')  \n}  \nfn() // hello~  </code></pre>\n\n\n<p>再来看看箭头函数如何表示的  </p>\n<pre class=\"codehilite\"><code class=\"language-javascript\">fn = () =&gt; {  \n    console.log(\'hello~\')  \n}  \nfn() // hello~  </code></pre>\n\n\n<p>是不是简单很多,再来看看这条,这种只适用于只有一条语句时,可以省略大括号<code>{}</code>  </p>\n<pre class=\"codehilite\"><code class=\"language-javascript\">fn = () =&gt; console.log(\'hello~\')  \nfn() // hello~  </code></pre>\n\n\n<p>如果我们需要传第一个和多个参数呢?  </p>\n<pre class=\"codehilite\"><code class=\"language-javascript\">// 只有一个参数  \nfn = (a) =&gt; a + 2  \n// 只有一个参数时还可以省略小括号  \nfn =a =&gt; a + 2  \n\n// 多个参数  \nfn = (a,b,c) a + b + c  </code></pre>\n\n\n<p>我们在来看看这个例子:  </p>\n<pre class=\"codehilite\"><code class=\"language-javascript\">const Person = {  \n    name: \'Superficial\',  \n    age:23,  \n    \'get\': function() {  \n        setInterval(function (){  \n            console.log(this.age)  \n        })  \n    }  \n}  \nPerson.get() // undefined  </code></pre>\n\n\n<p>结果是不是出乎意料,没错,相信自己的眼睛,你没看错,这是由于<a href=\"https://bonsaiden.github.io/JavaScript-Garden/zh/#function.this\" target=\"_blank\" title=\"this指向\">this指向</a>的问题<br />\n以前的写法是在函数中把this绑定到变量上  </p>\n<pre class=\"codehilite\"><code class=\"language-javascript\">const Person = {  \n    name: \'Superficial\',  \n    age:23,  \n    \'get\': function() {  \n        let that = this;  \n        setInterval(function (){  \n            console.log(that.age)  \n        })  \n    }  \n}  \nPerson.get() // 23  </code></pre>\n\n\n<p>查看详细<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/Arrow_functions#Syntax\" target=\"_blank\" title=\"箭头函数\">箭头函数的语法</a>相关内容</p>',225,2,'2019-04-27 23:40:42.130042','2019-05-03 16:00:16.103025',1,3,1,'p'),(7,'在django中添加sitemap','Sitemap可方便网站管理员通知搜索引擎他们网站上有哪些可供抓取的网页。最简单的 Sitemap 形式，就是XML 文件，在其中列出网站中的网址以及关于每个网址的其他元数据（上次更新的时间、更改的频率以及相对于网站上其他网址的重要程度为何等），以便搜索引擎可以更加智能地抓取网站','Sitemap可方便网站管理员通知搜索引擎他们网站上有哪些可供抓取的网页。最简单的 Sitemap 形式，就是XML 文件，在其中列出网站中的网址以及关于每个网址的其他元数据（上次更新的时间、更改的频率以及相对于网站上其他网址的重要程度为何等），以便搜索引擎可以更加智能地抓取网站\r\n\r\n在`django`中添加`sitemap`,首先要把相关APP应用安装到`settings.py`中的`INSTALL_APP`中,这里无需使用`pip`,`django`从1.6开始，默认情况下不启用`site`框架,所以我们只需要启用即可~\r\n```django\r\nINSTALL_APP = [\r\n	\'\'\',\r\n	\'django.contrib.sites\',\r\n	\'django.contrib.sitemaps\',\r\n]\r\nSITE_ID = 1\r\n```\r\n这里我还添加了SITE_ID= 1,如过不设置可能会登录后台报错,表示指定当前站点\r\n然后登录后台,会多了一个站点(SITE)\r\n![站点](/media/editor/site_20190424150435619391.png \"站点\")\r\n修改为你自己的域名和名称,如果你是本地开发域名为设置为127.0.0.1:8000\r\n### 添加sitemap功能\r\n在项目文件夹下新增`sitemap.py`\r\n```django\r\nfrom django.contrib.sitemaps import Sitemap\r\nfrom apps.blog.models import Article, Category, Tag\r\nfrom django.urls import reverse\r\n\r\nclass ArticleSiteMap(Sitemap):\r\n    \"\"\"changefreq 更新频率\r\n        priority 相对于其它页面的优先权\"\"\"\r\n    changefreq = \"monthly\"\r\n    priority = \"0.6\"\r\n\r\n    def items(self):\r\n        return Article.objects.all()\r\n\r\n    def lastmod(self, obj):\r\n        \"\"\"上次修改时间\"\"\"\r\n        return obj.modified_time\r\n\r\n    def location(self, obj):\r\n        \"\"\"可选.返回每个对象的绝对路径.如果对象有get_absolute_url()方法,可以省略location\"\"\"\r\n        return reverse(\'blog:detail\', kwargs={\'pk\': int(obj.id)})\r\n\r\n\r\nclass CategorySiteMap(Sitemap):\r\n    changefreq = \"Weekly\"\r\n    priority = \"0.6\"\r\n\r\n    def items(self):\r\n        return Category.objects.all()\r\n\r\n    def lastmod(self, obj):\r\n        return obj.modified_time\r\n\r\n    def location(self, obj):\r\n        \"\"\"可选.返回每个对象的绝对路径.如果对象有get_absolute_url()方法,可以省略location\"\"\"\r\n        return reverse(\'blog:category\', kwargs={\'pk\': int(obj.id)})\r\n\r\n\r\nclass TagSiteMap(Sitemap):\r\n    \"\"\"\r\n        changefreq 更新频率\r\n        priority 相对于其它页面的优先权\r\n    \"\"\"\r\n    changefreq = \"Weekly\"\r\n    priority = \"0.3\"\r\n\r\n    def items(self):\r\n        return Tag.objects.all()\r\n\r\n    def lastmod(self, obj):\r\n        return obj.modified_time\r\n\r\n    def location(self, obj):\r\n        \"\"\"可选.返回每个对象的绝对路径.如果对象有get_absolute_url()方法,可以省略location\"\"\"\r\n        return reverse(\'blog:tags\', kwargs={\'pk\': obj.id})\r\n```\r\n### urls.py增加\r\n```django\r\nfrom DjangoBlog.sitemap import ArticleSiteMap, CategorySiteMap, TagSiteMap\r\nsitemaps = {\r\n    \'blog\': ArticleSiteMap,\r\n    \'Category\': CategorySiteMap,\r\n    \'Tag\': TagSiteMap,\r\n}\r\n\r\nre_path(r\'^sitemap\\.xml$\', sitemap, {\'sitemaps\': sitemaps},\r\n        name=\'django.contrib.sitemaps.views.sitemap\'),\r\n```\r\n浏览器中访问: http://127.0.0.1:8000/sitemap.xml','article_img/2019/04/27/django.jpg','<p>Sitemap可方便网站管理员通知搜索引擎他们网站上有哪些可供抓取的网页。最简单的 Sitemap 形式，就是XML 文件，在其中列出网站中的网址以及关于每个网址的其他元数据（上次更新的时间、更改的频率以及相对于网站上其他网址的重要程度为何等），以便搜索引擎可以更加智能地抓取网站  </p>\n<p>在<code>django</code>中添加<code>sitemap</code>,首先要把相关APP应用安装到<code>settings.py</code>中的<code>INSTALL_APP</code>中,这里无需使用<code>pip</code>,<code>django</code>从1.6开始，默认情况下不启用<code>site</code>框架,所以我们只需要启用即可~  </p>\n<pre class=\"codehilite\"><code class=\"language-django\">INSTALL_APP = [  \n    \'\'\',  \n    \'django.contrib.sites\',  \n    \'django.contrib.sitemaps\',  \n]  \nSITE_ID = 1  </code></pre>\n\n\n<p>这里我还添加了SITE_ID= 1,如过不设置可能会登录后台报错,表示指定当前站点<br />\n然后登录后台,会多了一个站点(SITE)<br />\n<img alt=\"站点\" src=\"/media/editor/site_20190424150435619391.png\" title=\"站点\" /><br />\n修改为你自己的域名和名称,如果你是本地开发域名为设置为127.0.0.1:8000  </p>\n<h3 id=\"sitemap\">添加sitemap功能</h3>\n<p>在项目文件夹下新增<code>sitemap.py</code>  </p>\n<pre class=\"codehilite\"><code class=\"language-django\">from django.contrib.sitemaps import Sitemap  \nfrom apps.blog.models import Article, Category, Tag  \nfrom django.urls import reverse  \n\nclass ArticleSiteMap(Sitemap):  \n    &quot;&quot;&quot;changefreq 更新频率  \n        priority 相对于其它页面的优先权&quot;&quot;&quot;  \n    changefreq = &quot;monthly&quot;  \n    priority = &quot;0.6&quot;  \n\n    def items(self):  \n        return Article.objects.all()  \n\n    def lastmod(self, obj):  \n        &quot;&quot;&quot;上次修改时间&quot;&quot;&quot;  \n        return obj.modified_time  \n\n    def location(self, obj):  \n        &quot;&quot;&quot;可选.返回每个对象的绝对路径.如果对象有get_absolute_url()方法,可以省略location&quot;&quot;&quot;  \n        return reverse(\'blog:detail\', kwargs={\'pk\': int(obj.id)})  \n\n\nclass CategorySiteMap(Sitemap):  \n    changefreq = &quot;Weekly&quot;  \n    priority = &quot;0.6&quot;  \n\n    def items(self):  \n        return Category.objects.all()  \n\n    def lastmod(self, obj):  \n        return obj.modified_time  \n\n    def location(self, obj):  \n        &quot;&quot;&quot;可选.返回每个对象的绝对路径.如果对象有get_absolute_url()方法,可以省略location&quot;&quot;&quot;  \n        return reverse(\'blog:category\', kwargs={\'pk\': int(obj.id)})  \n\n\nclass TagSiteMap(Sitemap):  \n    &quot;&quot;&quot;  \n        changefreq 更新频率  \n        priority 相对于其它页面的优先权  \n    &quot;&quot;&quot;  \n    changefreq = &quot;Weekly&quot;  \n    priority = &quot;0.3&quot;  \n\n    def items(self):  \n        return Tag.objects.all()  \n\n    def lastmod(self, obj):  \n        return obj.modified_time  \n\n    def location(self, obj):  \n        &quot;&quot;&quot;可选.返回每个对象的绝对路径.如果对象有get_absolute_url()方法,可以省略location&quot;&quot;&quot;  \n        return reverse(\'blog:tags\', kwargs={\'pk\': obj.id})  </code></pre>\n\n\n<h3 id=\"urlspy\">urls.py增加</h3>\n<pre class=\"codehilite\"><code class=\"language-django\">from DjangoBlog.sitemap import ArticleSiteMap, CategorySiteMap, TagSiteMap  \nsitemaps = {  \n    \'blog\': ArticleSiteMap,  \n    \'Category\': CategorySiteMap,  \n    \'Tag\': TagSiteMap,  \n}  \n\nre_path(r\'^sitemap\\.xml$\', sitemap, {\'sitemaps\': sitemaps},  \n        name=\'django.contrib.sitemaps.views.sitemap\'),  </code></pre>\n\n\n<p>浏览器中访问: http://127.0.0.1:8000/sitemap.xml</p>',48,0,'2019-04-27 23:42:35.398521','2019-05-03 16:00:41.824563',1,1,1,'p'),(8,'git常用命令','git命令之前也了解了很长一段时间了,常用的几个命令倒是很熟悉,用的比较少的命令却总是忘记,这几天部署网站,又重新学习了一遍','git命令之前也了解了很长一段时间了,常用的几个命令倒是很熟悉,用的比较少的命令却总是忘记,这几天部署网站,又重新学习了一遍\r\n使用git已两三月了，最常用的几个命令倒是很熟悉，用的比较少的命令很是记不清，要多多探索这些命令，首先要有个帐号为所欲为，接下来开始正题\r\n\r\n### 生成SSH\r\n\r\n```git\r\nssh-keygen -t ras -C \"your email\"\r\n// 生成后会要你输入啥的,不用输入,直接回车,直到完成\r\n```\r\n### 设置用户名\r\n```git\r\ngit config --global user.name \"your username\"\r\ngit config --global user.email \"your email\"\r\n```\r\n### 初始化当前目录的项目\r\n\r\n```git\r\ngit init\r\n# 在该目录下新建一个后缀为md的文件，然后查看，将修改添加到暂存区\r\ntouch README.md\r\ngit add .\r\n# 将工作区所有修改添加到暂存区\r\ngit add filename\r\n# 将指定文件添加到暂存区\r\ngit status\r\n# 列出变更文件\r\n# 将暂存区修改添加到本地仓库\r\ngit commit -m \"备注信息\"\r\n# 创建仓库，将本地仓库改动push到远程仓库\r\ngit remote add origin\r\ngit push -u origin master\r\n```\r\n\r\n### 每次push都要输入用户名和密码，原因是https方式 push,如何解决呢?\r\n```git\r\ngit remote rm origin\r\n// 移除仓库\r\ngit remote add origin git@github.com:gitname/test.git\r\n// 重新添加\r\n```\r\n以后就不用再输入用户名和密码了\r\n\r\n### 从远程clone项目\r\n```git\r\ngit clone url\r\n// 放弃暂存区修改\r\ngit checkout -- filename\r\n// 放弃暂存区修改（修改不在）\r\ngit rm --cached filename\r\n// 放弃add（修改还在，但产生一条delete记录）\r\ngit reset HEAD filename  \r\n// 同上（没有delete记录）\r\ngit stash               // 暂时放弃未提交的修改git\r\nstash pop                  // 恢复\r\n```\r\n### 分支操作\r\n```git\r\ngit branch  // 查看分支\r\ngit branch -r   //所有本地分支\r\ngit branch -a  //所有远程分支\r\ngit branch branchName // 留在当前分支\r\ngit checkout -b branchName //创建并切换分支\r\ngit branch --set-upstream-to=<remote>/branchName // 建立本地分支与远程分支的追踪关系\r\ngit branch --track branchName [remote branch] // 新建一个分支，并与远程建立追踪关系\r\ngit checkout branchName // 切到指定分支 /*分支合并*/\r\ngit pull origin branch // 取回远程更新并与本地分支合并\r\ngit fetch origin branch // 取回远程更新\r\ngit merge branch // 合并指定分支到当前分支(产生提交记录)\r\ngit rebase branch // 合并指定分支到当前分支(不产生提交记录，比较适合有强迫症的)\r\ngit cherry-pick commitId // 将与commitId对应的提交合进当前分支\r\n```','article_img/2019/04/27/git.jpg','<p>git命令之前也了解了很长一段时间了,常用的几个命令倒是很熟悉,用的比较少的命令却总是忘记,这几天部署网站,又重新学习了一遍<br />\n使用git已两三月了，最常用的几个命令倒是很熟悉，用的比较少的命令很是记不清，要多多探索这些命令，首先要有个帐号为所欲为，接下来开始正题  </p>\n<h3 id=\"ssh\">生成SSH</h3>\n<pre class=\"codehilite\"><code class=\"language-git\">ssh-keygen -t ras -C &quot;your email&quot;  \n// 生成后会要你输入啥的,不用输入,直接回车,直到完成  </code></pre>\n\n\n<h3 id=\"_1\">设置用户名</h3>\n<pre class=\"codehilite\"><code class=\"language-git\">git config --global user.name &quot;your username&quot;  \ngit config --global user.email &quot;your email&quot;  </code></pre>\n\n\n<h3 id=\"_2\">初始化当前目录的项目</h3>\n<pre class=\"codehilite\"><code class=\"language-git\">git init  \n# 在该目录下新建一个后缀为md的文件，然后查看，将修改添加到暂存区  \ntouch README.md  \ngit add .  \n# 将工作区所有修改添加到暂存区  \ngit add filename  \n# 将指定文件添加到暂存区  \ngit status  \n# 列出变更文件  \n# 将暂存区修改添加到本地仓库  \ngit commit -m &quot;备注信息&quot;  \n# 创建仓库，将本地仓库改动push到远程仓库  \ngit remote add origin  \ngit push -u origin master  </code></pre>\n\n\n<h3 id=\"pushhttps-push\">每次push都要输入用户名和密码，原因是https方式 push,如何解决呢?</h3>\n<pre class=\"codehilite\"><code class=\"language-git\">git remote rm origin  \n// 移除仓库  \ngit remote add origin git@github.com:gitname/test.git  \n// 重新添加  </code></pre>\n\n\n<p>以后就不用再输入用户名和密码了  </p>\n<h3 id=\"clone\">从远程clone项目</h3>\n<pre class=\"codehilite\"><code class=\"language-git\">git clone url  \n// 放弃暂存区修改  \ngit checkout -- filename  \n// 放弃暂存区修改（修改不在）  \ngit rm --cached filename  \n// 放弃add（修改还在，但产生一条delete记录）  \ngit reset HEAD filename    \n// 同上（没有delete记录）  \ngit stash               // 暂时放弃未提交的修改git  \nstash pop                  // 恢复  </code></pre>\n\n\n<h3 id=\"_3\">分支操作</h3>\n<pre class=\"codehilite\"><code class=\"language-git\">git branch  // 查看分支  \ngit branch -r   //所有本地分支  \ngit branch -a  //所有远程分支  \ngit branch branchName // 留在当前分支  \ngit checkout -b branchName //创建并切换分支  \ngit branch --set-upstream-to=&lt;remote&gt;/branchName // 建立本地分支与远程分支的追踪关系  \ngit branch --track branchName [remote branch] // 新建一个分支，并与远程建立追踪关系  \ngit checkout branchName // 切到指定分支 /*分支合并*/  \ngit pull origin branch // 取回远程更新并与本地分支合并  \ngit fetch origin branch // 取回远程更新  \ngit merge branch // 合并指定分支到当前分支(产生提交记录)  \ngit rebase branch // 合并指定分支到当前分支(不产生提交记录，比较适合有强迫症的)  \ngit cherry-pick commitId // 将与commitId对应的提交合进当前分支  </code></pre>',28,0,'2019-04-27 23:45:32.121628','2019-05-03 16:00:51.318359',1,6,1,'p'),(9,'Python获取本机IP地址','每次开发和生产部署，都要频繁的去修改DEBUG。','每次开发和生产部署，都要频繁的去修改DEBUG\r\n### 动态修改DEBUG模式\r\n想法借鉴[杨士航博客](http://yshblog.com/blog/26 \"杨士航博客\"){:trget=_blank},我按照他的idea配置了,但却出现得到的ip为127.0.0.1,导致DEBUG后来百度才知道可能是修改了`/etc/hosts`文件\r\n```python\r\nimport socket\r\nif socket.gethostbyname(socket.gethostname())[:3]==\'192\':\r\n    DEBUG = True\r\nelse:\r\n    DEBUG = False\r\nALLOWED_HOSTS = [\'www.zhangwurui.com\']\r\n```\r\n我用的是UDP套接字连接获取ip地址\r\n```python\r\ns = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\r\n# AF_INET表示ipv4 SOCK_DGRAM表示UDP套接字\r\ns.connect((\'8.8.8.8\', 80))\r\n# 连接\r\nip,port = s.getsockname()\r\n# 这里的ip就是真实ip了\r\n```','article_img/2019/04/27/python.jpg','<p>每次开发和生产部署，都要频繁的去修改DEBUG  </p>\n<h3 id=\"debug\">动态修改DEBUG模式</h3>\n<p>想法借鉴<a href=\"http://yshblog.com/blog/26\" title=\"杨士航博客\" trget=\"_blank\">杨士航博客</a>,我按照他的idea配置了,但却出现得到的ip为127.0.0.1,导致DEBUG后来百度才知道可能是修改了<code>/etc/hosts</code>文件  </p>\n<pre class=\"codehilite\"><code class=\"language-python\">import socket  \nif socket.gethostbyname(socket.gethostname())[:3]==\'192\':  \n    DEBUG = True  \nelse:  \n    DEBUG = False  \nALLOWED_HOSTS = [\'www.zhangwurui.com\']  </code></pre>\n\n\n<p>我用的是UDP套接字连接获取ip地址  </p>\n<pre class=\"codehilite\"><code class=\"language-python\">s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)  \n# AF_INET表示ipv4 SOCK_DGRAM表示UDP套接字  \ns.connect((\'8.8.8.8\', 80))  \n# 连接  \nip,port = s.getsockname()  \n# 这里的ip就是真实ip了  </code></pre>',63,0,'2019-04-27 23:47:12.470368','2019-05-03 16:01:05.861049',1,1,1,'p'),(10,'Python虚拟环境的安装','现有一个django项目时，要求django版本1.11，真实环境的版本是2.0，如果使用系统环境 会导致出现兼容问题，这个时候就需要虚拟环境，virtualenv就是用来创建这个项目运行的开发环境','现有一个django项目时，要求django版本1.11，真实环境的版本是2.0，如果使用系统环境 会导致出现兼容问题，这个时候就需要虚拟环境，virtualenv就是用来创建这个项目运行的开发环境\r\n\r\nvirtualenv是一个创建隔绝的Python环境的库。virtualenv创建的虚拟环境和原本安装的环境相互独立，不会影响，而virtualenvwrapper 是用来管理virtualenv创建的虚拟环境,是一个基于virtualenv之上的工具，它将所有的虚拟环境统一进行管理.\r\n\r\n### 安装virtualenv\r\n使用`pip`或`pip3`命令安装\r\n```python\r\n# 安装虚拟环境工具\r\npip install virtualenv\r\npip3 install virtualenv\r\n```\r\n安装完成后就可以使用virtualenv的命令创建虚拟环境了，首先，我们进入要创建虚拟环境的文件夹中，创建一个名叫venv的虚拟环境，使用命令\r\n\r\n`virtualenv venv`\r\n创建是在你当前所在文件夹创建一个叫venv的环境\r\n\r\n创建完成后会命令行前面会多一个(venv),表示环境创建完成,并自动进入到了venv虚拟环境中了,在这个环境中安装的包和本身系统的环境完全独立,互不影响\r\n### 退出虚拟环境\r\n\r\n`deactivate`执行这个指令就行\r\n\r\n### 进入虚拟环境\r\n\r\n当我们退出后在想进入却发现怎么进入呢,之前创建的时候是自动进入的,现在总不可能在创建吧!这时就需要进入虚拟环境的指令了,找到你创建虚拟环境的文件夹,执行命令\r\n\r\n```Shell\r\n# linux执行这行命令\r\nsource venv/bin/activate\r\n# windows 执行这两行命令\r\ncd venv/Scripts;\r\n# 切换到虚拟环境下venv/Scripts文件夹中\r\nactivate\r\n# 启动虚拟环境\r\n```\r\n但这样创建有个不好的问题,那就是当你的项目环境创建多了之后,有可能你自己也不知道有多少个,哪些放在了哪里,你需要一个管理虚拟环境的包管理器, `virtualenvwrapper`这时就闪亮登场了\r\n\r\n### 安虚拟环境包管理器(这里我使用的linux系统)\r\n\r\n```python\r\n# 执行命令sudo安装\r\nsudo pip install virtualenvwrapper\r\n```\r\n```python\r\n# 找到配置文件,一般在`/home/honey/.bashrc`文件中\r\nexport WORKON_HOME=$HOME/.virtualenvs\r\nexport VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3\r\nsource /usr/local/bin/virtualenvwrapper.sh\r\n# 如果出现报错,说明你执行命令安装的时候因为权限问题,并不是执行的sudo安装\r\n# 安装后的位置发生了改变,导致命令找不到启动脚本\r\n# 只需要修改最后一行代码\r\nsource /usr/.local/bin/virtualenvwrapper.sh\r\n# 当然你也可以写在后重新sudo安装\r\npip uninstall virtualenvwwrapper\r\nsudo install virtualenvwrapper\r\n```\r\n创建完成后就可以使用virtualenvwrapper管理虚拟环境了\r\n\r\n#### 包管理器常用命令\r\n\r\n```python\r\nmkvirtualenv venv\r\n# 创建虚拟环境\r\nrmvirtualenv venv\r\n# 删除虚拟环境\r\nlsvirtualenv\r\n# 列出所有的虚拟环境(不是使用virtuapenvwrapper创建的虚拟环境除外)\r\nworkon venv\r\n# 进入虚拟环境\r\ndeactivate\r\n# 退出虚拟环境\r\n```','article_img/2019/04/27/python_zFWM9rQ.jpg','<p>现有一个django项目时，要求django版本1.11，真实环境的版本是2.0，如果使用系统环境 会导致出现兼容问题，这个时候就需要虚拟环境，virtualenv就是用来创建这个项目运行的开发环境  </p>\n<p>virtualenv是一个创建隔绝的Python环境的库。virtualenv创建的虚拟环境和原本安装的环境相互独立，不会影响，而virtualenvwrapper 是用来管理virtualenv创建的虚拟环境,是一个基于virtualenv之上的工具，它将所有的虚拟环境统一进行管理.  </p>\n<h3 id=\"virtualenv\">安装virtualenv</h3>\n<p>使用<code>pip</code>或<code>pip3</code>命令安装  </p>\n<pre class=\"codehilite\"><code class=\"language-python\"># 安装虚拟环境工具  \npip install virtualenv  \npip3 install virtualenv  </code></pre>\n\n\n<p>安装完成后就可以使用virtualenv的命令创建虚拟环境了，首先，我们进入要创建虚拟环境的文件夹中，创建一个名叫venv的虚拟环境，使用命令  </p>\n<p><code>virtualenv venv</code><br />\n创建是在你当前所在文件夹创建一个叫venv的环境  </p>\n<p>创建完成后会命令行前面会多一个(venv),表示环境创建完成,并自动进入到了venv虚拟环境中了,在这个环境中安装的包和本身系统的环境完全独立,互不影响  </p>\n<h3 id=\"_1\">退出虚拟环境</h3>\n<p><code>deactivate</code>执行这个指令就行  </p>\n<h3 id=\"_2\">进入虚拟环境</h3>\n<p>当我们退出后在想进入却发现怎么进入呢,之前创建的时候是自动进入的,现在总不可能在创建吧!这时就需要进入虚拟环境的指令了,找到你创建虚拟环境的文件夹,执行命令  </p>\n<pre class=\"codehilite\"><code class=\"language-Shell\"># linux执行这行命令  \nsource venv/bin/activate  \n# windows 执行这两行命令  \ncd venv/Scripts;  \n# 切换到虚拟环境下venv/Scripts文件夹中  \nactivate  \n# 启动虚拟环境  </code></pre>\n\n\n<p>但这样创建有个不好的问题,那就是当你的项目环境创建多了之后,有可能你自己也不知道有多少个,哪些放在了哪里,你需要一个管理虚拟环境的包管理器, <code>virtualenvwrapper</code>这时就闪亮登场了  </p>\n<h3 id=\"linux\">安虚拟环境包管理器(这里我使用的linux系统)</h3>\n<pre class=\"codehilite\"><code class=\"language-python\"># 执行命令sudo安装  \nsudo pip install virtualenvwrapper  </code></pre>\n\n\n<pre class=\"codehilite\"><code class=\"language-python\"># 找到配置文件,一般在`/home/honey/.bashrc`文件中  \nexport WORKON_HOME=$HOME/.virtualenvs  \nexport VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3  \nsource /usr/local/bin/virtualenvwrapper.sh  \n# 如果出现报错,说明你执行命令安装的时候因为权限问题,并不是执行的sudo安装  \n# 安装后的位置发生了改变,导致命令找不到启动脚本  \n# 只需要修改最后一行代码  \nsource /usr/.local/bin/virtualenvwrapper.sh  \n# 当然你也可以写在后重新sudo安装  \npip uninstall virtualenvwwrapper  \nsudo install virtualenvwrapper  </code></pre>\n\n\n<p>创建完成后就可以使用virtualenvwrapper管理虚拟环境了  </p>\n<h4 id=\"_3\">包管理器常用命令</h4>\n<pre class=\"codehilite\"><code class=\"language-python\">mkvirtualenv venv  \n# 创建虚拟环境  \nrmvirtualenv venv  \n# 删除虚拟环境  \nlsvirtualenv  \n# 列出所有的虚拟环境(不是使用virtuapenvwrapper创建的虚拟环境除外)  \nworkon venv  \n# 进入虚拟环境  \ndeactivate  \n# 退出虚拟环境  </code></pre>',87,0,'2019-04-27 23:48:43.735588','2019-05-03 16:01:17.950869',1,1,1,'p'),(11,'django把SQLite数据库的数据导入到MySQL数据库中','刚开始玩django的时候，我们都会使用django内置的sqlite数据库，但当我们存入得数据多了之后，想切换成mysql数据库，但又不想再次浪费时间去重新写入数据库时就需要知道这些命令了！','刚开始玩django的时候，我们都会使用django内置的sqlite数据库，但当我们存入得数据多了之后，想切换成mysql数据库，但又不想再次浪费时间去重新写入数据库时就需要知道这些命令了！\r\n\r\n### 迁移数据\r\n我们很多时候刚开始开发django项目的时候都会使用sqlite数据库，到后面会切换成mysql数据库，又不想数据丢失，这时我们就可以用使用django的导入导出命令来迁移数据，避免了很多不必要的麻烦\r\n\r\n### 导出sqlite数据库\r\n首先要你的数据库确实是sqlite并且存在，在settings.py中\r\n\r\n```python\r\nDATABASES = {\r\n	\'default\': {\r\n         \'ENGINE\': \'django.db.backends.sqlite3\',\r\n         \'NAME\': os.path.join(BASE_DIR, \'db.sqlite3\'),\r\n    }\r\n}\r\n```\r\n### 然后导出\r\n```shell\r\npython manage.py dumpdata > data.json\r\n```\r\n\r\n### 导入mysql数据库\r\n这里导入之前要先创建数据库名为`website`的数据库，并修改数据库引擎\r\n\r\n```mysql\r\n# 创建数据库\r\nCREATE DATABASE  `website` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;\r\n```\r\n```python\r\nDATABASES = {\r\n	\'default\': {\r\n        \'ENGINE\': \'django.db.backends.mysql\',\r\n        \'NAME\': \'your database\',\r\n        \'USER\': \'your username\',\r\n        \'PASSWORD\': \'your password\',\r\n        \'PORT\': \'3306\'\r\n    }\r\n}\r\n```\r\n### 执行命令导入数据库\r\n`python manage.py loaddata data.json`\r\n\r\n###最后大功告成！\r\n<img src=\"/media/upimg/20190324231019_20190327150058_673.png\" title=\"success\" alt=\"20190324231019.png\"/>','article_img/2019/04/27/django_RBhXoRu.jpg','<p>刚开始玩django的时候，我们都会使用django内置的sqlite数据库，但当我们存入得数据多了之后，想切换成mysql数据库，但又不想再次浪费时间去重新写入数据库时就需要知道这些命令了！  </p>\n<h3 id=\"_1\">迁移数据</h3>\n<p>我们很多时候刚开始开发django项目的时候都会使用sqlite数据库，到后面会切换成mysql数据库，又不想数据丢失，这时我们就可以用使用django的导入导出命令来迁移数据，避免了很多不必要的麻烦  </p>\n<h3 id=\"sqlite\">导出sqlite数据库</h3>\n<p>首先要你的数据库确实是sqlite并且存在，在settings.py中  </p>\n<pre class=\"codehilite\"><code class=\"language-python\">DATABASES = {  \n    \'default\': {  \n         \'ENGINE\': \'django.db.backends.sqlite3\',  \n         \'NAME\': os.path.join(BASE_DIR, \'db.sqlite3\'),  \n    }  \n}  </code></pre>\n\n\n<h3 id=\"_2\">然后导出</h3>\n<pre class=\"codehilite\"><code class=\"language-shell\">python manage.py dumpdata &gt; data.json  </code></pre>\n\n\n<h3 id=\"mysql\">导入mysql数据库</h3>\n<p>这里导入之前要先创建数据库名为<code>website</code>的数据库，并修改数据库引擎  </p>\n<pre class=\"codehilite\"><code class=\"language-mysql\"># 创建数据库  \nCREATE DATABASE  `website` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;  </code></pre>\n\n\n<pre class=\"codehilite\"><code class=\"language-python\">DATABASES = {  \n    \'default\': {  \n        \'ENGINE\': \'django.db.backends.mysql\',  \n        \'NAME\': \'your database\',  \n        \'USER\': \'your username\',  \n        \'PASSWORD\': \'your password\',  \n        \'PORT\': \'3306\'  \n    }  \n}  </code></pre>\n\n\n<h3 id=\"_3\">执行命令导入数据库</h3>\n<p><code>python manage.py loaddata data.json</code>  </p>\n<h3 id=\"_4\">最后大功告成！</h3>\n<p><img src=\"/media/upimg/20190324231019_20190327150058_673.png\" title=\"success\" alt=\"20190324231019.png\"/></p>',115,0,'2019-04-27 23:49:33.055409','2019-05-03 16:01:30.622045',1,1,1,'p'),(12,'个人博客搭建一(创建应用)','作为一个开发者,每每看到别人的博客,有的人的博客特效特效酷炫屌炸天,有的记录着所碰到的问题的解决方案,有的有的...,我就想自己弄一个属于我自己的博客','作为一个开发者,每每看到别人的博客,有的人的博客特效特效酷炫屌炸天,有的记录着所碰到的问题的解决方案,有的有的...,我就想自己弄一个属于我自己的博客\r\n\r\n### 创建项目\r\n我所使用的的开发工具是PyCharm,这个开发工具包含了所有功能,比较方便,就是运行起来比较吃内存,闲话不多说,开干!\r\n\r\n使用PyCharm创建新的Django项目`djangoBlog`\r\n\r\n![](/media/editor/create project_20190411150136409600.png)\r\n### 创建项目目录结构\r\n\r\n![](/media/editor/desc_20190411151849799707.png)\r\n\r\n### 创建app应用\r\n使用命令`python manage.py startapp blog`创建名称为`blog`的应用\r\n\r\n创建完`blog`应用后,它并没有进入我们创建的`apps`package包中,这时我们要自己手动把`blog`移动到`apps`package包中,记住,apps是一个package包,然后把鼠标放在`apps`包上,右键鼠标选择`Mark Directory as `-> `Sources Root`\r\n### 注册app应用\r\n修改`settings.py`文件\r\n```python\r\nINSTALLED_APPS = [\r\n    \'django.contrib.admin\',\r\n    \'django.contrib.auth\',\r\n    \'django.contrib.contenttypes\',\r\n    \'django.contrib.sessions\',\r\n    \'django.contrib.messages\',\r\n    \'django.contrib.staticfiles\',\r\n    \'apps.blog\' # 新增应用\r\n]\r\n```\r\n### 修改settings.py设置\r\n```python\r\nLANGUAGE_CODE = \'zh-hans\'\r\n# 后台中文显示\r\nTIME_ZONE = \'Asia/Shanghai\'\r\n# 设置中国时间\r\nUSE_I18N = True\r\n# 国际化,支持多种语言\r\nUSE_TZ = False\r\n# USE_TZ = True 表示UTC时间,False表示本地时间\r\n# 设置文件上传路径\r\nMEDIA_URL = \'/media/\'\r\nMEDIA_ROOT = os.path.join(BASE_DIR, \'media\')\r\n```\r\n### 修改数据库\r\ndjango默认数据为`sqlite`数据库,要修改为`mysql`数据库\r\n```python\r\n# 默认数据库\r\nDATABASES = {\r\n    \'default\': {\r\n        \'ENGINE\': \'django.db.backends.sqlite3\',\r\n        \'NAME\': \'db\',\r\n    }\r\n}\r\n```\r\n修改为MySQL数据库:\r\n```python\r\nDATABASES = {\r\n    \'default\': {\r\n        \'ENGINE\': \'django.db.backends.mysql\',\r\n        \'HOST\': \'localhost\',\r\n        \'NAME\': \'website\',\r\n        \'USER\': \'root\',\r\n        \'PASSWORD\': \'123456\',\r\n        \'PORT\': \'3306\'\r\n    }\r\n}\r\n```\r\n数据库修改为MySQL,会报错没有驱动,这时我们需要安装一个名为`pymysql`的包,执行命令`pip install pymysql`,然后在`settings.py`中添加\r\n```python\r\nimport pymysql\r\npymysql.install_as_MySQLdb()\r\n```\r\n### 迁移数据库\r\n执行命令`python manage.py makemigrations`创建迁移脚本,然后执行命令`python manage.py migrate`迁移数据','article_img/2019/04/29/django.jpg','<p>作为一个开发者,每每看到别人的博客,有的人的博客特效特效酷炫屌炸天,有的记录着所碰到的问题的解决方案,有的有的...,我就想自己弄一个属于我自己的博客  </p>\n<h3 id=\"_1\">创建项目</h3>\n<p>我所使用的的开发工具是PyCharm,这个开发工具包含了所有功能,比较方便,就是运行起来比较吃内存,闲话不多说,开干!  </p>\n<p>使用PyCharm创建新的Django项目<code>djangoBlog</code>  </p>\n<p><img alt=\"\" src=\"/media/editor/create project_20190411150136409600.png\" />  </p>\n<h3 id=\"_2\">创建项目目录结构</h3>\n<p><img alt=\"\" src=\"/media/editor/desc_20190411151849799707.png\" />  </p>\n<h3 id=\"app\">创建app应用</h3>\n<p>使用命令<code>python manage.py startapp blog</code>创建名称为<code>blog</code>的应用  </p>\n<p>创建完<code>blog</code>应用后,它并没有进入我们创建的<code>apps</code>package包中,这时我们要自己手动把<code>blog</code>移动到<code>apps</code>package包中,记住,apps是一个package包,然后把鼠标放在<code>apps</code>包上,右键鼠标选择<code>Mark Directory as</code>-&gt; <code>Sources Root</code>  </p>\n<h3 id=\"app_1\">注册app应用</h3>\n<p>修改<code>settings.py</code>文件  </p>\n<pre class=\"codehilite\"><code class=\"language-python\">INSTALLED_APPS = [  \n    \'django.contrib.admin\',  \n    \'django.contrib.auth\',  \n    \'django.contrib.contenttypes\',  \n    \'django.contrib.sessions\',  \n    \'django.contrib.messages\',  \n    \'django.contrib.staticfiles\',  \n    \'apps.blog\' # 新增应用  \n]  </code></pre>\n\n\n<h3 id=\"settingspy\">修改settings.py设置</h3>\n<pre class=\"codehilite\"><code class=\"language-python\">LANGUAGE_CODE = \'zh-hans\'  \n# 后台中文显示  \nTIME_ZONE = \'Asia/Shanghai\'  \n# 设置中国时间  \nUSE_I18N = True  \n# 国际化,支持多种语言  \nUSE_TZ = False  \n# USE_TZ = True 表示UTC时间,False表示本地时间  \n# 设置文件上传路径  \nMEDIA_URL = \'/media/\'  \nMEDIA_ROOT = os.path.join(BASE_DIR, \'media\')  </code></pre>\n\n\n<h3 id=\"_3\">修改数据库</h3>\n<p>django默认数据为<code>sqlite</code>数据库,要修改为<code>mysql</code>数据库  </p>\n<pre class=\"codehilite\"><code class=\"language-python\"># 默认数据库  \nDATABASES = {  \n    \'default\': {  \n        \'ENGINE\': \'django.db.backends.sqlite3\',  \n        \'NAME\': \'db\',  \n    }  \n}  </code></pre>\n\n\n<p>修改为MySQL数据库:  </p>\n<pre class=\"codehilite\"><code class=\"language-python\">DATABASES = {  \n    \'default\': {  \n        \'ENGINE\': \'django.db.backends.mysql\',  \n        \'HOST\': \'localhost\',  \n        \'NAME\': \'website\',  \n        \'USER\': \'root\',  \n        \'PASSWORD\': \'123456\',  \n        \'PORT\': \'3306\'  \n    }  \n}  </code></pre>\n\n\n<p>数据库修改为MySQL,会报错没有驱动,这时我们需要安装一个名为<code>pymysql</code>的包,执行命令<code>pip install pymysql</code>,然后在<code>settings.py</code>中添加  </p>\n<pre class=\"codehilite\"><code class=\"language-python\">import pymysql  \npymysql.install_as_MySQLdb()  </code></pre>\n\n\n<h3 id=\"_4\">迁移数据库</h3>\n<p>执行命令<code>python manage.py makemigrations</code>创建迁移脚本,然后执行命令<code>python manage.py migrate</code>迁移数据</p>',400,0,'2019-04-29 13:30:12.931862','2019-05-03 16:01:39.923899',1,1,1,'d'),(13,'个人博客搭建二(数据库结构设计)','一个网站,最重要的部分就是数据库的设计,在django就需要设计数据库模型,模型当中每一个属性都对应一个数据库表的字段','一个网站,最重要的部分就是数据库的设计,在django就需要设计数据库模型,模型当中每一个属性都对应一个数据库表的字段\r\n\r\n- 我的博客灵感来自于[轩陌的博客](https://www.xuanmo.xin \"轩陌大大的博客\"),他的博客页面好看,所以参考他的多一些.\r\n\r\n在创建的`blog`App应用中打开`models.py`\r\n### 导航栏以及分类模型\r\n创建导航栏,导航栏的设计我是这样设计的,一个一级栏目下有零个或多个二级栏目,涉及到了一对多,当然如果对一对多不熟悉的话可以去看[django官网](https://docs.djangoproject.com/en/2.2/ref/models/fields/#foreignkey \"django官网\"){:target=_blank}\r\n```python\r\nclass Navigation(models.Model):\r\n    \"\"\"导航分类\"\"\"\r\n    name = models.CharField(\'导航名\',max_length=100)\r\n    index = models.IntegerField(default=999,verbose_name=\'分类排序\')\r\n\r\n    class Meta:\r\n        verbose_name = \'导航分类\'\r\n        verbose_name_plural = verbose_name\r\n\r\n    def __str__(self):\r\n        return self.name\r\n\r\nclass Category(models.Model):\r\n    \"\"\"子文章分类\"\"\"\r\n    name = models.CharField(verbose_name=\'分类名\',\r\n                            max_length=50)\r\n    navigation = models.ForeignKey(Navigation,\r\n                                   on_delete=models.CASCADE,\r\n                                   verbose_name=\'分类导航\')\r\n\r\n    class Meta:\r\n        verbose_name = \'文章分类\'\r\n        verbose_name_plural = verbose_name\r\n\r\n    def __str__(self):\r\n        return self.name\r\n```\r\n### 标签模型\r\n标签所需要的字段不需要很多\r\n```python\r\nclass Tag(models.Model):\r\n    \"\"\"文章标签\"\"\"\r\n    name = models.CharField(\'文章标签\',max_length=100)\r\n\r\n    class Meta:\r\n        verbose_name = \'文章标签\'\r\n        verbose_name_plural = verbose_name\r\n\r\n    def __str__(self):\r\n        return self.name\r\n```\r\n### 文章模型\r\n这个模型需要的字段就比较多了,这里我使用了mdeditor富文本编辑器,所以写了重写了save方法,新增加了三个方法viewed,next_article和prev_article\r\n\r\n```python\r\nfrom django.contrib.auth import get_user_model\r\nUser = get_user_model\r\nclass Article(models.Model):\r\n    \"\"\"文章\"\"\"\r\n    DEFAULT_IMG = \'/static/images/python.jpg\'\r\n    title = models.CharField(verbose_name=\'标题\',\r\n                             max_length=70)\r\n    excerpt = models.TextField(verbose_name=\'摘要\',\r\n                               max_length=200,\r\n                               blank=True)\r\n    category = models.ForeignKey(Category,\r\n                                 on_delete=models.CASCADE,\r\n                                 verbose_name=\'分类\',\r\n                                 null=True)\r\n    # 使用外键关联分类表与分类是一对多关系\r\n    tags = models.ManyToManyField(Tag, verbose_name=\'标签\', blank=True)\r\n    # 使用外键关联标签表与标签是多对多关系\r\n    img = models.ImageField(upload_to=\'article_img/%Y/%m/%d/\',\r\n                            verbose_name=\'文章图片\',default=DEFAULT_IMG)\r\n    body = md_models.MDTextField(verbose_name=\'作者\')\r\n    user = models.ForeignKey(User,\r\n                             on_delete=models.CASCADE,\r\n                             verbose_name=\'作者\')\r\n    views = models.PositiveIntegerField(verbose_name=\'阅读量\',\r\n                                        default=0)\r\n    tui = models.ForeignKey(Tui,\r\n                            on_delete=models.DO_NOTHING,\r\n                            verbose_name=\'推荐位\',\r\n                            null=True)\r\n    created_time = models.DateTimeField(verbose_name=\'发表时间\',\r\n                                        auto_now_add=True)\r\n    modified_time = models.DateTimeField(verbose_name=\'修改时间\',\r\n                                         auto_now=True)\r\n\r\n    def save(self, *args, **kwargs):\r\n        self.body = markdown.markdown(self.body.replace(\"\\r\\n\", \'  \\n\'),\r\n                                                extensions=[\r\n                                                    \'markdown.extensions.extra\',\r\n                                                    \'markdown.extensions.codehilite\',\r\n                                                    \'markdown.extensions.toc\',\r\n                                                ])\r\n        super(Article, self).save(*args, **kwargs)\r\n\r\n    def viewed(self):\r\n        # 访问量加一\r\n        self.views += 1\r\n        self.save(update_fields=[\'views\'])\r\n\r\n    def next_article(self):\r\n        # 下一篇\r\n        return Article.objects.filter(id__gt=self.id).order_by(\'id\').first()\r\n\r\n    def prev_article(self):\r\n        # 上一篇\r\n        return Article.objects.filter(id__lt=self.id).order_by(\'id\').last()\r\n\r\n    class Meta:\r\n        verbose_name = \'文章\'\r\n        verbose_name_plural = verbose_name\r\n\r\n    def __str__(self):\r\n        return self.title\r\n```\r\n### 友情链接\r\n一个博客怎么能没有好友呢!所有我写了这个,当好友多了之后,页面可能变得不那么美观,所有写了控制首页是否展示的方法,也可能有的好友网站过期了,没有了,就有了友情链接是否有效\r\n```python\r\nclass Link(models.Model):\r\n    \"\"\"友情链接\"\"\"\r\n    name = models.CharField(verbose_name=\'链接名称\', max_length=40)\r\n    link_url = models.URLField(verbose_name=\'网址\', max_length=100)\r\n    is_active = models.BooleanField(\'是否有效\', default=True)\r\n    is_show = models.BooleanField(\'是否首页展示\', default=False)\r\n\r\n    def active_to_false(self):\r\n        self.is_active = False\r\n        self.save(update_fields=[\'is_active\'])\r\n\r\n    def show_to_false(self):\r\n        self.is_show = True\r\n        self.save(update_fields=[\'is_show\'])\r\n\r\n    def __str__(self):\r\n        return self.name\r\n\r\n    class Meta:\r\n        verbose_name = \'友情链接\'\r\n        verbose_name_plural = verbose_name\r\n```\r\n### 轮播\r\n博客首页不能全是文章啊,轮播什么的必须要有\r\n```python\r\nclass Banner(models.Model):\r\n    \"\"\"轮播图\"\"\"\r\n    title = models.CharField(\'标题\', max_length=50, default=\'\')\r\n    img = models.ImageField(\'轮播图\', upload_to=\'banner/\')\r\n    link_url = models.URLField(\'图片链接\', max_length=100)\r\n    is_active = models.BooleanField(\'是否激活\', default=False)\r\n\r\n    def __str__(self):\r\n        return self.title\r\n\r\n    class Meta:\r\n        verbose_name = \'轮播图\'\r\n        verbose_name_plural = verbose_name\r\n```\r\n\r\n### 模型设计完后,注册模型并同步到数据库中\r\n```python\r\nfrom django.contrib import admin\r\nfrom .models import Banner, Navigation, Category, Tag, Tui, Article, Link\r\n\r\n\r\n@admin.register(Article)\r\nclass ArticleAdmin(admin.ModelAdmin):\r\n    list_display = (\'id\', \'title\', \'tui\', \'user\', \'views\', \'comment_count\', \'created_time\')\r\n    list_filter = (\'tui\', \'user\', \'created_time\')\r\n    # 文章列表里显示想要显示的字段\r\n    list_per_page = 50\r\n    # 满50条数据就自动分页\r\n    ordering = (\'-created_time\',)\r\n    # 后台数据列表排序方式\r\n    list_display_links = (\'id\', \'title\')\r\n\r\n\r\n@admin.register(Banner)\r\nclass BannerAdmin(admin.ModelAdmin):\r\n    list_display = (\'id\', \'text_info\', \'img\', \'link_url\', \'is_active\')\r\n    list_filter = (\'text_info\', \'img\', \'link_url\', \'is_active\')\r\n\r\n\r\n@admin.register(Navigation)\r\nclass NavigationAdmin(admin.ModelAdmin):\r\n    list_display = (\'id\', \'name\')\r\n    list_filter = (\'name\',)\r\n\r\n\r\n@admin.register(Category)\r\nclass CategoryAdmin(admin.ModelAdmin):\r\n    list_display = (\'id\', \'name\')\r\n    list_filter = (\'name\',)\r\n\r\n\r\n@admin.register(Tag)\r\nclass TagAdmin(admin.ModelAdmin):\r\n    list_display = (\'id\', \'name\')\r\n    list_filter = (\'name\',)\r\n\r\n\r\n@admin.register(Tui)\r\nclass TuiAdmin(admin.ModelAdmin):\r\n    list_display = (\'id\', \'name\')\r\n    list_filter = (\'name\',)\r\n\r\n\r\n@admin.register(Link)\r\nclass LinkAdmin(admin.ModelAdmin):\r\n    list_display = (\'id\', \'name\', \'link_url\')\r\n    list_filter = (\'name\', \'link_url\')\r\n```\r\n通过Pycharm的terminal执行命令\r\n创建迁移脚本 `python manage.py makemigrations`\r\n同步数据库`python manage.py migrate`','article_img/2019/04/29/django_sYHieAc.jpg','<p>一个网站,最重要的部分就是数据库的设计,在django就需要设计数据库模型,模型当中每一个属性都对应一个数据库表的字段  </p>\n<ul>\n<li>我的博客灵感来自于<a href=\"https://www.xuanmo.xin\" title=\"轩陌大大的博客\">轩陌的博客</a>,他的博客页面好看,所以参考他的多一些.  </li>\n</ul>\n<p>在创建的<code>blog</code>App应用中打开<code>models.py</code>  </p>\n<h3 id=\"_1\">导航栏以及分类模型</h3>\n<p>创建导航栏,导航栏的设计我是这样设计的,一个一级栏目下有零个或多个二级栏目,涉及到了一对多,当然如果对一对多不熟悉的话可以去看<a href=\"https://docs.djangoproject.com/en/2.2/ref/models/fields/#foreignkey\" target=\"_blank\" title=\"django官网\">django官网</a>  </p>\n<pre class=\"codehilite\"><code class=\"language-python\">class Navigation(models.Model):  \n    &quot;&quot;&quot;导航分类&quot;&quot;&quot;  \n    name = models.CharField(\'导航名\',max_length=100)  \n    index = models.IntegerField(default=999,verbose_name=\'分类排序\')  \n\n    class Meta:  \n        verbose_name = \'导航分类\'  \n        verbose_name_plural = verbose_name  \n\n    def __str__(self):  \n        return self.name  \n\nclass Category(models.Model):  \n    &quot;&quot;&quot;子文章分类&quot;&quot;&quot;  \n    name = models.CharField(verbose_name=\'分类名\',  \n                            max_length=50)  \n    navigation = models.ForeignKey(Navigation,  \n                                   on_delete=models.CASCADE,  \n                                   verbose_name=\'分类导航\')  \n\n    class Meta:  \n        verbose_name = \'文章分类\'  \n        verbose_name_plural = verbose_name  \n\n    def __str__(self):  \n        return self.name  </code></pre>\n\n\n<h3 id=\"_2\">标签模型</h3>\n<p>标签所需要的字段不需要很多  </p>\n<pre class=\"codehilite\"><code class=\"language-python\">class Tag(models.Model):  \n    &quot;&quot;&quot;文章标签&quot;&quot;&quot;  \n    name = models.CharField(\'文章标签\',max_length=100)  \n\n    class Meta:  \n        verbose_name = \'文章标签\'  \n        verbose_name_plural = verbose_name  \n\n    def __str__(self):  \n        return self.name  </code></pre>\n\n\n<h3 id=\"_3\">文章模型</h3>\n<p>这个模型需要的字段就比较多了,这里我使用了mdeditor富文本编辑器,所以写了重写了save方法,新增加了三个方法viewed,next_article和prev_article  </p>\n<pre class=\"codehilite\"><code class=\"language-python\">from django.contrib.auth import get_user_model  \nUser = get_user_model  \nclass Article(models.Model):  \n    &quot;&quot;&quot;文章&quot;&quot;&quot;  \n    DEFAULT_IMG = \'/static/images/python.jpg\'  \n    title = models.CharField(verbose_name=\'标题\',  \n                             max_length=70)  \n    excerpt = models.TextField(verbose_name=\'摘要\',  \n                               max_length=200,  \n                               blank=True)  \n    category = models.ForeignKey(Category,  \n                                 on_delete=models.CASCADE,  \n                                 verbose_name=\'分类\',  \n                                 null=True)  \n    # 使用外键关联分类表与分类是一对多关系  \n    tags = models.ManyToManyField(Tag, verbose_name=\'标签\', blank=True)  \n    # 使用外键关联标签表与标签是多对多关系  \n    img = models.ImageField(upload_to=\'article_img/%Y/%m/%d/\',  \n                            verbose_name=\'文章图片\',default=DEFAULT_IMG)  \n    body = md_models.MDTextField(verbose_name=\'作者\')  \n    user = models.ForeignKey(User,  \n                             on_delete=models.CASCADE,  \n                             verbose_name=\'作者\')  \n    views = models.PositiveIntegerField(verbose_name=\'阅读量\',  \n                                        default=0)  \n    tui = models.ForeignKey(Tui,  \n                            on_delete=models.DO_NOTHING,  \n                            verbose_name=\'推荐位\',  \n                            null=True)  \n    created_time = models.DateTimeField(verbose_name=\'发表时间\',  \n                                        auto_now_add=True)  \n    modified_time = models.DateTimeField(verbose_name=\'修改时间\',  \n                                         auto_now=True)  \n\n    def save(self, *args, **kwargs):  \n        self.body = markdown.markdown(self.body.replace(&quot;\\r\\n&quot;, \'  \\n\'),  \n                                                extensions=[  \n                                                    \'markdown.extensions.extra\',  \n                                                    \'markdown.extensions.codehilite\',  \n                                                    \'markdown.extensions.toc\',  \n                                                ])  \n        super(Article, self).save(*args, **kwargs)  \n\n    def viewed(self):  \n        # 访问量加一  \n        self.views += 1  \n        self.save(update_fields=[\'views\'])  \n\n    def next_article(self):  \n        # 下一篇  \n        return Article.objects.filter(id__gt=self.id).order_by(\'id\').first()  \n\n    def prev_article(self):  \n        # 上一篇  \n        return Article.objects.filter(id__lt=self.id).order_by(\'id\').last()  \n\n    class Meta:  \n        verbose_name = \'文章\'  \n        verbose_name_plural = verbose_name  \n\n    def __str__(self):  \n        return self.title  </code></pre>\n\n\n<h3 id=\"_4\">友情链接</h3>\n<p>一个博客怎么能没有好友呢!所有我写了这个,当好友多了之后,页面可能变得不那么美观,所有写了控制首页是否展示的方法,也可能有的好友网站过期了,没有了,就有了友情链接是否有效  </p>\n<pre class=\"codehilite\"><code class=\"language-python\">class Link(models.Model):  \n    &quot;&quot;&quot;友情链接&quot;&quot;&quot;  \n    name = models.CharField(verbose_name=\'链接名称\', max_length=40)  \n    link_url = models.URLField(verbose_name=\'网址\', max_length=100)  \n    is_active = models.BooleanField(\'是否有效\', default=True)  \n    is_show = models.BooleanField(\'是否首页展示\', default=False)  \n\n    def active_to_false(self):  \n        self.is_active = False  \n        self.save(update_fields=[\'is_active\'])  \n\n    def show_to_false(self):  \n        self.is_show = True  \n        self.save(update_fields=[\'is_show\'])  \n\n    def __str__(self):  \n        return self.name  \n\n    class Meta:  \n        verbose_name = \'友情链接\'  \n        verbose_name_plural = verbose_name  </code></pre>\n\n\n<h3 id=\"_5\">轮播</h3>\n<p>博客首页不能全是文章啊,轮播什么的必须要有  </p>\n<pre class=\"codehilite\"><code class=\"language-python\">class Banner(models.Model):  \n    &quot;&quot;&quot;轮播图&quot;&quot;&quot;  \n    title = models.CharField(\'标题\', max_length=50, default=\'\')  \n    img = models.ImageField(\'轮播图\', upload_to=\'banner/\')  \n    link_url = models.URLField(\'图片链接\', max_length=100)  \n    is_active = models.BooleanField(\'是否激活\', default=False)  \n\n    def __str__(self):  \n        return self.title  \n\n    class Meta:  \n        verbose_name = \'轮播图\'  \n        verbose_name_plural = verbose_name  </code></pre>\n\n\n<h3 id=\"_6\">模型设计完后,注册模型并同步到数据库中</h3>\n<pre class=\"codehilite\"><code class=\"language-python\">from django.contrib import admin  \nfrom .models import Banner, Navigation, Category, Tag, Tui, Article, Link  \n\n\n@admin.register(Article)  \nclass ArticleAdmin(admin.ModelAdmin):  \n    list_display = (\'id\', \'title\', \'tui\', \'user\', \'views\', \'comment_count\', \'created_time\')  \n    list_filter = (\'tui\', \'user\', \'created_time\')  \n    # 文章列表里显示想要显示的字段  \n    list_per_page = 50  \n    # 满50条数据就自动分页  \n    ordering = (\'-created_time\',)  \n    # 后台数据列表排序方式  \n    list_display_links = (\'id\', \'title\')  \n\n\n@admin.register(Banner)  \nclass BannerAdmin(admin.ModelAdmin):  \n    list_display = (\'id\', \'text_info\', \'img\', \'link_url\', \'is_active\')  \n    list_filter = (\'text_info\', \'img\', \'link_url\', \'is_active\')  \n\n\n@admin.register(Navigation)  \nclass NavigationAdmin(admin.ModelAdmin):  \n    list_display = (\'id\', \'name\')  \n    list_filter = (\'name\',)  \n\n\n@admin.register(Category)  \nclass CategoryAdmin(admin.ModelAdmin):  \n    list_display = (\'id\', \'name\')  \n    list_filter = (\'name\',)  \n\n\n@admin.register(Tag)  \nclass TagAdmin(admin.ModelAdmin):  \n    list_display = (\'id\', \'name\')  \n    list_filter = (\'name\',)  \n\n\n@admin.register(Tui)  \nclass TuiAdmin(admin.ModelAdmin):  \n    list_display = (\'id\', \'name\')  \n    list_filter = (\'name\',)  \n\n\n@admin.register(Link)  \nclass LinkAdmin(admin.ModelAdmin):  \n    list_display = (\'id\', \'name\', \'link_url\')  \n    list_filter = (\'name\', \'link_url\')  </code></pre>\n\n\n<p>通过Pycharm的terminal执行命令<br />\n创建迁移脚本 <code>python manage.py makemigrations</code><br />\n同步数据库<code>python manage.py migrate</code></p>',300,0,'2019-04-29 13:30:56.735511','2019-05-03 16:01:48.870856',1,1,1,'d'),(14,'个人博客搭建三(前端页面展示)','django的强大就在于他自带后台管理系统,当然界面嘛,比较不符合我的审美,未来会考虑自定义后台界面,现阶段暂时先不管','django的强大就在于他自带后台管理系统,当然界面嘛,比较不符合我的审美,未来会考虑自定义后台界面,现阶段暂时先不管\r\n\r\n### 创建超超级管理员并登陆后台\r\n执行命令`python manage.py createsuperuser`\r\n\r\n这时会要求输入用户名,邮箱,密码,以及确认密码,依次输入即可,当然,如果你的大密码输入过于简单,可能会报错,密码设置相对复杂一点!我们就可以登录后台了\r\n\r\n运行`python manage.py runserver`\r\n\r\n然后使用刚才创建的账号密码登录后台发表文章\r\n\r\n### 编写首页视图\r\n视图这里使用fbv模式,后面会修改为cbv模式\r\n```python\r\n\r\n```','article_img/2019/04/29/django_pn3KmS4.jpg','<p>django的强大就在于他自带后台管理系统,当然界面嘛,比较不符合我的审美,未来会考虑自定义后台界面,现阶段暂时先不管  </p>\n<h3 id=\"_1\">创建超超级管理员并登陆后台</h3>\n<p>执行命令<code>python manage.py createsuperuser</code>  </p>\n<p>这时会要求输入用户名,邮箱,密码,以及确认密码,依次输入即可,当然,如果你的大密码输入过于简单,可能会报错,密码设置相对复杂一点!我们就可以登录后台了  </p>\n<p>运行<code>python manage.py runserver</code>  </p>\n<p>然后使用刚才创建的账号密码登录后台发表文章  </p>\n<h3 id=\"_2\">编写首页视图</h3>\n<p>视图这里使用fbv模式,后面会修改为cbv模式  </p>\n<pre class=\"codehilite\"><code class=\"language-python\"></code></pre>',126,0,'2019-04-29 13:31:35.692877','2019-05-03 16:01:56.794576',1,1,NULL,'d'),(15,'Gird布局','<p>Grid 布局是 CSS 中最强大的布局系统。与 flexbox 的一维布局系统不同，Grid 布局是一个二维布局系统，也就意味着它可以同时处理列和行。通过将 CSS 规则应用于 父元素 (成为 Grid Container 网格容器)和其 子元素（成为 Grid Items 网格项），你就可以轻松使用 Grid(网格) 布局。  </p>\n<p>Gird通过将元素的父级设置<code>di','Grid 布局是 CSS 中最强大的布局系统。与 flexbox 的一维布局系统不同，Grid 布局是一个二维布局系统，也就意味着它可以同时处理列和行。通过将 CSS 规则应用于 父元素 (成为 Grid Container 网格容器)和其 子元素（成为 Grid Items 网格项），你就可以轻松使用 Grid(网格) 布局。\r\n\r\nGird通过将元素的父级设置`display: grid`,来声明这是一个grid容器,来转化为网格布局。\r\n#### 容器属性(Grid Container)\r\n```css\r\ndisplay: grid || inline-grid;\r\n// 声明一个容器,块状||内联\r\ngrid-template-columns: 25% 25% 25% 25%;\r\n// 定义列，有多少个参数就多少列,参数之间用逗号隔开\r\ngrid-template-rows: 25% 100px auto;\r\n// 定义行，有多少个参数就多少行,参数之间用逗号隔开\r\ngrid-column-gap\r\n// 列间距\r\ngrid-column-gap\r\n// 行间距\r\njustify-items:start | end | center | stretch(默认);\r\n// 水平方向对齐,左对齐|右对齐|居中|填充\r\nalign-items: start | end | center | stretch;\r\n// 垂直方向对齐,顶部对齐|底部对齐|居中|填充\r\njustify-content: start | end | center | stretch | space-around | space-between | space-evenly;\r\n// 整个容器水平对齐\r\nalign-content: start | end | center | stretch | space-around | space-between | space-evenly;\r\n// 整个容器垂直对齐\r\n```\r\n#### 单元格属性\r\n```css\r\ngrid-column-start\r\ngrid-column-end\r\ngrid-row-start\r\ngrid-row-end\r\n```','article_img/2019/05/02/grid.png','<p>Grid 布局是 CSS 中最强大的布局系统。与 flexbox 的一维布局系统不同，Grid 布局是一个二维布局系统，也就意味着它可以同时处理列和行。通过将 CSS 规则应用于 父元素 (成为 Grid Container 网格容器)和其 子元素（成为 Grid Items 网格项），你就可以轻松使用 Grid(网格) 布局。  </p>\n<p>Gird通过将元素的父级设置<code>display: grid</code>,来声明这是一个grid容器,来转化为网格布局。  </p>\n<h4 id=\"grid-container\">容器属性(Grid Container)</h4>\n<pre class=\"codehilite\"><code class=\"language-css\">display: grid || inline-grid;  \n// 声明一个容器,块状||内联  \ngrid-template-columns: 25% 25% 25% 25%;  \n// 定义列，有多少个参数就多少列,参数之间用逗号隔开  \ngrid-template-rows: 25% 100px auto;  \n// 定义行，有多少个参数就多少行,参数之间用逗号隔开  \ngrid-column-gap  \n// 列间距  \ngrid-column-gap  \n// 行间距  \njustify-items:start | end | center | stretch(默认);  \n// 水平方向对齐,左对齐|右对齐|居中|填充  \nalign-items: start | end | center | stretch;  \n// 垂直方向对齐,顶部对齐|底部对齐|居中|填充  \njustify-content: start | end | center | stretch | space-around | space-between | space-evenly;  \n// 整个容器水平对齐  \nalign-content: start | end | center | stretch | space-around | space-between | space-evenly;  \n// 整个容器垂直对齐  </code></pre>\n\n\n<h4 id=\"_1\">单元格属性</h4>\n<pre class=\"codehilite\"><code class=\"language-css\">grid-column-start  \ngrid-column-end  \ngrid-row-start  \ngrid-row-end  </code></pre>',13,0,'2019-04-29 18:08:21.200575','2019-05-07 06:44:01.681828',1,4,NULL,'p'),(17,'django实现JWT登录','在用户注册或登录后，我们想记录用户的登录状态，或者为用户创建身份认证的凭证。我们不再使用Session认证机制，而使用Json Web Token认证机制。','在用户注册或登录后，我们想记录用户的登录状态，或者为用户创建身份认证的凭证。我们不再使用Session认证机制，而使用Json Web Token认证机制。\r\n\r\n##### 安装django-rest-framework\r\n`pip install djangorestframework djangorestframework-jwt`\r\n\r\n在`settings.py- -> INSTALL-APP`中添加\r\n```django\r\nINSTALLED_APPS = [\r\n    ...\r\n    \'rest_framework\',\r\n    \'rest_framework.authtoken\',\r\n]\r\n```\r\n同时还要执行迁移脚本命令,`rest_framework.authtoken`会帮我们生成一张`token`表\r\n```django\r\npython manage.py makemigrations\r\npython manage.py migrate\r\n```\r\n在同文件夹下的`urls.py`中添加\r\n```django\r\nfrom rest_framework_jwt.views import obtain_jwt_token\r\nurlpatterns = [\r\n	re_path(r\'^login/\', obtain_jwt_token)\r\n]\r\n```\r\n运行服务器,打开本地服务器,请求地址`http://127.0.0.1/login` 输入账号密码,会返回生成的Token\r\n\r\n![登录](/media/editor/login_20190503132734817568.png \"登录\")','article_img/2019/05/03/django_UVFOZq2.jpg','<p>在用户注册或登录后，我们想记录用户的登录状态，或者为用户创建身份认证的凭证。我们不再使用Session认证机制，而使用Json Web Token认证机制。  </p>\n<h5 id=\"django-rest-framework\">安装django-rest-framework</h5>\n<p><code>pip install djangorestframework djangorestframework-jwt</code>  </p>\n<p>在<code>settings.py- -&gt; INSTALL-APP</code>中添加  </p>\n<pre class=\"codehilite\"><code class=\"language-django\">INSTALLED_APPS = [  \n    ...  \n    \'rest_framework\',  \n    \'rest_framework.authtoken\',  \n]  </code></pre>\n\n\n<p>同时还要执行迁移脚本命令,<code>rest_framework.authtoken</code>会帮我们生成一张<code>token</code>表  </p>\n<pre class=\"codehilite\"><code class=\"language-django\">python manage.py makemigrations  \npython manage.py migrate  </code></pre>\n\n\n<p>在同文件夹下的<code>urls.py</code>中添加  </p>\n<pre class=\"codehilite\"><code class=\"language-django\">from rest_framework_jwt.views import obtain_jwt_token  \nurlpatterns = [  \n    re_path(r\'^login/\', obtain_jwt_token)  \n]  </code></pre>\n\n\n<p>运行服务器,打开本地服务器,请求地址<code>http://127.0.0.1/login</code> 输入账号密码,会返回生成的Token  </p>\n<p><img alt=\"登录\" src=\"/media/editor/login_20190503132734817568.png\" title=\"登录\" /></p>',8,0,'2019-05-03 13:26:35.347466','2019-05-03 16:02:11.519446',1,1,NULL,'p'),(24,'django自定义用户认证','<p>django默认后台登录只能通过用户名登录,如果想要通过用户名或者邮箱登录,那就需要自定义后台验证了<br />\n在自定义的用户模型(Accounts)中新建<code>backends.py</code>  </p>\n<pre class=\"codehilite\"><code class=\"language-django\">from django.contrib.auth.backends','django默认后台登录只能通过用户名登录,如果想要通过用户名或者邮箱登录,那就需要自定义后台验证了\r\n在自定义的用户模型(Accounts)中新建`backends.py`\r\n```django\r\nfrom django.contrib.auth.backends import ModelBackend\r\nfrom django.db.models import Q\r\nfrom django.contrib.auth import get_user_model\r\nfrom django.contrib.auth.models import Permission\r\n\r\nUser = get_user_model()\r\n\r\n\r\nclass CustomBackend(ModelBackend):\r\n    \"\"\"自定义后台验证\"\"\"\r\n\r\n    def authenticate(self, request, username=None, password=None, **kwargs):\r\n        # 重写authenticate方法\r\n        user = User.objects.filter(Q(username=username) | Q(email=username)).first()\r\n        if user:\r\n            if user.check_password(password):\r\n                return user\r\n        return None\r\n```\r\n在项目中的`settings.py`文件中增加自定义认证引用路径\r\n```django\r\n# 增加自定义后台验证路径\r\nAUTHENTICATION_BACKENDS = (\r\n    \'accounts.backends.CustomBackend\',\r\n	# django.contrib.auth.backends.ModelBackend\r\n	# 注释的是django自带的后台认证,这里修改为自己写的路径\r\n\r\n)\r\n```\r\n[参考文档](https://docs.djangoproject.com/zh-hans/2.2/topics/auth/customizing/ \"参考文档\"){:targat=_blank}','article_img/2019/05/03/django_eUFXhNB.jpg','<p>django默认后台登录只能通过用户名登录,如果想要通过用户名或者邮箱登录,那就需要自定义后台验证了<br />\n在自定义的用户模型(Accounts)中新建<code>backends.py</code>  </p>\n<pre class=\"codehilite\"><code class=\"language-django\">from django.contrib.auth.backends import ModelBackend  \nfrom django.db.models import Q  \nfrom django.contrib.auth import get_user_model  \nfrom django.contrib.auth.models import Permission  \n\nUser = get_user_model()  \n\n\nclass CustomBackend(ModelBackend):  \n    &quot;&quot;&quot;自定义后台验证&quot;&quot;&quot;  \n\n    def authenticate(self, request, username=None, password=None, **kwargs):  \n        # 重写authenticate方法  \n        user = User.objects.filter(Q(username=username) | Q(email=username)).first()  \n        if user:  \n            if user.check_password(password):  \n                return user  \n        return None  </code></pre>\n\n\n<p>在项目中的<code>settings.py</code>文件中增加自定义认证引用路径  </p>\n<pre class=\"codehilite\"><code class=\"language-django\"># 增加自定义后台验证路径  \nAUTHENTICATION_BACKENDS = (  \n    \'accounts.backends.CustomBackend\',  \n    # django.contrib.auth.backends.ModelBackend  \n    # 注释的是django自带的后台认证,这里修改为自己写的路径  \n\n)  </code></pre>\n\n\n<p><a href=\"https://docs.djangoproject.com/zh-hans/2.2/topics/auth/customizing/\" targat=\"_blank\" title=\"参考文档\">参考文档</a></p>',5,0,'2019-05-03 15:37:54.676761','2019-05-07 01:22:23.162526',1,1,NULL,'p'),(28,'django发表文章时主动推送文章到百度','<p>当我们写了一遍文章后如何让百度蜘蛛知道病来爬取我们的文章呢?<br />\n这里就需要我们主动提交数据链接到百度资源了  </p>\n<h3 id=\"_1\">推送数据到百度站点</h3>\n<p>在<code>Article</code>模型中新增<code>push</code>方法  </p>\n<pre class=\"codehilite\"><code class=\"language-djan','当我们写了一遍文章后如何让百度蜘蛛知道病来爬取我们的文章呢?\r\n这里就需要我们主动提交数据链接到百度资源了\r\n\r\n### 推送数据到百度站点\r\n在`Article`模型中新增`push`方法\r\n```django\r\ndef push(self):\r\n    \"\"\"推送到百度\"\"\"\r\n    if self.status == \'p\':\r\n        # 当状态为发表时才发送推送请求\r\n        import requests\r\n        # http://data.zz.baidu.com/site/index 站点管理中的链接提交接口\r\n        url = \'http://data.zz.baidu.com/urls?site=yours site&token=yours token\'\r\n		headers = {\r\n            \'Content-Type\': \'text/plain\'\r\n        }\r\n		article_list = list()\r\n        article_list.append(\'yous site/path/%s.html\' % (self.pk))\r\n        data = \'\\n\'.join(article_list)\r\n		req = requests.post(url, headers=headers, data=data)\r\n        res = req.json()\r\n        print(res, \'响应数据\')\r\n```','article_img/2019/05/03/django_8XAG3vI.jpg','<p>当我们写了一遍文章后如何让百度蜘蛛知道病来爬取我们的文章呢?<br />\n这里就需要我们主动提交数据链接到百度资源了  </p>\n<h3 id=\"_1\">推送数据到百度站点</h3>\n<p>在<code>Article</code>模型中新增<code>push</code>方法  </p>\n<pre class=\"codehilite\"><code class=\"language-django\">def push(self):  \n    &quot;&quot;&quot;推送到百度&quot;&quot;&quot;  \n    if self.status == \'p\':  \n        # 当状态为发表时才发送推送请求  \n        import requests  \n        # http://data.zz.baidu.com/site/index 站点管理中的链接提交接口  \n        url = \'http://data.zz.baidu.com/urls?site=yours site&amp;token=yours token\'  \n        headers = {  \n            \'Content-Type\': \'text/plain\'  \n        }  \n        article_list = list()  \n        article_list.append(\'yous site/path/%s.html\' % (self.pk))  \n        data = \'\\n\'.join(article_list)  \n        req = requests.post(url, headers=headers, data=data)  \n        res = req.json()  \n        print(res, \'响应数据\')  </code></pre>',6,0,'2019-05-03 18:47:17.250151','2019-05-07 17:19:03.948909',1,1,NULL,'p');
/*!40000 ALTER TABLE `blog_article` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_article_tags`
--

DROP TABLE IF EXISTS `blog_article_tags`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_article_tags` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `article_id` int(11) NOT NULL,
  `tag_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `blog_article_tags_article_id_tag_id_b78a22e9_uniq` (`article_id`,`tag_id`),
  KEY `blog_article_tags_tag_id_88eb3ed9_fk_blog_tag_id` (`tag_id`),
  CONSTRAINT `blog_article_tags_article_id_82c02dd6_fk_blog_article_id` FOREIGN KEY (`article_id`) REFERENCES `blog_article` (`id`),
  CONSTRAINT `blog_article_tags_tag_id_88eb3ed9_fk_blog_tag_id` FOREIGN KEY (`tag_id`) REFERENCES `blog_tag` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=23 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_article_tags`
--

LOCK TABLES `blog_article_tags` WRITE;
/*!40000 ALTER TABLE `blog_article_tags` DISABLE KEYS */;
INSERT INTO `blog_article_tags` VALUES (1,1,1),(2,2,2),(3,3,1),(4,3,3),(5,4,1),(6,4,3),(7,5,4),(8,6,4),(9,7,5),(10,8,6),(11,9,7),(12,10,7),(13,11,5),(14,12,5),(15,12,7),(16,13,5),(17,14,5),(18,14,7),(19,15,3),(20,17,5),(21,24,5),(22,28,5);
/*!40000 ALTER TABLE `blog_article_tags` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_banner`
--

DROP TABLE IF EXISTS `blog_banner`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_banner` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(50) NOT NULL,
  `number` int(11) NOT NULL,
  `img` varchar(100) NOT NULL,
  `link_url` varchar(100) DEFAULT NULL,
  `is_active` tinyint(1) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_banner`
--

LOCK TABLES `blog_banner` WRITE;
/*!40000 ALTER TABLE `blog_banner` DISABLE KEYS */;
INSERT INTO `blog_banner` VALUES (1,'django',1,'banner/django_f2Mgc0o.jpg',NULL,1),(2,'Python',2,'banner/python.jpg',NULL,1);
/*!40000 ALTER TABLE `blog_banner` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_category`
--

DROP TABLE IF EXISTS `blog_category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_category` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `slug` varchar(50) NOT NULL,
  `navigation_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `slug` (`slug`),
  UNIQUE KEY `blog_category_name_92eb1483_uniq` (`name`),
  KEY `blog_category_navigation_id_1f065a91_fk_blog_navigation_id` (`navigation_id`),
  CONSTRAINT `blog_category_navigation_id_1f065a91_fk_blog_navigation_id` FOREIGN KEY (`navigation_id`) REFERENCES `blog_navigation` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_category`
--

LOCK TABLES `blog_category` WRITE;
/*!40000 ALTER TABLE `blog_category` DISABLE KEYS */;
INSERT INTO `blog_category` VALUES (1,'Python','python',1),(2,'Shell','shell',1),(3,'JavaScript','JavaScript',1),(4,'HTML5','html5',1),(5,'Scss','scss',1),(6,'Git','git',4),(7,'Ubuntu','ubuntu',5);
/*!40000 ALTER TABLE `blog_category` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_friendlink`
--

DROP TABLE IF EXISTS `blog_friendlink`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_friendlink` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(40) NOT NULL,
  `link_url` varchar(100) NOT NULL,
  `is_active` tinyint(1) NOT NULL,
  `is_show` tinyint(1) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_friendlink`
--

LOCK TABLES `blog_friendlink` WRITE;
/*!40000 ALTER TABLE `blog_friendlink` DISABLE KEYS */;
INSERT INTO `blog_friendlink` VALUES (1,'轩陌','https://www.xuanmo.xin',1,1);
/*!40000 ALTER TABLE `blog_friendlink` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_navigation`
--

DROP TABLE IF EXISTS `blog_navigation`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_navigation` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(100) NOT NULL,
  `index` int(11) NOT NULL,
  `slug` varchar(50) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `slug` (`slug`),
  UNIQUE KEY `blog_navigation_name_5eab94a5_uniq` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_navigation`
--

LOCK TABLES `blog_navigation` WRITE;
/*!40000 ALTER TABLE `blog_navigation` DISABLE KEYS */;
INSERT INTO `blog_navigation` VALUES (1,'编程',1,'programming'),(2,'留言',4,'message'),(3,'个人随笔',5,'life'),(4,'工具',3,'tools'),(5,'Linux',2,'linux');
/*!40000 ALTER TABLE `blog_navigation` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_notice`
--

DROP TABLE IF EXISTS `blog_notice`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_notice` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `text` varchar(300) NOT NULL,
  `is_active` tinyint(1) NOT NULL,
  `created_time` datetime(6) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_notice`
--

LOCK TABLES `blog_notice` WRITE;
/*!40000 ALTER TABLE `blog_notice` DISABLE KEYS */;
/*!40000 ALTER TABLE `blog_notice` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_siteinfo`
--

DROP TABLE IF EXISTS `blog_siteinfo`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_siteinfo` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `site_name` varchar(40) NOT NULL,
  `keywords` varchar(200) NOT NULL,
  `description` longtext NOT NULL,
  `copyright` varchar(200) NOT NULL,
  `code` varchar(200) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_siteinfo`
--

LOCK TABLES `blog_siteinfo` WRITE;
/*!40000 ALTER TABLE `blog_siteinfo` DISABLE KEYS */;
INSERT INTO `blog_siteinfo` VALUES (1,'Superficial','Superficial博客,web前端,css3,jquery,JavaScript,vue,django,python','Superficial个人博客，用来记录自己学习,记录自己的成长过程！','CopyRight @ 2018','粤ICP备18104950号-1');
/*!40000 ALTER TABLE `blog_siteinfo` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_tag`
--

DROP TABLE IF EXISTS `blog_tag`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_tag` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(100) NOT NULL,
  `slug` varchar(50) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `slug` (`slug`),
  UNIQUE KEY `blog_tag_name_c5718cc8_uniq` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_tag`
--

LOCK TABLES `blog_tag` WRITE;
/*!40000 ALTER TABLE `blog_tag` DISABLE KEYS */;
INSERT INTO `blog_tag` VALUES (1,'HTML','html'),(2,'SCSS','scss'),(3,'CSS','css'),(4,'JS','js'),(5,'django','django'),(6,'git','git'),(7,'Python','python'),(8,'Vue','vue'),(9,'Linux','linux');
/*!40000 ALTER TABLE `blog_tag` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_total`
--

DROP TABLE IF EXISTS `blog_total`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_total` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `article_nums` int(11) NOT NULL,
  `category_nums` int(11) NOT NULL,
  `comment_nums` int(11) NOT NULL,
  `tag_nums` int(11) NOT NULL,
  `visit_nums` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_total`
--

LOCK TABLES `blog_total` WRITE;
/*!40000 ALTER TABLE `blog_total` DISABLE KEYS */;
INSERT INTO `blog_total` VALUES (1,1,7,0,9,96);
/*!40000 ALTER TABLE `blog_total` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_tui`
--

DROP TABLE IF EXISTS `blog_tui`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_tui` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(100) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_tui`
--

LOCK TABLES `blog_tui` WRITE;
/*!40000 ALTER TABLE `blog_tui` DISABLE KEYS */;
INSERT INTO `blog_tui` VALUES (1,'热门推荐');
/*!40000 ALTER TABLE `blog_tui` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `comments_comment`
--

DROP TABLE IF EXISTS `comments_comment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `comments_comment` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `nickname` varchar(20) NOT NULL,
  `email` varchar(30) NOT NULL,
  `url` varchar(200) NOT NULL,
  `created_time` datetime(6) NOT NULL,
  `content` longtext NOT NULL,
  `browser` varchar(200) NOT NULL,
  `ip_address` varchar(200) NOT NULL,
  `belong_id` int(11) NOT NULL,
  `parent_id` int(11) DEFAULT NULL,
  `avatar` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `comments_comment_belong_id_04009fc9_fk_blog_article_id` (`belong_id`),
  KEY `comments_comment_parent_id_3e0802fb_fk_comments_comment_id` (`parent_id`),
  CONSTRAINT `comments_comment_belong_id_04009fc9_fk_blog_article_id` FOREIGN KEY (`belong_id`) REFERENCES `blog_article` (`id`),
  CONSTRAINT `comments_comment_parent_id_3e0802fb_fk_comments_comment_id` FOREIGN KEY (`parent_id`) REFERENCES `comments_comment` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=23 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `comments_comment`
--

LOCK TABLES `comments_comment` WRITE;
/*!40000 ALTER TABLE `comments_comment` DISABLE KEYS */;
INSERT INTO `comments_comment` VALUES (12,'Superficial','347106739@qq.com','http://www.zhangwurui.com','2019-04-28 14:31:09.736407','测试评论','Chrome 72.0','',2,NULL,NULL),(13,'test','347106739@qq.com','http://www.zhangwurui.com','2019-04-28 14:31:28.931505','测试回复','Chrome 72.0','',2,12,NULL),(14,'Z航','1412742873@qq.com','','2019-04-28 17:57:41.624183','测试回复评论','Chrome 72.0','',2,12,NULL),(15,'Superficial','347106739@qq.com','','2019-04-29 17:00:24.302246','测试评论','Chrome 72.0','',2,NULL,NULL),(16,'admin','1412742873@qq.com','','2019-04-29 17:01:15.613276','测试回复','Chrome 72.0','',2,15,NULL),(17,'gjbg','347106739@qq.com','','2019-05-07 20:43:15.609342','cjbgh','Miuibrowser 10.2','湖北省武汉',2,12,NULL),(18,'gjbg','347106739@qq.com','','2019-05-07 20:43:22.794747','cjbgh','Miuibrowser 10.2','湖北省武汉',2,12,NULL),(19,'gjbg','347106739@qq.com','','2019-05-07 20:43:29.894705','cjbgh','Miuibrowser 10.2','湖北省武汉',2,12,NULL),(20,'gjbg','347106739@qq.com','','2019-05-07 20:43:30.525119','cjbgh','Miuibrowser 10.2','湖北省武汉',2,12,NULL),(21,'gjbg','347106739@qq.com','','2019-05-07 20:43:31.202601','cjbgh','Miuibrowser 10.2','湖北省武汉',2,12,NULL),(22,'gjbg','347106739@qq.com','','2019-05-07 20:43:31.845504','cjbgh','Miuibrowser 10.2','湖北省武汉',2,12,NULL);
/*!40000 ALTER TABLE `comments_comment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_admin_log`
--

DROP TABLE IF EXISTS `django_admin_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_admin_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `action_time` datetime(6) NOT NULL,
  `object_id` longtext,
  `object_repr` varchar(200) NOT NULL,
  `action_flag` smallint(5) unsigned NOT NULL,
  `change_message` longtext NOT NULL,
  `content_type_id` int(11) DEFAULT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `django_admin_log_content_type_id_c4bce8eb_fk_django_co` (`content_type_id`),
  KEY `django_admin_log_user_id_c564eba6_fk_accounts_oauth_id` (`user_id`),
  CONSTRAINT `django_admin_log_content_type_id_c4bce8eb_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`),
  CONSTRAINT `django_admin_log_user_id_c564eba6_fk_accounts_oauth_id` FOREIGN KEY (`user_id`) REFERENCES `accounts_oauth` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=123 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_admin_log`
--

LOCK TABLES `django_admin_log` WRITE;
/*!40000 ALTER TABLE `django_admin_log` DISABLE KEYS */;
INSERT INTO `django_admin_log` VALUES (1,'2019-04-25 16:02:39.461068','1','编程',1,'[{\"added\": {}}]',11,1),(2,'2019-04-25 16:47:16.316175','1','ES',1,'[{\"added\": {}}]',8,1),(3,'2019-04-25 16:47:28.038846','2','CSS',1,'[{\"added\": {}}]',8,1),(4,'2019-04-25 17:05:47.782748','2','留言',1,'[{\"added\": {}}]',11,1),(5,'2019-04-25 17:07:26.589399','3','个人随笔',1,'[{\"added\": {}}]',11,1),(6,'2019-04-25 17:09:09.230270','1','Python',1,'[{\"added\": {}}]',9,1),(7,'2019-04-25 17:09:25.500200','2','Shell',1,'[{\"added\": {}}]',9,1),(8,'2019-04-25 17:09:53.584807','3','JavaScript',1,'[{\"added\": {}}]',9,1),(9,'2019-04-25 17:23:54.558908','4','HTML5',1,'[{\"added\": {}}]',9,1),(10,'2019-04-25 17:24:54.343327','1','HTML',1,'[{\"added\": {}}]',14,1),(11,'2019-04-25 17:26:00.076087','1','热门推荐',1,'[{\"added\": {}}]',16,1),(12,'2019-04-25 17:26:04.705352','1','前端的几个重要知识点',1,'[{\"added\": {}}]',7,1),(13,'2019-04-26 01:21:02.410327','1','django',2,'[{\"changed\": {\"fields\": [\"img\"]}}]',8,1),(14,'2019-04-26 17:11:32.951751','2','SCSS',1,'[{\"added\": {}}]',14,1),(15,'2019-04-26 17:13:05.267026','5','Scss',1,'[{\"added\": {}}]',9,1),(16,'2019-04-26 17:13:33.027684','2','pycharm配置scss文件',1,'[{\"added\": {}}]',7,1),(17,'2019-04-26 17:16:33.992297','2','pycharm配置scss文件',2,'[{\"changed\": {\"fields\": [\"img\"]}}]',7,1),(18,'2019-04-26 17:57:38.049362','2','pycharm配置scss文件',2,'[{\"changed\": {\"fields\": [\"body\"]}}]',7,1),(19,'2019-04-26 18:03:26.686039','2','pycharm配置scss文件',2,'[{\"changed\": {\"fields\": [\"body\", \"format_content\"]}}]',7,1),(20,'2019-04-26 19:59:47.744407','2','pycharm配置scss文件',2,'[{\"changed\": {\"fields\": [\"body\", \"format_content\", \"views\"]}}]',7,1),(21,'2019-04-26 20:43:31.705074','2','pycharm配置scss文件',2,'[{\"changed\": {\"fields\": [\"body\", \"format_content\"]}}]',7,1),(22,'2019-04-26 20:46:05.869846','2','pycharm配置scss文件',2,'[{\"changed\": {\"fields\": [\"body\", \"format_content\", \"views\"]}}]',7,1),(23,'2019-04-26 20:47:26.876116','2','pycharm配置scss文件',2,'[{\"changed\": {\"fields\": [\"body\", \"format_content\", \"views\"]}}]',7,1),(24,'2019-04-27 23:35:19.368581','3','文本超出隐藏',1,'[{\"added\": {}}]',7,1),(25,'2019-04-27 23:35:22.649769','3','文本超出隐藏',2,'[{\"changed\": {\"fields\": [\"format_content\"]}}]',7,1),(26,'2019-04-27 23:35:44.821037','3','CSS',1,'[{\"added\": {}}]',14,1),(27,'2019-04-27 23:35:51.921443','3','文本超出隐藏',2,'[{\"changed\": {\"fields\": [\"tags\", \"format_content\"]}}]',7,1),(28,'2019-04-27 23:37:18.821413','4','假设高度已知,左右宽度固定,中间自适应的几种方案',1,'[{\"added\": {}}]',7,1),(29,'2019-04-27 23:38:42.185181','4','JS',1,'[{\"added\": {}}]',14,1),(30,'2019-04-27 23:38:55.297931','5','var,let和const的区别',1,'[{\"added\": {}}]',7,1),(31,'2019-04-27 23:40:42.139042','6','箭头函数',1,'[{\"added\": {}}]',7,1),(32,'2019-04-27 23:41:14.076869','6','箭头函数',2,'[{\"changed\": {\"fields\": [\"img\", \"format_content\"]}}]',7,1),(33,'2019-04-27 23:42:21.968752','5','django',1,'[{\"added\": {}}]',14,1),(34,'2019-04-27 23:42:35.401521','7','在django中添加sitemap',1,'[{\"added\": {}}]',7,1),(35,'2019-04-27 23:44:54.485476','4','工具',1,'[{\"added\": {}}]',11,1),(36,'2019-04-27 23:45:04.569053','6','Git',1,'[{\"added\": {}}]',9,1),(37,'2019-04-27 23:45:20.859984','6','git',1,'[{\"added\": {}}]',14,1),(38,'2019-04-27 23:45:32.134629','8','git常用命令',1,'[{\"added\": {}}]',7,1),(39,'2019-04-27 23:46:46.094860','7','Python',1,'[{\"added\": {}}]',14,1),(40,'2019-04-27 23:47:12.474368','9','Python获取本机IP地址',1,'[{\"added\": {}}]',7,1),(41,'2019-04-27 23:47:55.265816','9','Python获取本机IP地址',2,'[{\"changed\": {\"fields\": [\"img\", \"format_content\"]}}]',7,1),(42,'2019-04-27 23:48:43.739588','10','Python虚拟环境的安装',1,'[{\"added\": {}}]',7,1),(43,'2019-04-27 23:49:33.065410','11','django把SQLite数据库的数据导入到MySQL数据库中',1,'[{\"added\": {}}]',7,1),(44,'2019-04-28 14:20:21.359322','10','测试回复',2,'[{\"changed\": {\"fields\": [\"ip_address\", \"parent\"]}}]',24,1),(45,'2019-04-28 14:30:42.126828','1','dd',3,'',24,1),(46,'2019-04-28 14:30:42.134829','2','dd',3,'',24,1),(47,'2019-04-28 14:30:42.138829','3','测试',3,'',24,1),(48,'2019-04-28 14:30:42.143829','4','测试',3,'',24,1),(49,'2019-04-28 14:30:42.147829','5','对对对',3,'',24,1),(50,'2019-04-28 14:30:42.152830','6','对对对',3,'',24,1),(51,'2019-04-28 14:30:42.166831','7','顶顶顶顶',3,'',24,1),(52,'2019-04-28 14:30:42.171831','8','对的',3,'',24,1),(53,'2019-04-28 14:30:42.174831','9','对对对',3,'',24,1),(54,'2019-04-28 18:28:21.579422','1','www.zhangwurui.com',2,'[{\"changed\": {\"fields\": [\"domain\", \"name\"]}}]',6,1),(55,'2019-04-28 18:28:48.589967','1','轩陌',1,'[{\"added\": {}}]',10,1),(56,'2019-04-28 18:30:31.748868','1','Superficial',1,'[{\"added\": {}}]',13,1),(57,'2019-04-28 22:33:12.954077','1','django',2,'[{\"changed\": {\"fields\": [\"img\"]}}]',8,1),(58,'2019-04-29 02:28:39.587308','2','Python',2,'[{\"changed\": {\"fields\": [\"title\", \"img\"]}}]',8,1),(59,'2019-04-29 13:30:12.940863','12','个人博客搭建一(创建应用)',1,'[{\"added\": {}}]',7,1),(60,'2019-04-29 13:30:15.896022','12','个人博客搭建一(创建应用)',2,'[{\"changed\": {\"fields\": [\"format_content\"]}}]',7,1),(61,'2019-04-29 13:30:56.742511','13','个人博客搭建二(数据库结构设计)',1,'[{\"added\": {}}]',7,1),(62,'2019-04-29 13:31:35.701878','14','个人博客搭建三(前端页面展示)',1,'[{\"added\": {}}]',7,1),(63,'2019-04-29 13:33:03.485478','13','个人博客搭建二(数据库结构设计)',2,'[{\"changed\": {\"fields\": [\"status\", \"format_content\"]}}]',7,1),(64,'2019-04-29 13:33:09.412714','14','个人博客搭建三(前端页面展示)',2,'[{\"changed\": {\"fields\": [\"status\", \"format_content\"]}}]',7,1),(65,'2019-04-29 14:21:33.183349','11','django把SQLite数据库的数据导入到MySQL数据库中',2,'[{\"changed\": {\"fields\": [\"format_content\"]}}]',7,1),(66,'2019-04-29 17:15:43.161974','1','编程',2,'[{\"changed\": {\"fields\": [\"index\"]}}]',11,1),(67,'2019-04-29 17:16:01.485800','3','个人随笔',2,'[{\"changed\": {\"fields\": [\"index\"]}}]',11,1),(68,'2019-04-29 17:16:08.849070','4','工具',2,'[{\"changed\": {\"fields\": [\"index\"]}}]',11,1),(69,'2019-04-29 17:16:13.052271','2','留言',2,'[{\"changed\": {\"fields\": [\"index\"]}}]',11,1),(70,'2019-04-29 17:20:07.211045','8','Vue',1,'[{\"added\": {}}]',14,1),(71,'2019-04-29 18:08:21.204575','15','Gird布局',1,'[{\"added\": {}}]',7,1),(72,'2019-04-30 15:36:04.649297','15','Gird布局',2,'[]',7,1),(73,'2019-04-30 15:36:57.710331','15','Gird布局',2,'[{\"changed\": {\"fields\": [\"slug\"]}}]',7,1),(74,'2019-04-30 15:37:04.546722','15','Gird布局',2,'[{\"changed\": {\"fields\": [\"slug\"]}}]',7,1),(75,'2019-04-30 15:37:23.519808','14','个人博客搭建三(前端页面展示)',2,'[{\"changed\": {\"fields\": [\"format_content\", \"slug\"]}}]',7,1),(76,'2019-04-30 15:38:11.550555','14','个人博客搭建三(前端页面展示)',2,'[]',7,1),(77,'2019-04-30 15:38:39.369146','14','个人博客搭建三(前端页面展示)',2,'[{\"changed\": {\"fields\": [\"format_content\"]}}]',7,1),(78,'2019-04-30 17:54:29.131629','1','django',2,'[{\"changed\": {\"fields\": [\"img\"]}}]',8,1),(79,'2019-04-30 18:55:24.222924','3','文本超出隐藏',2,'[{\"changed\": {\"fields\": [\"body\", \"format_content\"]}}]',7,1),(80,'2019-05-02 16:09:43.394781','15','Gird布局',2,'[{\"changed\": {\"fields\": [\"body\"]}}]',7,1),(81,'2019-05-02 16:26:16.325169','15','Gird布局',2,'[{\"changed\": {\"fields\": [\"body\", \"img\", \"format_content\"]}}]',7,1),(82,'2019-05-02 16:27:42.414890','15','Gird布局',2,'[{\"changed\": {\"fields\": [\"body\", \"format_content\", \"views\"]}}]',7,1),(83,'2019-05-02 16:32:12.335309','15','Gird布局',2,'[{\"changed\": {\"fields\": [\"body\", \"format_content\", \"views\"]}}]',7,1),(84,'2019-05-02 16:34:00.854638','15','Gird布局',2,'[{\"changed\": {\"fields\": [\"body\", \"format_content\", \"views\"]}}]',7,1),(85,'2019-05-03 13:26:35.358702','17','django实现JWT登录',1,'[{\"added\": {}}]',7,1),(86,'2019-05-03 13:27:53.452572','17','django实现JWT登录',2,'[{\"changed\": {\"fields\": [\"body\", \"format_content\"]}}]',7,1),(87,'2019-05-03 13:36:28.814530','17','django实现JWT登录',2,'[{\"changed\": {\"fields\": [\"body\", \"format_content\", \"views\"]}}]',7,1),(88,'2019-05-03 13:37:35.218575','17','django实现JWT登录',2,'[{\"changed\": {\"fields\": [\"format_content\"]}}]',7,1),(89,'2019-05-03 14:39:15.608238','17','django实现JWT登录',2,'[{\"changed\": {\"fields\": [\"body\", \"format_content\"]}}]',7,1),(90,'2019-05-03 15:37:54.681354','24','djangossss',1,'[{\"added\": {}}]',7,1),(91,'2019-05-03 15:38:07.758783','24','django自定义用户认证',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',7,1),(92,'2019-05-03 15:38:13.894730','24','django自定义用户认证',2,'[{\"changed\": {\"fields\": [\"body\"]}}]',7,1),(93,'2019-05-03 15:44:51.925179','24','django自定义用户认证',2,'[{\"changed\": {\"fields\": [\"body\", \"format_content\", \"slug\"]}}]',7,1),(94,'2019-05-03 15:49:19.339400','24','django自定义用户认证',2,'[{\"changed\": {\"fields\": [\"body\", \"format_content\"]}}]',7,1),(95,'2019-05-03 15:50:09.577138','24','django自定义用户认证',2,'[{\"changed\": {\"fields\": [\"body\", \"format_content\", \"views\"]}}]',7,1),(96,'2019-05-03 15:59:13.617139','2','pycharm配置scss文件',2,'[{\"changed\": {\"fields\": [\"summary\", \"body\", \"format_content\"]}}]',7,1),(97,'2019-05-03 15:59:31.282238','3','文本超出隐藏',2,'[{\"changed\": {\"fields\": [\"body\", \"format_content\"]}}]',7,1),(98,'2019-05-03 15:59:47.401498','4','假设高度已知,左右宽度固定,中间自适应的几种方案',2,'[{\"changed\": {\"fields\": [\"body\", \"format_content\"]}}]',7,1),(99,'2019-05-03 16:00:00.638480','5','var,let和const的区别',2,'[{\"changed\": {\"fields\": [\"body\", \"format_content\"]}}]',7,1),(100,'2019-05-03 16:00:16.110537','6','箭头函数',2,'[{\"changed\": {\"fields\": [\"body\", \"format_content\"]}}]',7,1),(101,'2019-05-03 16:00:41.830728','7','在django中添加sitemap',2,'[{\"changed\": {\"fields\": [\"body\", \"format_content\"]}}]',7,1),(102,'2019-05-03 16:00:51.327721','8','git常用命令',2,'[{\"changed\": {\"fields\": [\"body\", \"format_content\"]}}]',7,1),(103,'2019-05-03 16:01:05.863953','9','Python获取本机IP地址',2,'[{\"changed\": {\"fields\": [\"body\", \"format_content\"]}}]',7,1),(104,'2019-05-03 16:01:17.958627','10','Python虚拟环境的安装',2,'[{\"changed\": {\"fields\": [\"body\", \"format_content\"]}}]',7,1),(105,'2019-05-03 16:01:30.627321','11','django把SQLite数据库的数据导入到MySQL数据库中',2,'[{\"changed\": {\"fields\": [\"body\", \"format_content\"]}}]',7,1),(106,'2019-05-03 16:01:39.931007','12','个人博客搭建一(创建应用)',2,'[{\"changed\": {\"fields\": [\"body\", \"format_content\"]}}]',7,1),(107,'2019-05-03 16:01:48.883323','13','个人博客搭建二(数据库结构设计)',2,'[{\"changed\": {\"fields\": [\"body\", \"format_content\"]}}]',7,1),(108,'2019-05-03 16:01:56.801084','14','个人博客搭建三(前端页面展示)',2,'[{\"changed\": {\"fields\": [\"body\", \"format_content\"]}}]',7,1),(109,'2019-05-03 16:02:04.490828','15','Gird布局',2,'[{\"changed\": {\"fields\": [\"body\", \"format_content\"]}}]',7,1),(110,'2019-05-03 16:02:11.531520','17','django实现JWT登录',2,'[{\"changed\": {\"fields\": [\"body\", \"format_content\"]}}]',7,1),(111,'2019-05-03 16:40:17.049207','24','django自定义用户认证',2,'[{\"changed\": {\"fields\": [\"body\", \"format_content\", \"views\"]}}]',7,1),(112,'2019-05-03 18:47:17.259933','28','site-push',1,'[{\"added\": {}}]',7,1),(113,'2019-05-03 18:57:10.262899','28','django发表文章时主动推送文章到百度',2,'[{\"changed\": {\"fields\": [\"title\", \"format_content\"]}}]',7,1),(114,'2019-05-07 01:22:23.165648','24','django自定义用户认证',2,'[{\"changed\": {\"fields\": [\"format_content\"]}}]',7,1),(115,'2019-05-07 06:44:01.689720','15','Gird布局',2,'[{\"changed\": {\"fields\": [\"format_content\"]}}]',7,1),(116,'2019-05-07 15:32:59.659059','5','Linux',1,'[{\"added\": {}}]',11,1),(117,'2019-05-07 15:34:00.305894','5','Linux',2,'[{\"changed\": {\"fields\": [\"index\"]}}]',11,1),(118,'2019-05-07 15:34:16.415939','3','个人随笔',2,'[{\"changed\": {\"fields\": [\"index\"]}}]',11,1),(119,'2019-05-07 15:35:14.620931','7','ubuntu',1,'[{\"added\": {}}]',9,1),(120,'2019-05-07 15:35:39.479423','7','Ubuntu',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',9,1),(121,'2019-05-07 17:18:23.657953','9','Linux',1,'[{\"added\": {}}]',14,1),(122,'2019-05-07 17:19:03.958786','28','django发表文章时主动推送文章到百度',2,'[{\"changed\": {\"fields\": [\"summary\", \"format_content\"]}}]',7,1);
/*!40000 ALTER TABLE `django_admin_log` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_content_type`
--

DROP TABLE IF EXISTS `django_content_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_content_type` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app_label` varchar(100) NOT NULL,
  `model` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `django_content_type_app_label_model_76bd3d3b_uniq` (`app_label`,`model`)
) ENGINE=InnoDB AUTO_INCREMENT=25 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_content_type`
--

LOCK TABLES `django_content_type` WRITE;
/*!40000 ALTER TABLE `django_content_type` DISABLE KEYS */;
INSERT INTO `django_content_type` VALUES (22,'accounts','daynumber'),(21,'accounts','oauth'),(23,'accounts','userip'),(1,'admin','logentry'),(3,'auth','group'),(2,'auth','permission'),(7,'blog','article'),(8,'blog','banner'),(9,'blog','category'),(10,'blog','friendlink'),(11,'blog','navigation'),(12,'blog','notice'),(13,'blog','siteinfo'),(14,'blog','tag'),(15,'blog','total'),(16,'blog','tui'),(17,'comments','aboutcomment'),(18,'comments','articlecomment'),(24,'comments','comment'),(19,'comments','commentuser'),(20,'comments','messagecomment'),(4,'contenttypes','contenttype'),(5,'sessions','session'),(6,'sites','site');
/*!40000 ALTER TABLE `django_content_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_migrations`
--

DROP TABLE IF EXISTS `django_migrations`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_migrations` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app` varchar(255) NOT NULL,
  `name` varchar(255) NOT NULL,
  `applied` datetime(6) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=42 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_migrations`
--

LOCK TABLES `django_migrations` WRITE;
/*!40000 ALTER TABLE `django_migrations` DISABLE KEYS */;
INSERT INTO `django_migrations` VALUES (1,'contenttypes','0001_initial','2019-04-25 15:51:19.381170'),(2,'contenttypes','0002_remove_content_type_name','2019-04-25 15:51:19.470175'),(3,'auth','0001_initial','2019-04-25 15:51:19.773192'),(4,'auth','0002_alter_permission_name_max_length','2019-04-25 15:51:19.856197'),(5,'auth','0003_alter_user_email_max_length','2019-04-25 15:51:19.863197'),(6,'auth','0004_alter_user_username_opts','2019-04-25 15:51:19.870198'),(7,'auth','0005_alter_user_last_login_null','2019-04-25 15:51:19.878198'),(8,'auth','0006_require_contenttypes_0002','2019-04-25 15:51:19.881198'),(9,'auth','0007_alter_validators_add_error_messages','2019-04-25 15:51:19.891199'),(10,'auth','0008_alter_user_username_max_length','2019-04-25 15:51:19.898199'),(11,'auth','0009_alter_user_last_name_max_length','2019-04-25 15:51:19.905200'),(12,'accounts','0001_initial','2019-04-25 15:51:20.305223'),(13,'admin','0001_initial','2019-04-25 15:51:20.461232'),(14,'admin','0002_logentry_remove_auto_add','2019-04-25 15:51:20.472232'),(15,'admin','0003_logentry_add_action_flag_choices','2019-04-25 15:51:20.484233'),(16,'blog','0001_initial','2019-04-25 15:51:21.402285'),(17,'comments','0001_initial','2019-04-25 15:51:22.477347'),(18,'sessions','0001_initial','2019-04-25 15:51:22.531350'),(19,'sites','0001_initial','2019-04-25 15:51:22.558351'),(20,'sites','0002_alter_domain_unique','2019-04-25 15:51:22.580353'),(21,'blog','0002_auto_20190425_1646','2019-04-25 16:47:04.433496'),(22,'blog','0003_auto_20190425_1850','2019-04-25 18:50:26.145850'),(23,'blog','0004_auto_20190426_2027','2019-04-26 20:27:16.063116'),(24,'comments','0002_auto_20190427_0039','2019-04-27 00:39:18.349154'),(25,'comments','0003_auto_20190427_0042','2019-04-27 00:42:41.917605'),(26,'comments','0004_auto_20190427_0045','2019-04-27 00:45:55.472974'),(27,'comments','0005_auto_20190427_0046','2019-04-27 00:46:32.633110'),(28,'comments','0006_auto_20190427_1308','2019-04-27 13:08:50.152142'),(29,'comments','0007_auto_20190427_1329','2019-04-27 13:29:24.234473'),(30,'comments','0008_auto_20190427_1334','2019-04-27 13:34:44.398379'),(31,'comments','0009_auto_20190427_2307','2019-04-27 23:07:27.038929'),(32,'blog','0005_article_status','2019-04-29 13:17:26.400924'),(33,'blog','0006_auto_20190429_1320','2019-04-29 13:20:50.962427'),(34,'accounts','0002_auto_20190430_1453','2019-04-30 14:53:53.548526'),(35,'accounts','0003_auto_20190430_1457','2019-04-30 14:58:00.361643'),(36,'accounts','0004_auto_20190430_1458','2019-04-30 14:58:28.956278'),(37,'accounts','0005_auto_20190430_1502','2019-04-30 15:03:05.715108'),(38,'blog','0002_auto_20190430_1525','2019-04-30 15:25:55.166436'),(39,'blog','0003_auto_20190430_1536','2019-04-30 15:36:54.481147'),(40,'auth','0010_alter_group_name_max_length','2019-05-03 16:37:24.772695'),(41,'auth','0011_update_proxy_permissions','2019-05-03 16:37:24.825739');
/*!40000 ALTER TABLE `django_migrations` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_session`
--

DROP TABLE IF EXISTS `django_session`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_session` (
  `session_key` varchar(40) NOT NULL,
  `session_data` longtext NOT NULL,
  `expire_date` datetime(6) NOT NULL,
  PRIMARY KEY (`session_key`),
  KEY `django_session_expire_date_a5c62663` (`expire_date`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_session`
--

LOCK TABLES `django_session` WRITE;
/*!40000 ALTER TABLE `django_session` DISABLE KEYS */;
INSERT INTO `django_session` VALUES ('0hgohrvomdfjp35t1puvobrn5olcqodi','ZTM1ZGUyMjg3N2ZjMzc0YjQ1Y2ZmZmYxNzYxYTY4NWJkNDliYTQ5YTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiYWNjb3VudHMuYmFja2VuZHMuQ3VzdG9tQmFja2VuZCIsIl9hdXRoX3VzZXJfaGFzaCI6ImYxZmY4ZjEzOTY2Y2Y2NGZmNjk2MzNjNmUwNmM2ZjZlOGU1OTQ1ZWQifQ==','2019-05-21 15:07:28.043214'),('1glnrudv9jxtpvwa2hqn6p270nyko3y3','ZjNjNzYwMDViNDc2ZWNkNzU1ZjA5ZDY0Y2ZhNDcxZmFlNTMwN2M4Zjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4NzkzY2RiNTMyYjNlYzM3ZGE0YWE3ZGU3YzljMjI0OTM2NDJjOWIwIn0=','2019-05-09 16:02:02.271941'),('4f8tuf4bg8lye9as5wgq4xb8sm8fm50f','Y2FiMzJhNzlhMTMxMDVkZWM3OTFlNWI4MzU5YWVkMGMwYjdhYmQ2Yzp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiYWNjb3VudHMuYmFja2VuZHMuQ3VzdG9tQmFja2VuZCIsIl9hdXRoX3VzZXJfaGFzaCI6IjJmOGIyODdjOTViYTlkNjU2MDBlZTExYmJlNWFlYmVjMjczOWM5YTAifQ==','2019-05-23 06:05:15.381470'),('5312iwdf5l8vx6xxwo2762uyndeni8nf','MmU0Nzk2ODNmZDVhMmQwZjlkZWQ4MjM2ZWVmYmI2ODY0MTU1MjgxZTp7ImlzX3JlYWRfMSI6MTU1NjE5MjI3OS45NDEwNzc3fQ==','2019-05-09 19:37:59.968079'),('abmn8ueqamwb4zf4pv8f1uheduxuqrn2','ZjNjNzYwMDViNDc2ZWNkNzU1ZjA5ZDY0Y2ZhNDcxZmFlNTMwN2M4Zjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4NzkzY2RiNTMyYjNlYzM3ZGE0YWE3ZGU3YzljMjI0OTM2NDJjOWIwIn0=','2019-05-10 20:19:02.249040'),('scdmyyfdq95mb9u3lxptmh0vka0xeb5u','ZTM1ZGUyMjg3N2ZjMzc0YjQ1Y2ZmZmYxNzYxYTY4NWJkNDliYTQ5YTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiYWNjb3VudHMuYmFja2VuZHMuQ3VzdG9tQmFja2VuZCIsIl9hdXRoX3VzZXJfaGFzaCI6ImYxZmY4ZjEzOTY2Y2Y2NGZmNjk2MzNjNmUwNmM2ZjZlOGU1OTQ1ZWQifQ==','2019-05-17 18:57:47.716791'),('uznfbx5aa5agnnj7i1v53hyy77bptkfu','ZjNjNzYwMDViNDc2ZWNkNzU1ZjA5ZDY0Y2ZhNDcxZmFlNTMwN2M4Zjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4NzkzY2RiNTMyYjNlYzM3ZGE0YWE3ZGU3YzljMjI0OTM2NDJjOWIwIn0=','2019-05-09 15:54:37.271488'),('yifajbbh2ayut7l1bw1jbtqpbie0o3z6','ZTM1ZGUyMjg3N2ZjMzc0YjQ1Y2ZmZmYxNzYxYTY4NWJkNDliYTQ5YTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiYWNjb3VudHMuYmFja2VuZHMuQ3VzdG9tQmFja2VuZCIsIl9hdXRoX3VzZXJfaGFzaCI6ImYxZmY4ZjEzOTY2Y2Y2NGZmNjk2MzNjNmUwNmM2ZjZlOGU1OTQ1ZWQifQ==','2019-05-21 17:14:35.486901'),('zna59tdco8uarmq3tml17b6gq85vpiig','ZTM1ZGUyMjg3N2ZjMzc0YjQ1Y2ZmZmYxNzYxYTY4NWJkNDliYTQ5YTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiYWNjb3VudHMuYmFja2VuZHMuQ3VzdG9tQmFja2VuZCIsIl9hdXRoX3VzZXJfaGFzaCI6ImYxZmY4ZjEzOTY2Y2Y2NGZmNjk2MzNjNmUwNmM2ZjZlOGU1OTQ1ZWQifQ==','2019-05-21 06:29:57.021886');
/*!40000 ALTER TABLE `django_session` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_site`
--

DROP TABLE IF EXISTS `django_site`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_site` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `domain` varchar(100) NOT NULL,
  `name` varchar(50) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `django_site_domain_a2e37b91_uniq` (`domain`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_site`
--

LOCK TABLES `django_site` WRITE;
/*!40000 ALTER TABLE `django_site` DISABLE KEYS */;
INSERT INTO `django_site` VALUES (1,'www.zhangwurui.com','个人博客');
/*!40000 ALTER TABLE `django_site` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2019-05-09 16:17:34
